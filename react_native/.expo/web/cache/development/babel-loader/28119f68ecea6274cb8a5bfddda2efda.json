{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\FinalProject\\\\react_native\\\\FunctionalComponents\\\\FCFacBookLogin.js\";\nimport * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Facebook from 'expo-auth-session/providers/facebook';\nimport { ResponseType } from 'expo-auth-session';\nimport { Button, Icon } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport headers from \"../helpers/messages.json\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from '@react-navigation/native';\nimport { createIconSetFromFontello } from \"@expo/vector-icons\";\nWebBrowser.maybeCompleteAuthSession();\nvar FB_APP_ID = \"174194160927637\";\nexport default function FCFacebookLogin() {\n  var navigation = useNavigation();\n\n  var _Facebook$useAuthRequ = Facebook.useAuthRequest({\n    clientId: FB_APP_ID,\n    responseType: ResponseType.Token\n  }),\n      _Facebook$useAuthRequ2 = _slicedToArray(_Facebook$useAuthRequ, 4),\n      request = _Facebook$useAuthRequ2[0],\n      response = _Facebook$useAuthRequ2[1],\n      promptAsync = _Facebook$useAuthRequ2[2],\n      token = _Facebook$useAuthRequ2[3];\n\n  var _React$useState = React.useState({\n    email: '',\n    name: '',\n    picture: 'null'\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  function LoginTofacebook() {\n    return _regeneratorRuntime.async(function LoginTofacebook$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(promptAsync());\n\n          case 2:\n            if ((response == null ? void 0 : response.type) === 'success') {\n              loadDataFromServer(response.params.access_token);\n              console.log(\"USER: \", user);\n              AsyncStorage.setItem('login', user);\n            } else (response == null ? void 0 : response.type) === 'error';\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function loadDataFromServer(token) {\n    var details, user1;\n    return _regeneratorRuntime.async(function loadDataFromServer$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(\"loaddata\", token);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + token + \"&fields=id,name,email,picture\"));\n\n          case 3:\n            details = _context2.sent;\n            console.log(\"USER: \", user);\n            _context2.next = 7;\n            return _regeneratorRuntime.awrap(details.json());\n\n          case 7:\n            user1 = _context2.sent;\n            console.log(\"name: \" + user1.name + \"\\npicture: \" + user1.picture.data.url + \"\\nemail: \" + user1.email);\n            _context2.next = 11;\n            return _regeneratorRuntime.awrap(setUser({\n              email: user1.email,\n              name: user1.name,\n              picture: user1.picture.data.url\n            }));\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(Button, {\n    disabled: !request,\n    title: headers.continueWithFb,\n    onPress: LoginTofacebook,\n    style: {\n      width: 250,\n      alignSelf: 'center'\n    },\n    icon: React.createElement(Ionicons, {\n      name: \"logo-facebook\",\n      size: 26,\n      color: \"#3b5998\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/react_native/FunctionalComponents/FCFacBookLogin.js"],"names":["React","WebBrowser","Facebook","ResponseType","Button","Icon","Ionicons","headers","AsyncStorage","useNavigation","createIconSetFromFontello","maybeCompleteAuthSession","FB_APP_ID","FCFacebookLogin","navigation","useAuthRequest","clientId","responseType","Token","request","response","promptAsync","token","useState","email","name","picture","user","setUser","LoginTofacebook","type","loadDataFromServer","params","access_token","console","log","setItem","fetch","details","json","user1","data","url","continueWithFb","width","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as Facebook from 'expo-auth-session/providers/facebook';\r\nimport { ResponseType } from 'expo-auth-session';\r\nimport { Button, Icon } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport headers from '../helpers/messages.json';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { createIconSetFromFontello } from 'react-native-vector-icons';\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\nconst FB_APP_ID = \"174194160927637\";\r\n\r\nexport default function FCFacebookLogin() {\r\n    const navigation = useNavigation();\r\n    \r\n    const [request, response, promptAsync, token] = Facebook.useAuthRequest({\r\n        clientId: FB_APP_ID,\r\n        responseType: ResponseType.Token,\r\n    });\r\n\r\n    const [user, setUser] = React.useState({\r\n        email: '',\r\n        name: '',\r\n        picture: 'null'\r\n    });\r\n\r\n    async function LoginTofacebook() {\r\n        await promptAsync();\r\n        //console.log(\"request\", request);\r\n        if (response?.type === 'success') {\r\n           // console.log(\"ACCESS_TOKEN\", response.params.access_token);\r\n            //console.log(response?.type);\r\n            loadDataFromServer(response.params.access_token);\r\n            //Add save to Asyncstorage the picture and name\r\n            console.log(\"USER: \", user);\r\n            AsyncStorage.setItem('login', user);\r\n            //navigation.push('Home');\r\n        }\r\n        else (response?.type === 'error')\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    async function loadDataFromServer(token) {\r\n        console.log(\"loaddata\",token )\r\n        const details = await fetch(`https://graph.facebook.com/me?access_token=${token}&fields=id,name,email,picture`);\r\n        console.log(\"USER: \", user);\r\n        let user1 = await details.json();\r\n        console.log(`name: ${user1.name}\\npicture: ${user1.picture.data.url}\\nemail: ${user1.email}`);\r\n        await setUser({\r\n            email: user1.email,\r\n            name: user1.name,\r\n            picture: user1.picture.data.url\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Button\r\n            disabled={!request}\r\n            title={headers.continueWithFb}\r\n            onPress={LoginTofacebook}\r\n            style={{ width: 250, alignSelf: 'center' }}\r\n            icon={\r\n                <Ionicons\r\n                    name=\"logo-facebook\"\r\n                    size={26}\r\n                    color=\"#3b5998\"\r\n                />\r\n            }\r\n        />\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}