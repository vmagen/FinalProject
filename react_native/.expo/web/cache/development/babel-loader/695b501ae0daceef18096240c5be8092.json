{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\FinalProject\\\\react_native\\\\FunctionalComponents\\\\FCFacBookLogin.js\";\nimport * as React from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Facebook from 'expo-auth-session/providers/facebook';\nimport { ResponseType } from 'expo-auth-session';\nimport { Button, Icon } from 'react-native-elements';\nimport { Ionicons } from '@expo/vector-icons';\nimport headers from \"../helpers/messages.json\";\nimport helpers from \"../helpers/helperFunctions\";\nWebBrowser.maybeCompleteAuthSession();\nexport default function FCFacebookLogin() {\n  var _Facebook$useAuthRequ = Facebook.useAuthRequest({\n    clientId: '174194160927637',\n    responseType: ResponseType.Token\n  }),\n      _Facebook$useAuthRequ2 = _slicedToArray(_Facebook$useAuthRequ, 4),\n      request = _Facebook$useAuthRequ2[0],\n      response = _Facebook$useAuthRequ2[1],\n      promptAsync = _Facebook$useAuthRequ2[2],\n      token = _Facebook$useAuthRequ2[3];\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      user = _React$useState2[0],\n      setUser = _React$useState2[1];\n\n  function LoginTofacebook() {\n    return _regeneratorRuntime.async(function LoginTofacebook$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(promptAsync());\n\n          case 2:\n            if ((response == null ? void 0 : response.type) === 'success') {\n              console.log(\"ACCESS_TOKEN\", response.params.access_token);\n              console.log(response == null ? void 0 : response.type);\n              loadDataFromServer(response.params.access_token);\n            } else (response == null ? void 0 : response.type) === 'error';\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function loadDataFromServer(token) {\n    var details, user1;\n    return _regeneratorRuntime.async(function loadDataFromServer$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://graph.facebook.com/me?access_token=\" + token + \"&fields=id,name,email,picture\"));\n\n          case 2:\n            details = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(details.json());\n\n          case 5:\n            user1 = _context2.sent;\n            console.log(\"name: \" + user1.name + \"\\npicture: \" + user1.picture.data.url);\n            helpers.SaveToAsyncStorgae(user, \"login\");\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(Button, {\n    disabled: !request,\n    title: headers.continueWithFb,\n    onPress: LoginTofacebook,\n    style: {\n      width: 250,\n      alignSelf: 'center'\n    },\n    icon: React.createElement(Ionicons, {\n      name: \"logo-facebook\",\n      size: 26,\n      color: \"#3b5998\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/react_native/FunctionalComponents/FCFacBookLogin.js"],"names":["React","WebBrowser","Facebook","ResponseType","Button","Icon","Ionicons","headers","helpers","maybeCompleteAuthSession","FCFacebookLogin","useAuthRequest","clientId","responseType","Token","request","response","promptAsync","token","useState","user","setUser","LoginTofacebook","type","console","log","params","access_token","loadDataFromServer","fetch","details","json","user1","name","picture","data","url","SaveToAsyncStorgae","continueWithFb","width","alignSelf"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAO,KAAKC,QAAZ,MAA0B,sCAA1B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,uBAA7B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AAEAP,UAAU,CAACQ,wBAAX;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA,8BACUR,QAAQ,CAACS,cAAT,CAAwB;AACpEC,IAAAA,QAAQ,EAAE,iBAD0D;AAEpEC,IAAAA,YAAY,EAAEV,YAAY,CAACW;AAFyC,GAAxB,CADV;AAAA;AAAA,MAC/BC,OAD+B;AAAA,MACtBC,QADsB;AAAA,MACZC,WADY;AAAA,MACCC,KADD;;AAAA,wBAMdlB,KAAK,CAACmB,QAAN,EANc;AAAA;AAAA,MAM/BC,IAN+B;AAAA,MAMzBC,OANyB;;AAQtC,WAAeC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACUL,WAAW,EADrB;;AAAA;AAEI,gBAAI,CAAAD,QAAQ,QAAR,YAAAA,QAAQ,CAAEO,IAAV,MAAmB,SAAvB,EAAkC;AAE9BC,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BT,QAAQ,CAACU,MAAT,CAAgBC,YAA5C;AACAH,cAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ,oBAAYA,QAAQ,CAAEO,IAAtB;AACAK,cAAAA,kBAAkB,CAACZ,QAAQ,CAACU,MAAT,CAAgBC,YAAjB,CAAlB;AAEH,aAND,MAOM,CAAAX,QAAQ,QAAR,YAAAA,QAAQ,CAAEO,IAAV,MAAmB,OAApB;;AATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAeA,WAAeK,kBAAf,CAAkCV,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC0BW,KAAK,iDAA+CX,KAA/C,mCAD/B;;AAAA;AACUY,YAAAA,OADV;AAAA;AAAA,6CAEoBA,OAAO,CAACC,IAAR,EAFpB;;AAAA;AAEQC,YAAAA,KAFR;AAGIR,YAAAA,OAAO,CAACC,GAAR,YAAqBO,KAAK,CAACC,IAA3B,mBAA6CD,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmBC,GAAhE;AACA5B,YAAAA,OAAO,CAAC6B,kBAAR,CAA2BjB,IAA3B,EAAiC,OAAjC;;AAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASA,SACI,oBAAC,MAAD;AACI,IAAA,QAAQ,EAAE,CAACL,OADf;AAEI,IAAA,KAAK,EAAER,OAAO,CAAC+B,cAFnB;AAGI,IAAA,OAAO,EAAEhB,eAHb;AAII,IAAA,KAAK,EAAE;AAACiB,MAAAA,KAAK,EAAC,GAAP;AAAWC,MAAAA,SAAS,EAAC;AAArB,KAJX;AAKI,IAAA,IAAI,EACA,oBAAC,QAAD;AACI,MAAA,IAAI,EAAC,eADT;AAEI,MAAA,IAAI,EAAE,EAFV;AAGI,MAAA,KAAK,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAgBH","sourcesContent":["import * as React from 'react';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as Facebook from 'expo-auth-session/providers/facebook';\r\nimport { ResponseType } from 'expo-auth-session';\r\nimport { Button, Icon } from 'react-native-elements';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport headers from '../helpers/messages.json';\r\nimport helpers from '../helpers/helperFunctions';\r\n\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function FCFacebookLogin() {\r\n    const [request, response, promptAsync, token] = Facebook.useAuthRequest({\r\n        clientId: '174194160927637',\r\n        responseType: ResponseType.Token,\r\n    });\r\n\r\n    const [user, setUser] = React.useState();\r\n\r\n    async function LoginTofacebook() {\r\n        await promptAsync();\r\n        if (response?.type === 'success') {\r\n\r\n            console.log(\"ACCESS_TOKEN\", response.params.access_token);\r\n            console.log(response?.type);\r\n            loadDataFromServer(response.params.access_token);\r\n            //Add save to Asyncstorage the picture and name\r\n        }\r\n        else (response?.type === 'error')\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    async function loadDataFromServer(token) {\r\n        const details = await fetch(`https://graph.facebook.com/me?access_token=${token}&fields=id,name,email,picture`);\r\n        let user1=await details.json();\r\n        console.log(`name: ${user1.name}\\npicture: ${user1.picture.data.url}`);\r\n        helpers.SaveToAsyncStorgae(user, \"login\");\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Button\r\n            disabled={!request}\r\n            title={headers.continueWithFb}\r\n            onPress={LoginTofacebook}\r\n            style={{width:250,alignSelf:'center'}}\r\n            icon={\r\n                <Ionicons\r\n                    name=\"logo-facebook\"\r\n                    size={26}\r\n                    color=\"#3b5998\"\r\n                />\r\n            }\r\n        />\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}