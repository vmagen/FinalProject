{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\FinalProject\\\\react_native\\\\FunctionalComponents\\\\FCBubbles.js\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Tooltip } from 'react-native-elements';\nimport helpers from \"../helpers/helperFunctions\";\nimport * as Animatable from 'react-native-animatable';\nexport default function FCBubbles(props) {\n  var _this = this;\n\n  var colors = [\"#9B0000\", \"#6D0000\", \"#580000\", \"#430000\", \"#E96245\", \"#F4AC90\", \"#F1E6CD\", \"#ED8A68\"];\n  var sizes = [60, 80, 100, 120, 70, 80, 90, 50];\n  var cardGap = 16;\n  return React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      marginTop: 20,\n      marginBottom: 50,\n      marginLeft: 20,\n      marginRight: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, props.myGroups.map(function (subject, i) {\n    var circleWidth = helpers.ReturnRandomData(sizes);\n    console.log(\"SUBJECT\", subject.name);\n    return React.createElement(TouchableOpacity, {\n      key: i,\n      style: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n          width: 2,\n          height: 4\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n        elevation: 5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, React.createElement(Animatable.View, {\n      animation: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }), React.createElement(Image, {\n      source: {\n        uri: subject.picture\n      },\n      style: {\n        padding: 10,\n        margin: helpers.ReturnRandomNumber(cardGap),\n        marginLeft: i % 2 !== 0 ? cardGap : 0,\n        width: circleWidth,\n        height: circleWidth,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderRadius: 100,\n        borderColor: helpers.ReturnRandomData(colors),\n        borderWidth: 4\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), React.createElement(View, {\n      style: {\n        position: 'absolute',\n        alignContent: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    })));\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center'\n  },\n  View: {\n    position: 'absolute',\n    marginRight: 25,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  text: {\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#691A1A'\n  }\n});","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/react_native/FunctionalComponents/FCBubbles.js"],"names":["React","Tooltip","helpers","Animatable","FCBubbles","props","colors","sizes","cardGap","flexDirection","flexWrap","marginTop","marginBottom","marginLeft","marginRight","myGroups","map","subject","i","circleWidth","ReturnRandomData","console","log","name","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","uri","picture","padding","margin","ReturnRandomNumber","justifyContent","alignItems","borderRadius","borderColor","borderWidth","position","alignContent","styles","StyleSheet","create","container","View","text","fontWeight","fontSize","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { View, Text, StyleSheet, TouchableOpacity, Dimensions, Image } from 'react-native'\r\nimport { Tooltip } from 'react-native-elements';\r\nimport helpers from '../helpers/helperFunctions';\r\nimport * as Animatable from 'react-native-animatable';\r\n\r\nexport default function FCBubbles(props) {\r\n\r\n  const colors = [\"#9B0000\", \"#6D0000\", \"#580000\", \"#430000\",\r\n    \"#E96245\", \"#F4AC90\", \"#F1E6CD\", \"#ED8A68\"];\r\n\r\n  const sizes = [60, 80, 100, 120, 70, 80, 90, 50];\r\n\r\n\r\n  const cardGap = 16;\r\n  //const cardGap = (Dimensions.get('window').width - cardGap * 3) / 2;\r\n\r\n  return (\r\n    <View style={{ flexDirection: 'row', flexWrap: 'wrap', marginTop: 20, marginBottom: 50, marginLeft: 20, marginRight: 20 }}>\r\n      {props.myGroups.map((subject, i) => {\r\n        const circleWidth = helpers.ReturnRandomData(sizes);\r\n        console.log(\"SUBJECT\", subject.name);\r\n        return (\r\n          <TouchableOpacity\r\n            key={i}\r\n            style={{\r\n              shadowColor: \"#000\",\r\n              shadowOffset: {\r\n                width: 2,\r\n                height: 4,\r\n              },\r\n              shadowOpacity: 0.25,\r\n              shadowRadius: 3.84,\r\n              elevation: 5,\r\n            }} >\r\n            <Animatable.View\r\n              animation=\"\">\r\n              <View>\r\n              </View>\r\n              <Image\r\n                source={{ uri: subject.picture }}\r\n                style={{\r\n                  padding: 10,\r\n                  margin: helpers.ReturnRandomNumber(cardGap),\r\n                  marginLeft: i % 2 !== 0 ? cardGap : 0,\r\n                  width: circleWidth,\r\n                  height: circleWidth,\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  borderRadius: 100,\r\n                  borderColor: helpers.ReturnRandomData(colors),\r\n                  borderWidth: 4\r\n                }}\r\n              ></Image>\r\n              <View style={{\r\n                position: 'absolute',\r\n                alignContent: 'center',\r\n                justifyContent: 'center',\r\n              }}>\r\n              </View>\r\n            </Animatable.View>\r\n          </TouchableOpacity>\r\n        );\r\n      })}\r\n    </View>\r\n  )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  View: {\r\n    position: 'absolute',\r\n    marginRight: 25,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontWeight: 'bold', fontSize: 30, color: '#691A1A'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}