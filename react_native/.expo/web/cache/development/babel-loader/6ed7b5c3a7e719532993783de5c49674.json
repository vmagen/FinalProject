{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\vmage\\\\OneDrive\\\\Ruppin\\\\\\u05E9\\u05E0\\u05D4 \\u05D2\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\FinalProject\\\\React\\\\React_Native\\\\arvinoDemo\\\\Componenets\\\\CCHomePage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\n\nvar CCHomePage = function (_Component) {\n  _inherits(CCHomePage, _Component);\n\n  var _super = _createSuper(CCHomePage);\n\n  function CCHomePage() {\n    var _this;\n\n    _classCallCheck(this, CCHomePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      wineries: [],\n      apiUrl: 'http://proj.ruppin.ac.il/bgroup15/prod/api/'\n    };\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(_this.state.apiUrl + 'Winery', {\n                method: 'GET',\n                headers: new Headers({\n                  'Content-Type': 'application/json; charset=UTF-8',\n                  'Accept': 'application/json; charset=UTF-8'\n                })\n              }).then(function (res) {\n                console.log(JSON.stringify(res));\n                return JSON.stringify(res);\n              }).then(function (result) {\n                _this.setState({\n                  wineries: result\n                });\n              }, function (error) {\n                console.log(\"err post=\", error);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(CCHomePage, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        horizontal: true,\n        contentContainerStyle: {\n          flexGrow: 1,\n          flexDirection: 'row',\n          justifyContent: 'center',\n          marginTop: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, this.state.wineries.map(function (item) {\n        React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }\n        }, item.WineryName);\n      }));\n    }\n  }]);\n\n  return CCHomePage;\n}(Component);\n\nexport { CCHomePage as default };","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/React/React_Native/arvinoDemo/Componenets/CCHomePage.js"],"names":["React","Component","CCHomePage","state","wineries","apiUrl","componentDidMount","fetch","method","headers","Headers","then","res","console","log","JSON","stringify","result","setState","error","flexGrow","flexDirection","justifyContent","marginTop","map","item","WineryName"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;IAGqBC,U;;;;;;;;;;;;;;;UAEjBC,K,GAAM;AACFC,MAAAA,QAAQ,EAAC,EADP;AAEFC,MAAAA,MAAM,EAAE;AAFN,K;;UAKNC,iB,GAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACTC,KAAK,CAAC,MAAKJ,KAAL,CAAWE,MAAX,GAAoB,QAArB,EACZ;AACEG,gBAAAA,MAAM,EAAE,KADV;AAEEC,gBAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,kCAAgB,iCADG;AAEnB,4BAAU;AAFS,iBAAZ;AAFX,eADY,CAAL,CAQNC,IARM,CAQD,UAAAC,GAAG,EAAI;AACXC,gBAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAZ;AACA,uBAAOG,IAAI,CAACC,SAAL,CAAeJ,GAAf,CAAP;AACD,eAXM,EAYND,IAZM,CAaL,UAACM,MAAD,EAAY;AACV,sBAAKC,QAAL,CAAc;AACZd,kBAAAA,QAAQ,EAAEa;AADE,iBAAd;AAGD,eAjBI,EAkBL,UAACE,KAAD,EAAW;AACTN,gBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,KAAzB;AACD,eApBI,CADS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;;6BAyBT;AAAA;;AACL,aACI,oBAAC,UAAD;AACI,QAAA,UAAU,EAAE,IADhB;AAEI,QAAA,qBAAqB,EAAE;AACnBC,UAAAA,QAAQ,EAAE,CADS;AAEnBC,UAAAA,aAAa,EAAE,KAFI;AAGnBC,UAAAA,cAAc,EAAE,QAHG;AAInBC,UAAAA,SAAS,EAAC;AAJS,SAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQS,KAAKpB,KAAL,CAAWC,QAAX,CAAoBoB,GAApB,CAAwB,UAACC,IAAD,EAAQ;AAC7B,4BAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOA,IAAI,CAACC,UAAZ;AACH,OAFA,CART,CADJ;AAcH;;;;EA/CmCzB,S;;SAAnBC,U","sourcesContent":["import React, { Component } from 'react'\r\nimport { View, ScrollView } from \"react-native\";\r\n\r\nexport default class CCHomePage extends Component {\r\n    \r\n    state={\r\n        wineries:[],\r\n        apiUrl: 'http://proj.ruppin.ac.il/bgroup15/prod/api/'\r\n    }\r\n\r\n    componentDidMount=async()=>{\r\n      await  fetch(this.state.apiUrl + 'Winery',\r\n      {\r\n        method: 'GET',\r\n        headers: new Headers({\r\n          'Content-Type': 'application/json; charset=UTF-8',\r\n          'Accept': 'application/json; charset=UTF-8',\r\n        })\r\n      })\r\n      .then(res => {\r\n        console.log(JSON.stringify(res));\r\n        return JSON.stringify(res);\r\n      })\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            wineries: result\r\n          })\r\n        },\r\n        (error) => {\r\n          console.log(\"err post=\", error);\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ScrollView\r\n                horizontal={true}\r\n                contentContainerStyle={{\r\n                    flexGrow: 1,\r\n                    flexDirection: 'row',\r\n                    justifyContent: 'center',\r\n                    marginTop:200\r\n                }}>\r\n                    {this.state.wineries.map((item)=>{\r\n                        <View>{item.WineryName}</View>\r\n                    })}\r\n            </ScrollView>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}