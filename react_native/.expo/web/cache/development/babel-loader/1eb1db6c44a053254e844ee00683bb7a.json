{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar FBGraphRequest = function () {\n  function FBGraphRequest(graphPath, config, callback) {\n    _classCallCheck(this, FBGraphRequest);\n\n    _defineProperty(this, \"graphPath\", void 0);\n\n    _defineProperty(this, \"config\", void 0);\n\n    _defineProperty(this, \"callback\", void 0);\n\n    this.graphPath = graphPath;\n    this.config = config ? config : {};\n    this.callback = callback ? callback : function () {};\n  }\n\n  _createClass(FBGraphRequest, [{\n    key: \"addStringParameter\",\n    value: function addStringParameter(paramString, key) {\n      if (this.config != null && this.config.parameters != null) {\n        this.config.parameters[key] = {\n          string: paramString\n        };\n      }\n    }\n  }]);\n\n  return FBGraphRequest;\n}();\n\nmodule.exports = FBGraphRequest;","map":{"version":3,"sources":["FBGraphRequest.js"],"names":["constructor","config","callback","addStringParameter","string","paramString","module"],"mappings":"AAuBA;;;;;;;;;;;;;;;;;;;;;IA0BA,c;AAmBEA,0BAAW,SAAXA,EAAW,MAAXA,EAAW,QAAXA,EAIE;AAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,MAAA,GAAcC,MAAM,GAAA,MAAA,GAApB,EAAA;AACA,SAAA,QAAA,GAAgBC,QAAQ,GAAA,QAAA,GAAc,YAAM,CAA5C,CAAA;AACD;;;;WAKDC,4BAAkB,WAAlBA,EAAkB,GAAlBA,EAAqD;AACnD,UAAI,KAAA,MAAA,IAAA,IAAA,IAAuB,KAAA,MAAA,CAAA,UAAA,IAA3B,IAAA,EAA2D;AACzD,aAAA,MAAA,CAAA,UAAA,CAAA,GAAA,IAA8B;AAACC,UAAAA,MAAM,EAAEC;AAAT,SAA9B;AACD;AACF;;;;;;AAGHC,MAAM,CAANA,OAAAA,GAAAA,cAAAA","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\ntype GraphRequestCallback = (error: ?Object, result: ?Object) => void;\ntype GraphRequestConfig = {\n  /**\n   * The httpMethod to use for the request, for example \"GET\" or \"POST\".\n   */\n  httpMethod?: string,\n  /**\n   * The Graph API version to use (e.g., \"v2.0\")\n   */\n  version?: string,\n  /**\n   * The request parameters.\n   */\n  parameters?: GraphRequestParameters,\n  /**\n   * The access token used by the request.\n   */\n  accessToken?: string,\n};\ntype GraphRequestParameters = {[key: string]: Object};\n\n/**\n * Represents a Graph API request and provides batch request supports.\n */\nclass FBGraphRequest {\n  /**\n   * The Graph API endpoint to use for the request, for example \"me\".\n   */\n  graphPath: string;\n\n  /**\n   * The optional config for the request.\n   */\n  config: ?GraphRequestConfig;\n\n  /**\n   * Called upon completion or failure of the request.\n   */\n  callback: ?GraphRequestCallback;\n\n  /**\n   * Constructs a new Graph API request.\n   */\n  constructor(\n    graphPath: string,\n    config: ?GraphRequestConfig,\n    callback: ?GraphRequestCallback,\n  ) {\n    this.graphPath = graphPath;\n    this.config = config ? config : {};\n    this.callback = callback ? callback : () => {};\n  }\n\n  /**\n   * Adds a string parameter to the request.\n   */\n  addStringParameter(paramString: string, key: string) {\n    if (this.config != null && this.config.parameters != null) {\n      this.config.parameters[key] = {string: paramString};\n    }\n  }\n}\n\nmodule.exports = FBGraphRequest;\n"]},"metadata":{},"sourceType":"script"}