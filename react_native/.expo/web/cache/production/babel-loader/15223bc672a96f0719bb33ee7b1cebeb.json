{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ActivityIndicator from\"../ActivityIndicator\";import Surface from\"../Surface\";import CrossFadeIcon from\"../CrossFadeIcon\";import Icon from\"../Icon\";import Text from\"../Typography/Text\";import TouchableRipple from\"../TouchableRipple/TouchableRipple\";import{black,white}from\"../../styles/colors\";import{withTheme}from\"../../core/theming\";var FAB=function FAB(_ref){var small=_ref.small,icon=_ref.icon,label=_ref.label,_ref$accessibilityLab=_ref.accessibilityLabel,accessibilityLabel=_ref$accessibilityLab===void 0?label:_ref$accessibilityLab,accessibilityState=_ref.accessibilityState,_ref$animated=_ref.animated,animated=_ref$animated===void 0?true:_ref$animated,customColor=_ref.color,disabled=_ref.disabled,onPress=_ref.onPress,onLongPress=_ref.onLongPress,theme=_ref.theme,style=_ref.style,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,_ref$uppercase=_ref.uppercase,uppercase=_ref$uppercase===void 0?true:_ref$uppercase,loading=_ref.loading,testID=_ref.testID,rest=_objectWithoutProperties(_ref,[\"small\",\"icon\",\"label\",\"accessibilityLabel\",\"accessibilityState\",\"animated\",\"color\",\"disabled\",\"onPress\",\"onLongPress\",\"theme\",\"style\",\"visible\",\"uppercase\",\"loading\",\"testID\"]);var _React$useRef=React.useRef(new Animated.Value(visible?1:0)),visibility=_React$useRef.current;var scale=theme.animation.scale;React.useEffect(function(){if(visible){Animated.timing(visibility,{toValue:1,duration:200*scale,useNativeDriver:true}).start();}else{Animated.timing(visibility,{toValue:0,duration:150*scale,useNativeDriver:true}).start();}},[visible,scale,visibility]);var IconComponent=animated?CrossFadeIcon:Icon;var disabledColor=color(theme.dark?white:black).alpha(0.12).rgb().string();var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?disabled?disabledColor:theme.colors.accent:_ref2$backgroundColor;var foregroundColor;if(typeof customColor!=='undefined'){foregroundColor=customColor;}else if(disabled){foregroundColor=color(theme.dark?white:black).alpha(0.32).rgb().string();}else{foregroundColor=!color(backgroundColor).isLight()?white:'rgba(0, 0, 0, .54)';}var rippleColor=color(foregroundColor).alpha(0.32).rgb().string();return React.createElement(Surface,_extends({},rest,{style:[{backgroundColor:backgroundColor,opacity:visibility,transform:[{scale:visibility}]},styles.container,disabled&&styles.disabled,style],pointerEvents:visible?'auto':'none'}),React.createElement(TouchableRipple,{borderless:true,onPress:onPress,onLongPress:onLongPress,rippleColor:rippleColor,disabled:disabled,accessibilityLabel:accessibilityLabel,accessibilityTraits:disabled?['button','disabled']:'button',accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:_objectSpread(_objectSpread({},accessibilityState),{},{disabled:disabled}),style:styles.touchable,testID:testID},React.createElement(View,{style:[styles.content,label?styles.extended:small?styles.small:styles.standard],pointerEvents:\"none\"},icon&&loading!==true?React.createElement(IconComponent,{source:icon,size:24,color:foregroundColor}):null,loading?React.createElement(ActivityIndicator,{size:18,color:foregroundColor}):null,label?React.createElement(Text,{selectable:false,style:[styles.label,uppercase&&styles.uppercaseLabel,_objectSpread({color:foregroundColor},theme.fonts.medium)]},label):null)));};var styles=StyleSheet.create({container:{borderRadius:28,elevation:6},touchable:{borderRadius:28},standard:{height:56,width:56},small:{height:40,width:40},extended:{height:48,paddingHorizontal:16},content:{flexDirection:'row',alignItems:'center',justifyContent:'center'},label:{marginHorizontal:8},uppercaseLabel:{textTransform:'uppercase'},disabled:{elevation:0}});export default withTheme(FAB);var FABWithTheme=withTheme(FAB);export{FABWithTheme as FAB};","map":{"version":3,"sources":["FAB.tsx"],"names":["FAB","accessibilityLabel","animated","color","visible","uppercase","rest","current","visibility","React","Animated","scale","theme","toValue","duration","useNativeDriver","IconComponent","disabledColor","backgroundColor","disabled","accent","StyleSheet","foregroundColor","rippleColor","opacity","transform","styles","testID","label","small","loading","medium","container","borderRadius","elevation","touchable","standard","height","width","extended","paddingHorizontal","content","flexDirection","alignItems","justifyContent","marginHorizontal","uppercaseLabel","textTransform","withTheme","FABWithTheme"],"mappings":"2sCAAA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mLAEA,MAAA,CAAA,iBAAA,4BACA,MAAA,CAAA,OAAA,kBACA,MAAA,CAAA,aAAA,wBACA,MAAA,CAAA,IAAA,eACA,MAAA,CAAA,IAAA,0BACA,MAAA,CAAA,eAAA,0CACA,OAAA,KAAA,CAAA,KAAA,2BACA,OAAA,SAAA,0BAsGA,GAAMA,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,MAkBC,IAlBA,CAAA,KAkBA,MAlBA,KAkBA,CAlBA,IAkBA,MAlBA,IAkBA,CAlBA,KAkBA,MAlBA,KAkBA,4BAdXC,kBAcW,CAdXA,kBAcW,gCAlBA,KAkBA,uBAlBA,kBAkBA,MAlBA,kBAkBA,oBAZXC,QAYW,CAZXA,QAYW,wBAlBA,IAkBA,eAlBA,WAkBA,MAXXC,KAWW,CAlBA,QAkBA,MAlBA,QAkBA,CAlBA,OAkBA,MAlBA,OAkBA,CAlBA,WAkBA,MAlBA,WAkBA,CAlBA,KAkBA,MAlBA,KAkBA,CAlBA,KAkBA,MAlBA,KAkBA,mBALXC,OAKW,CALXA,OAKW,uBAlBA,IAkBA,kCAJXC,SAIW,CAJXA,SAIW,yBAlBA,IAkBA,gBAlBA,OAkBA,MAlBA,OAkBA,CAlBA,MAkBA,MAlBA,MAkBA,CADRC,IACQ,oOACqBG,KAAK,CAALA,MAAAA,CAC9B,GAAIC,CAAAA,QAAQ,CAAZ,KAAA,CAAmBN,OAAO,CAAA,CAAA,CAD5B,CACE,CAD8BK,CADrB,CACMD,UADN,eACHD,OADG,IAIHI,CAAAA,KAJG,CAIOC,KAAK,CAAvB,SAJW,CAIHD,KAJG,CAMXF,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAA,OAAA,CAAa,CACXC,QAAQ,CAARA,MAAAA,CAAAA,UAAAA,CAA4B,CAC1BG,OAAO,CADmB,CAAA,CAE1BC,QAAQ,CAAE,IAFgB,KAAA,CAG1BC,eAAe,CAAE,IAHS,CAA5BL,EAAAA,KAAAA,GADF,CAAA,IAMO,CACLA,QAAQ,CAARA,MAAAA,CAAAA,UAAAA,CAA4B,CAC1BG,OAAO,CADmB,CAAA,CAE1BC,QAAQ,CAAE,IAFgB,KAAA,CAG1BC,eAAe,CAAE,IAHS,CAA5BL,EAAAA,KAAAA,GAKD,CAbHD,CAAAA,CAcG,CAAA,OAAA,CAAA,KAAA,CAdHA,UAcG,CAdHA,EAgBA,GAAMO,CAAAA,aAAa,CAAGd,QAAQ,CAAA,aAAA,CAA9B,IAAA,CAEA,GAAMe,CAAAA,aAAa,CAAGd,KAAK,CAACS,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANT,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAtB,MAAsBA,EAAtB,CAxBW,UA8BTkB,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GADF,EA7BW,6BA6BHH,eA7BG,CA6BHA,eA7BG,gCA6BeC,QAAQ,CAAA,aAAA,CAAmBP,KAAK,CAALA,MAAAA,CAAaQ,MA7BvD,uBAgCX,GAAA,CAAA,eAAA,CAEA,GAAI,MAAA,CAAA,WAAA,GAAJ,WAAA,CAAwC,CACtCE,eAAe,CAAfA,WAAAA,CADF,CAAA,IAEO,IAAA,QAAA,CAAc,CACnBA,eAAe,CAAGnB,KAAK,CAACS,KAAK,CAALA,IAAAA,CAAAA,KAAAA,CAANT,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlBmB,MAAkBnB,EAAlBmB,CADK,CAAA,IAKA,CACLA,eAAe,CAAG,CAACnB,KAAK,CAALA,eAAK,CAALA,CAAD,OAACA,EAAD,CAAA,KAAA,CAAlBmB,oBAAAA,CAGD,CAED,GAAMC,CAAAA,WAAW,CAAGpB,KAAK,CAALA,eAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAApB,MAAoBA,EAApB,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CACH,CACE,CACEe,eADF,CACEA,eADF,CAEEM,OAAO,CAFT,UAAA,CAGEC,SAAS,CAAE,CACT,CACEd,KAAK,CAAEH,UADT,CADS,CAHb,CADF,CAUEkB,MAAM,CAVR,SAAA,CAWEP,QAAQ,EAAIO,MAAM,CAXpB,QAAA,CAHJ,KAGI,CAHJ,CAkBE,aAAa,CAAEtB,OAAO,CAAA,MAAA,CAAY,MAlBpC,CAAA,CAAA,CAoBE,KAAA,CAAA,aAAA,CAAA,eAAA,CAAA,CACE,UAAU,CADZ,IAAA,CAEE,OAAO,CAFT,OAAA,CAGE,WAAW,CAHb,WAAA,CAIE,WAAW,CAJb,WAAA,CAKE,QAAQ,CALV,QAAA,CAME,kBAAkB,CANpB,kBAAA,CAOE,mBAAmB,CAAEe,QAAQ,CAAG,CAAA,QAAA,CAAH,UAAG,CAAH,CAP/B,QAAA,CAQE,0BAA0B,CAR5B,QAAA,CASE,iBAAiB,CATnB,QAAA,CAUE,kBAAkB,gCAAE,kBAAF,MAA2BA,QAAAA,CAAAA,QAA3B,EAVpB,CAWE,KAAK,CAAEO,MAAM,CAXf,SAAA,CAYE,MAAM,CAAEC,MAZV,CAAA,CAcE,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,KAAK,CAAE,CACLD,MAAM,CADD,OAAA,CAELE,KAAK,CAAGF,MAAM,CAAT,QAAA,CAAqBG,KAAK,CAAGH,MAAM,CAAT,KAAA,CAAkBA,MAAM,CAH3D,QACS,CADT,CAKE,aAAa,CAAC,MALhB,CAAA,CAOG,IAAI,EAAII,OAAO,GAAf,IAAA,CACC,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAe,MAAM,CAArB,IAAA,CAA6B,IAAI,CAAjC,EAAA,CAAuC,KAAK,CAAER,eAA9C,CAAA,CADD,CAPH,IAAA,CAUGQ,OAAO,CACN,KAAA,CAAA,aAAA,CAAA,iBAAA,CAAA,CAAmB,IAAI,CAAvB,EAAA,CAA6B,KAAK,CAAER,eAApC,CAAA,CADM,CAVV,IAAA,CAaGM,KAAK,CACJ,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,UAAU,CADZ,KAAA,CAEE,KAAK,CAAE,CACLF,MAAM,CADD,KAAA,CAELrB,SAAS,EAAIqB,MAAM,CAFd,cAAA,gBAGHvB,KAAK,CAAP,eAHK,EAGwBS,KAAK,CAALA,KAAAA,CAAYmB,MAHpC,EAFT,CAAA,CADI,KACJ,CADI,CAhDd,IAmCM,CAdF,CApBF,CADF,CAnEF,CAAA,CAqIA,GAAML,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BM,SAAS,CAAE,CACTC,YAAY,CADH,EAAA,CAETC,SAAS,CAAE,CAFF,CADoB,CAK/BC,SAAS,CAAE,CACTF,YAAY,CAAE,EADL,CALoB,CAQ/BG,QAAQ,CAAE,CACRC,MAAM,CADE,EAAA,CAERC,KAAK,CAAE,EAFC,CARqB,CAY/BT,KAAK,CAAE,CACLQ,MAAM,CADD,EAAA,CAELC,KAAK,CAAE,EAFF,CAZwB,CAgB/BC,QAAQ,CAAE,CACRF,MAAM,CADE,EAAA,CAERG,iBAAiB,CAAE,EAFX,CAhBqB,CAoB/BC,OAAO,CAAE,CACPC,aAAa,CADN,KAAA,CAEPC,UAAU,CAFH,QAAA,CAGPC,cAAc,CAAE,QAHT,CApBsB,CAyB/BhB,KAAK,CAAE,CACLiB,gBAAgB,CAAE,CADb,CAzBwB,CA4B/BC,cAAc,CAAE,CACdC,aAAa,CAAE,WADD,CA5Be,CA+B/B5B,QAAQ,CAAE,CACRe,SAAS,CAAE,CADH,CA/BqB,CAAlB,CAAf,CAoCA,cAAec,CAAAA,SAAS,CAAxB,GAAwB,CAAxB,CAGA,GAAMC,CAAAA,YAAY,CAAGD,SAAS,CAA9B,GAA8B,CAA9B,CAEA,OAASC,YAAY,GAArB,CAAA,GAAA","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { Animated, View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport ActivityIndicator from '../ActivityIndicator';\nimport Surface from '../Surface';\nimport CrossFadeIcon from '../CrossFadeIcon';\nimport Icon from '../Icon';\nimport Text from '../Typography/Text';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport type { $RemoveChildren } from '../../types';\nimport type { IconSource } from './../Icon';\nimport type { AccessibilityState } from 'react-native';\n\ntype Props = $RemoveChildren<typeof Surface> & {\n  /**\n   * Icon to display for the `FAB`.\n   */\n  icon: IconSource;\n  /**\n   * Optional label for extended `FAB`.\n   */\n  label?: string;\n  /**\n   * Make the label text uppercased.\n   */\n  uppercase?: boolean;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   * Uses `label` by default if specified.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Accessibility state for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityState?: AccessibilityState;\n  /**\n   * Whether an icon change is animated.\n   */\n  animated?: boolean;\n  /**\n   *  Whether FAB is mini-sized, used to create visual continuity with other elements. This has no effect if `label` is specified.\n   */\n  small?: boolean;\n  /**\n   * Custom color for the icon and label of the `FAB`.\n   */\n  color?: string;\n  /**\n   * Whether `FAB` is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible?: boolean;\n  /**\n   * Whether to show a loading indicator.\n   */\n  loading?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  testID?: string;\n};\n\n/**\n * A floating action button represents the primary action in an application.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-1.png\" />\n *   <img src=\"screenshots/fab-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { FAB } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <FAB\n *     style={styles.fab}\n *     small\n *     icon=\"plus\"\n *     onPress={() => console.log('Pressed')}\n *   />\n * );\n *\n * const styles = StyleSheet.create({\n *   fab: {\n *     position: 'absolute',\n *     margin: 16,\n *     right: 0,\n *     bottom: 0,\n *   },\n * })\n *\n * export default MyComponent;\n * ```\n */\nconst FAB = ({\n  small,\n  icon,\n  label,\n  accessibilityLabel = label,\n  accessibilityState,\n  animated = true,\n  color: customColor,\n  disabled,\n  onPress,\n  onLongPress,\n  theme,\n  style,\n  visible = true,\n  uppercase = true,\n  loading,\n  testID,\n  ...rest\n}: Props) => {\n  const { current: visibility } = React.useRef<Animated.Value>(\n    new Animated.Value(visible ? 1 : 0)\n  );\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (visible) {\n      Animated.timing(visibility, {\n        toValue: 1,\n        duration: 200 * scale,\n        useNativeDriver: true,\n      }).start();\n    } else {\n      Animated.timing(visibility, {\n        toValue: 0,\n        duration: 150 * scale,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [visible, scale, visibility]);\n\n  const IconComponent = animated ? CrossFadeIcon : Icon;\n\n  const disabledColor = color(theme.dark ? white : black)\n    .alpha(0.12)\n    .rgb()\n    .string();\n\n  const { backgroundColor = disabled ? disabledColor : theme.colors.accent } =\n    StyleSheet.flatten(style) || {};\n\n  let foregroundColor;\n\n  if (typeof customColor !== 'undefined') {\n    foregroundColor = customColor;\n  } else if (disabled) {\n    foregroundColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n  } else {\n    foregroundColor = !color(backgroundColor).isLight()\n      ? white\n      : 'rgba(0, 0, 0, .54)';\n  }\n\n  const rippleColor = color(foregroundColor).alpha(0.32).rgb().string();\n\n  return (\n    <Surface\n      {...rest}\n      style={\n        [\n          {\n            backgroundColor,\n            opacity: visibility,\n            transform: [\n              {\n                scale: visibility,\n              },\n            ],\n          },\n          styles.container,\n          disabled && styles.disabled,\n          style,\n        ] as StyleProp<ViewStyle>\n      }\n      pointerEvents={visible ? 'auto' : 'none'}\n    >\n      <TouchableRipple\n        borderless\n        onPress={onPress}\n        onLongPress={onLongPress}\n        rippleColor={rippleColor}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType=\"button\"\n        accessibilityRole=\"button\"\n        accessibilityState={{ ...accessibilityState, disabled }}\n        style={styles.touchable}\n        testID={testID}\n      >\n        <View\n          style={[\n            styles.content,\n            label ? styles.extended : small ? styles.small : styles.standard,\n          ]}\n          pointerEvents=\"none\"\n        >\n          {icon && loading !== true ? (\n            <IconComponent source={icon} size={24} color={foregroundColor} />\n          ) : null}\n          {loading ? (\n            <ActivityIndicator size={18} color={foregroundColor} />\n          ) : null}\n          {label ? (\n            <Text\n              selectable={false}\n              style={[\n                styles.label,\n                uppercase && styles.uppercaseLabel,\n                { color: foregroundColor, ...theme.fonts.medium },\n              ]}\n            >\n              {label}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableRipple>\n    </Surface>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 28,\n    elevation: 6,\n  },\n  touchable: {\n    borderRadius: 28,\n  },\n  standard: {\n    height: 56,\n    width: 56,\n  },\n  small: {\n    height: 40,\n    width: 40,\n  },\n  extended: {\n    height: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  label: {\n    marginHorizontal: 8,\n  },\n  uppercaseLabel: {\n    textTransform: 'uppercase',\n  },\n  disabled: {\n    elevation: 0,\n  },\n});\n\nexport default withTheme(FAB);\n\n// @component-docs ignore-next-line\nconst FABWithTheme = withTheme(FAB);\n// @component-docs ignore-next-line\nexport { FABWithTheme as FAB };\n"]},"metadata":{},"sourceType":"module"}