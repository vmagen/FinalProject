{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import Platform from\"react-native-web/dist/exports/Platform\";var MaterialCommunityIcons;try{MaterialCommunityIcons=require(\"@expo/vector-icons/MaterialCommunityIcons\").default;}catch(e){var isErrorLogged=false;MaterialCommunityIcons=function MaterialCommunityIcons(_ref){var name=_ref.name,color=_ref.color,size=_ref.size,rest=_objectWithoutProperties(_ref,[\"name\",\"color\",\"size\"]);if(!isErrorLogged){if(!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)){console.error(e);}console.warn(\"Tried to use the icon '\".concat(name,\"' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\"),\"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");isErrorLogged=true;}return React.createElement(Text,_extends({},rest,{style:[styles.icon,{color:color,fontSize:size}],pointerEvents:\"none\",selectable:false}),\"\\u25A1\");};}export var accessibilityProps=Platform.OS==='web'?{role:'img',focusable:false}:{accessibilityElementsHidden:true,importantForAccessibility:'no-hide-descendants'};var defaultIcon=function defaultIcon(_ref2){var name=_ref2.name,color=_ref2.color,size=_ref2.size,direction=_ref2.direction,allowFontScaling=_ref2.allowFontScaling;return React.createElement(MaterialCommunityIcons,_extends({allowFontScaling:allowFontScaling,name:name,color:color,size:size,style:[{transform:[{scaleX:direction==='rtl'?-1:1}],lineHeight:size},styles.icon],pointerEvents:\"none\",selectable:false},accessibilityProps));};var styles=StyleSheet.create({icon:{backgroundColor:'transparent'}});export default defaultIcon;","map":{"version":3,"sources":["MaterialCommunityIcon.tsx"],"names":["MaterialCommunityIcons","require","isErrorLogged","rest","e","console","styles","color","fontSize","size","accessibilityProps","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","allowFontScaling","transform","scaleX","direction","lineHeight","icon","backgroundColor"],"mappings":"4WAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,mLAWA,GAAA,CAAA,sBAAA,CAEA,GAAI,CAEFA,sBAAsB,CAAGC,OAAAA,6CAAAA,CAAzBD,OAAAA,CAFF,CAIE,MAAA,CAAA,CAAU,CACV,GAAIE,CAAAA,aAAa,CADP,KACV,CAIAF,sBAAsB,CAAG,qCAAoC,IAAnC,CAAA,IAAmC,MAAnC,IAAmC,CAAnC,KAAmC,MAAnC,KAAmC,CAAnC,IAAmC,MAAnC,IAAmC,CAAXG,IAAW,wDAE3D,GAAI,CAAJ,aAAA,CAAoB,CAClB,GACE,CAAC,8DAAA,IAAA,CACCC,CAAC,CAFL,OACG,CADH,CAIE,CACAC,OAAO,CAAPA,KAAAA,CAAAA,CAAAA,EACD,CAEDA,OAAO,CAAPA,IAAAA,CAAAA,0BAAAA,MAAAA,CAAAA,IAAAA,CAAAA,yHAAAA,CAAAA,CAAAA,sKAAAA,EAKAH,aAAa,CAAbA,IAAAA,CACD,CAED,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,KAAK,CAAE,CAACI,MAAM,CAAP,IAAA,CAAc,CAAEC,KAAF,CAAEA,KAAF,CAASC,QAAQ,CAAEC,IAAnB,CAAd,CAFT,CAIE,aAAa,CAJf,MAAA,CAKE,UAAU,CAAE,KALd,CAAA,CAAA,CADF,QACE,CADF,CAnBFT,CAAAA,CA+BD,CAED,MAAO,IAAMU,CAAAA,kBAAkB,CAC7B,QAAQ,CAAR,EAAA,GAAA,KAAA,CACI,CACEC,IAAI,CADN,KAAA,CAEEC,SAAS,CAAE,KAFb,CADJ,CAKI,CACEC,2BAA2B,CAD7B,IAAA,CAEEC,yBAAyB,CAAE,qBAF7B,CANC,CAWP,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,WAAC,CAAA,IAAD,OAAC,IAAD,CAAC,KAAD,OAAC,KAAD,CAAC,IAAD,OAAC,IAAD,CAAC,SAAD,OAAC,SAAD,CAKlBC,gBALkB,OAKlBA,gBALkB,OAOlB,CAAA,KAAA,CAAA,aAAA,CAAA,sBAAA,CAAA,QAAA,CAAA,CACE,gBAAgB,CADlB,gBAAA,CAEE,IAAI,CAFN,IAAA,CAGE,KAAK,CAHP,KAAA,CAIE,IAAI,CAJN,IAAA,CAKE,KAAK,CAAE,CACL,CACEC,SAAS,CAAE,CAAC,CAAEC,MAAM,CAAEC,SAAS,GAATA,KAAAA,CAAsB,CAAtBA,CAAAA,CAA2B,CAArC,CAAD,CADb,CAEEC,UAAU,CAAEX,IAFd,CADK,CAKLH,MAAM,CAVV,IAKS,CALT,CAYE,aAAa,CAZf,MAAA,CAaE,UAAU,CAAE,KAbd,CAAA,CAPF,kBAOE,CAAA,CAPkB,EAApB,CAyBA,GAAMA,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/Be,IAAI,CAAE,CACJC,eAAe,CAAE,aADb,CADyB,CAAlB,CAAf,CAMA,cAAA,CAAA,WAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n  allowFontScaling?: boolean;\n};\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons')\n    .default;\n} catch (e) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  // @ts-ignore\n  MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n    /* eslint-disable no-console */\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      <Text\n        {...rest}\n        style={[styles.icon, { color, fontSize: size }]}\n        // @ts-ignore\n        pointerEvents=\"none\"\n        selectable={false}\n      >\n        â–¡\n      </Text>\n    );\n  };\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({\n  name,\n  color,\n  size,\n  direction,\n  allowFontScaling,\n}: IconProps) => (\n  <MaterialCommunityIcons\n    allowFontScaling={allowFontScaling}\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n        lineHeight: size,\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    selectable={false}\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"]},"metadata":{},"sourceType":"module"}