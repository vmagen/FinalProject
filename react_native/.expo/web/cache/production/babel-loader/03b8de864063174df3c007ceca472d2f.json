{"ast":null,"code":"'use strict';var MessageDialog=require('react-native').NativeModules.FBMessageDialog;module.exports={canShow:function canShow(shareContent){return MessageDialog.canShow(shareContent);},show:function show(shareContent){return MessageDialog.show(shareContent);},setShouldFailOnDataError:function setShouldFailOnDataError(shouldFailOnDataError){MessageDialog.setShouldFailOnDataError(shouldFailOnDataError);}};","map":{"version":3,"sources":["FBMessageDialog.js"],"names":["MessageDialog","require","module","canShow","show","setShouldFailOnDataError"],"mappings":"AAuBA,aAEA,GAAMA,CAAAA,aAAa,CAAGC,OAAO,CAAPA,cAAO,CAAPA,CAAAA,aAAAA,CAAtB,eAAA,CAGAC,MAAM,CAANA,OAAAA,CAAiB,CAIfC,OAJe,kBAIR,YAJQ,CAIuC,CACpD,MAAOH,CAAAA,aAAa,CAAbA,OAAAA,CAAP,YAAOA,CAAP,CALa,CAAA,CAWfI,IAXe,eAWX,YAXW,CAWgC,CAC7C,MAAOJ,CAAAA,aAAa,CAAbA,IAAAA,CAAP,YAAOA,CAAP,CAZa,CAAA,CAkBfK,wBAlBe,mCAkBS,qBAlBT,CAkBgD,CAC7DL,aAAa,CAAbA,wBAAAA,CAAAA,qBAAAA,EACD,CApBc,CAAjBE","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst MessageDialog = require('react-native').NativeModules.FBMessageDialog;\nimport type {ShareContent} from './models/FBShareContent';\n\nmodule.exports = {\n  /**\n   * Check if the dialog can be shown.\n   */\n  canShow(shareContent: ShareContent): Promise<boolean> {\n    return MessageDialog.canShow(shareContent);\n  },\n\n  /**\n   * Shows the dialog using the specified content.\n   */\n  show(shareContent: ShareContent): Promise<any> {\n    return MessageDialog.show(shareContent);\n  },\n\n  /**\n   * Sets whether or not the native message dialog should fail when it encounters a data error.\n   */\n  setShouldFailOnDataError(shouldFailOnDataError: boolean): void {\n    MessageDialog.setShouldFailOnDataError(shouldFailOnDataError);\n  },\n};\n"]},"metadata":{},"sourceType":"script"}