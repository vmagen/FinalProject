{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import SafeAreaView from\"react-native-web/dist/exports/SafeAreaView\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import color from'color';import FAB from\"./FAB\";import Text from\"../Typography/Text\";import Card from\"../Card/Card\";import{withTheme}from\"../../core/theming\";var FABGroup=function FABGroup(_ref){var actions=_ref.actions,icon=_ref.icon,open=_ref.open,_onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,theme=_ref.theme,style=_ref.style,fabStyle=_ref.fabStyle,visible=_ref.visible,testID=_ref.testID,onStateChange=_ref.onStateChange,colorProp=_ref.color;var _React$useRef=React.useRef(new Animated.Value(0)),backdrop=_React$useRef.current;var animations=React.useRef(actions.map(function(){return new Animated.Value(open?1:0);}));var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),prevActions=_React$useState2[0],setPrevActions=_React$useState2[1];var scale=theme.animation.scale;React.useEffect(function(){if(open){Animated.parallel([Animated.timing(backdrop,{toValue:1,duration:250*scale,useNativeDriver:true}),Animated.stagger(50*scale,animations.current.map(function(animation){return Animated.timing(animation,{toValue:1,duration:150*scale,useNativeDriver:true});}).reverse())]).start();}else{Animated.parallel([Animated.timing(backdrop,{toValue:0,duration:200*scale,useNativeDriver:true})].concat(_toConsumableArray(animations.current.map(function(animation){return Animated.timing(animation,{toValue:0,duration:150*scale,useNativeDriver:true});})))).start();}},[open,actions,backdrop,scale]);var close=function close(){return onStateChange({open:false});};var toggle=function toggle(){return onStateChange({open:!open});};var colors=theme.colors;var labelColor=theme.dark?colors.text:color(colors.text).fade(0.54).rgb().string();var backdropOpacity=open?backdrop.interpolate({inputRange:[0,0.5,1],outputRange:[0,1,1]}):backdrop;var opacities=animations.current;var scales=opacities.map(function(opacity){return open?opacity.interpolate({inputRange:[0,1],outputRange:[0.8,1]}):1;});if(actions.length!==(prevActions===null||prevActions===void 0?void 0:prevActions.length)){animations.current=actions.map(function(_,i){return animations.current[i]||new Animated.Value(open?1:0);});setPrevActions(actions);}return React.createElement(View,{pointerEvents:\"box-none\",style:[styles.container,style]},React.createElement(TouchableWithoutFeedback,{onPress:close},React.createElement(Animated.View,{pointerEvents:open?'auto':'none',style:[styles.backdrop,{opacity:backdropOpacity,backgroundColor:colors.backdrop}]})),React.createElement(SafeAreaView,{pointerEvents:\"box-none\",style:styles.safeArea},React.createElement(View,{pointerEvents:open?'box-none':'none'},actions.map(function(it,i){return React.createElement(View,{key:i,style:[styles.item,{marginHorizontal:typeof it.small==='undefined'||it.small?24:16}],pointerEvents:open?'box-none':'none'},it.label&&React.createElement(View,null,React.createElement(Card,{style:[styles.label,{transform:[{scale:scales[i]}],opacity:opacities[i]}],onPress:function onPress(){it.onPress();close();},accessibilityLabel:it.accessibilityLabel!=='undefined'?it.accessibilityLabel:it.label,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\"},React.createElement(Text,{style:{color:labelColor}},it.label))),React.createElement(FAB,{small:typeof it.small!=='undefined'?it.small:true,icon:it.icon,color:it.color,style:[{transform:[{scale:scales[i]}],opacity:opacities[i],backgroundColor:theme.colors.surface},it.style],onPress:function onPress(){it.onPress();close();},accessibilityLabel:typeof it.accessibilityLabel!=='undefined'?it.accessibilityLabel:it.label,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",testID:it.testID,visible:open}));})),React.createElement(FAB,{onPress:function onPress(){_onPress===null||_onPress===void 0?void 0:_onPress();toggle();},icon:icon,color:colorProp,accessibilityLabel:accessibilityLabel,accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",accessibilityState:{expanded:open},style:[styles.fab,fabStyle],visible:visible,testID:testID})));};FABGroup.displayName='FAB.Group';export default withTheme(FABGroup);var FABGroupWithTheme=withTheme(FABGroup);export{FABGroupWithTheme as FABGroup};var styles=StyleSheet.create({safeArea:{alignItems:'flex-end'},container:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{justifyContent:'flex-end'}),fab:{marginHorizontal:16,marginBottom:16,marginTop:0},backdrop:_objectSpread({},StyleSheet.absoluteFillObject),label:{borderRadius:5,paddingHorizontal:12,paddingVertical:6,marginVertical:8,marginHorizontal:16,elevation:2},item:{marginBottom:16,flexDirection:'row',justifyContent:'flex-end',alignItems:'center'}});","map":{"version":3,"sources":["FABGroup.tsx"],"names":["FABGroup","color","colorProp","current","backdrop","React","Animated","animations","actions","open","scale","theme","toValue","duration","useNativeDriver","animation","close","onStateChange","toggle","colors","labelColor","backdropOpacity","inputRange","outputRange","opacities","scales","opacity","prevActions","setPrevActions","styles","backgroundColor","safeArea","marginHorizontal","it","transform","surface","onPress","expanded","testID","withTheme","FABGroupWithTheme","alignItems","container","StyleSheet","justifyContent","fab","marginBottom","marginTop","absoluteFillObject","label","borderRadius","paddingHorizontal","paddingVertical","marginVertical","elevation","item","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  Animated,\n  SafeAreaView,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\nimport FAB from './FAB';\nimport Text from '../Typography/Text';\nimport Card from '../Card/Card';\nimport { withTheme } from '../../core/theming';\nimport type { IconSource } from '../Icon';\n\ntype Props = {\n  /**\n   * Action items to display in the form of a speed dial.\n   * An action item should contain the following properties:\n   * - `icon`: icon to display (required)\n   * - `label`: optional label text\n   * - `accessibilityLabel`: accessibility label for the action, uses label by default if specified\n   * - `color`: custom icon color of the action item\n   * - `style`: pass additional styles for the fab item, for example, `backgroundColor`\n   * - `small`: boolean describing whether small or normal sized FAB is rendered. Defaults to `true`\n   * - `onPress`: callback that is called when `FAB` is pressed (required)\n   */\n  actions: Array<{\n    icon: IconSource;\n    label?: string;\n    color?: string;\n    accessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    small?: boolean;\n    onPress: () => void;\n    testID?: string;\n  }>;\n  /**\n   * Icon to display for the `FAB`.\n   * You can toggle it based on whether the speed dial is open to display a different icon.\n   */\n  icon: IconSource;\n  /**\n   * Accessibility label for the FAB. This is read by the screen reader when the user taps the FAB.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Custom color for the `FAB`.\n   */\n  color?: string;\n  /**\n   * Function to execute on pressing the `FAB`.\n   */\n  onPress?: () => void;\n  /**\n   * Whether the speed dial is open.\n   */\n  open: boolean;\n  /**\n   * Callback which is called on opening and closing the speed dial.\n   * The open state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onStateChange: (state: { open: boolean }) => void;\n  /**\n   * Whether `FAB` is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Style for the group. You can use it to pass additional styles if you need.\n   * For example, you can set an additional padding if you have a tab bar at the bottom.\n   */\n  style?: StyleProp<ViewStyle>;\n  /**\n   * Style for the FAB. It allows to pass the FAB button styles, such as backgroundColor.\n   */\n  fabStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Pass down testID from Group props to FAB.\n   */\n  testID?: string;\n};\n\n/**\n * A component to display a stack of FABs with related actions in a speed dial.\n * To render the group above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/fab-group.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { FAB, Portal, Provider } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [state, setState] = React.useState({ open: false });\n *\n *   const onStateChange = ({ open }) => setState({ open });\n *\n *   const { open } = state;\n *\n *   return (\n *     <Provider>\n *       <Portal>\n *         <FAB.Group\n *           open={open}\n *           icon={open ? 'calendar-today' : 'plus'}\n *           actions={[\n *             { icon: 'plus', onPress: () => console.log('Pressed add') },\n *             {\n *               icon: 'star',\n *               label: 'Star',\n *               onPress: () => console.log('Pressed star'),\n *             },\n *             {\n *               icon: 'email',\n *               label: 'Email',\n *               onPress: () => console.log('Pressed email'),\n *             },\n *             {\n *               icon: 'bell',\n *               label: 'Remind',\n *               onPress: () => console.log('Pressed notifications'),\n *               small: false,\n *             },\n *           ]}\n *           onStateChange={onStateChange}\n *           onPress={() => {\n *             if (open) {\n *               // do something if the speed dial is open\n *             }\n *           }}\n *         />\n *       </Portal>\n *     </Provider>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst FABGroup = ({\n  actions,\n  icon,\n  open,\n  onPress,\n  accessibilityLabel,\n  theme,\n  style,\n  fabStyle,\n  visible,\n  testID,\n  onStateChange,\n  color: colorProp,\n}: Props) => {\n  const { current: backdrop } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const animations = React.useRef<Animated.Value[]>(\n    actions.map(() => new Animated.Value(open ? 1 : 0))\n  );\n\n  const [prevActions, setPrevActions] = React.useState<\n    | {\n        icon: IconSource;\n        label?: string;\n        color?: string;\n        accessibilityLabel?: string;\n        style?: StyleProp<ViewStyle>;\n        onPress: () => void;\n        testID?: string;\n      }[]\n    | null\n  >(null);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    if (open) {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 1,\n          duration: 250 * scale,\n          useNativeDriver: true,\n        }),\n        Animated.stagger(\n          50 * scale,\n          animations.current\n            .map((animation) =>\n              Animated.timing(animation, {\n                toValue: 1,\n                duration: 150 * scale,\n                useNativeDriver: true,\n              })\n            )\n            .reverse()\n        ),\n      ]).start();\n    } else {\n      Animated.parallel([\n        Animated.timing(backdrop, {\n          toValue: 0,\n          duration: 200 * scale,\n          useNativeDriver: true,\n        }),\n        ...animations.current.map((animation) =>\n          Animated.timing(animation, {\n            toValue: 0,\n            duration: 150 * scale,\n            useNativeDriver: true,\n          })\n        ),\n      ]).start();\n    }\n  }, [open, actions, backdrop, scale]);\n\n  const close = () => onStateChange({ open: false });\n\n  const toggle = () => onStateChange({ open: !open });\n\n  const { colors } = theme;\n\n  const labelColor = theme.dark\n    ? colors.text\n    : color(colors.text).fade(0.54).rgb().string();\n  const backdropOpacity = open\n    ? backdrop.interpolate({\n        inputRange: [0, 0.5, 1],\n        outputRange: [0, 1, 1],\n      })\n    : backdrop;\n\n  const opacities = animations.current;\n  const scales = opacities.map((opacity) =>\n    open\n      ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.8, 1],\n        })\n      : 1\n  );\n\n  if (actions.length !== prevActions?.length) {\n    animations.current = actions.map(\n      (_, i) => animations.current[i] || new Animated.Value(open ? 1 : 0)\n    );\n    setPrevActions(actions);\n  }\n\n  return (\n    <View pointerEvents=\"box-none\" style={[styles.container, style]}>\n      <TouchableWithoutFeedback onPress={close}>\n        <Animated.View\n          pointerEvents={open ? 'auto' : 'none'}\n          style={[\n            styles.backdrop,\n            {\n              opacity: backdropOpacity,\n              backgroundColor: colors.backdrop,\n            },\n          ]}\n        />\n      </TouchableWithoutFeedback>\n      <SafeAreaView pointerEvents=\"box-none\" style={styles.safeArea}>\n        <View pointerEvents={open ? 'box-none' : 'none'}>\n          {actions.map((it, i) => (\n            <View\n              key={i} // eslint-disable-line react/no-array-index-key\n              style={[\n                styles.item,\n                {\n                  marginHorizontal:\n                    typeof it.small === 'undefined' || it.small ? 24 : 16,\n                },\n              ]}\n              pointerEvents={open ? 'box-none' : 'none'}\n            >\n              {it.label && (\n                <View>\n                  <Card\n                    style={\n                      [\n                        styles.label,\n                        {\n                          transform: [{ scale: scales[i] }],\n                          opacity: opacities[i],\n                        },\n                      ] as StyleProp<ViewStyle>\n                    }\n                    onPress={() => {\n                      it.onPress();\n                      close();\n                    }}\n                    accessibilityLabel={\n                      it.accessibilityLabel !== 'undefined'\n                        ? it.accessibilityLabel\n                        : it.label\n                    }\n                    accessibilityTraits=\"button\"\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                  >\n                    <Text style={{ color: labelColor }}>{it.label}</Text>\n                  </Card>\n                </View>\n              )}\n              <FAB\n                small={typeof it.small !== 'undefined' ? it.small : true}\n                icon={it.icon}\n                color={it.color}\n                style={\n                  [\n                    {\n                      transform: [{ scale: scales[i] }],\n                      opacity: opacities[i],\n                      backgroundColor: theme.colors.surface,\n                    },\n                    it.style,\n                  ] as StyleProp<ViewStyle>\n                }\n                onPress={() => {\n                  it.onPress();\n                  close();\n                }}\n                accessibilityLabel={\n                  typeof it.accessibilityLabel !== 'undefined'\n                    ? it.accessibilityLabel\n                    : it.label\n                }\n                accessibilityTraits=\"button\"\n                accessibilityComponentType=\"button\"\n                accessibilityRole=\"button\"\n                testID={it.testID}\n                visible={open}\n              />\n            </View>\n          ))}\n        </View>\n        <FAB\n          onPress={() => {\n            onPress?.();\n            toggle();\n          }}\n          icon={icon}\n          color={colorProp}\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityState={{ expanded: open }}\n          style={[styles.fab, fabStyle]}\n          visible={visible}\n          testID={testID}\n        />\n      </SafeAreaView>\n    </View>\n  );\n};\n\nFABGroup.displayName = 'FAB.Group';\n\nexport default withTheme(FABGroup);\n\n// @component-docs ignore-next-line\nconst FABGroupWithTheme = withTheme(FABGroup);\n// @component-docs ignore-next-line\nexport { FABGroupWithTheme as FABGroup };\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    alignItems: 'flex-end',\n  },\n  container: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'flex-end',\n  },\n  fab: {\n    marginHorizontal: 16,\n    marginBottom: 16,\n    marginTop: 0,\n  },\n  backdrop: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    borderRadius: 5,\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    elevation: 2,\n  },\n  item: {\n    marginBottom: 16,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}