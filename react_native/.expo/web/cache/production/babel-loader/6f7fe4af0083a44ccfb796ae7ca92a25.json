{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import PropTypes from'prop-types';import TouchableHighlight from\"react-native-web/dist/exports/TouchableHighlight\";import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{withTheme}from\"../config\";import Image from\"../image/Image\";import Icon from\"../icons/Icon\";function Accessory(_ref){var size=_ref.size,style=_ref.style,underlayColor=_ref.underlayColor,onPress=_ref.onPress,onLongPress=_ref.onLongPress,source=_ref.source,props=_objectWithoutProperties(_ref,[\"size\",\"style\",\"underlayColor\",\"onPress\",\"onLongPress\",\"source\"]);return React.createElement(TouchableHighlight,{style:StyleSheet.flatten([styles.accessory,{width:size,height:size,borderRadius:size/2},style]),underlayColor:underlayColor,onPress:onPress,onLongPress:onLongPress},React.createElement(View,null,source?React.createElement(Image,_extends({style:{width:size,height:size,borderRadius:size/2}},props)):React.createElement(Icon,_extends({size:size*0.8},props))));}Accessory.defaultProps={size:10,name:'mode-edit',type:'material',color:'#fff',underlayColor:'#000'};Accessory.propTypes={size:PropTypes.number,name:PropTypes.string,type:PropTypes.string,color:PropTypes.string,underlayColor:PropTypes.string,style:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),onPress:PropTypes.func};var styles=StyleSheet.create({accessory:_objectSpread({position:'absolute',bottom:0,right:0,alignItems:'center',justifyContent:'center',backgroundColor:'#aaa'},Platform.select({android:{elevation:1},default:{shadowColor:'#000',shadowOffset:{width:1,height:1},shadowRadius:2,shadowOpacity:0.5}}))});export default withTheme(Accessory,'AvatarAccessory');","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/react_native/node_modules/react-native-elements/src/avatar/Accessory.js"],"names":["React","PropTypes","withTheme","Image","Icon","Accessory","size","style","underlayColor","onPress","onLongPress","source","props","StyleSheet","flatten","styles","accessory","width","height","borderRadius","defaultProps","name","type","color","propTypes","number","string","oneOfType","object","array","func","create","position","bottom","right","alignItems","justifyContent","backgroundColor","Platform","select","android","elevation","default","shadowColor","shadowOffset","shadowRadius","shadowOpacity"],"mappings":"y+BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,oQAEA,OAASC,SAAT,iBACA,MAAOC,CAAAA,KAAP,sBACA,MAAOC,CAAAA,IAAP,qBAEA,QAASC,CAAAA,SAAT,MAQG,IAPDC,CAAAA,IAOC,MAPDA,IAOC,CANDC,KAMC,MANDA,KAMC,CALDC,aAKC,MALDA,aAKC,CAJDC,OAIC,MAJDA,OAIC,CAHDC,WAGC,MAHDA,WAGC,CAFDC,MAEC,MAFDA,MAEC,CADEC,KACF,kGACD,MACE,qBAAC,kBAAD,EACE,KAAK,CAAEC,UAAU,CAACC,OAAX,CAAmB,CACxBC,MAAM,CAACC,SADiB,CAExB,CACEC,KAAK,CAAEX,IADT,CAEEY,MAAM,CAAEZ,IAFV,CAGEa,YAAY,CAAEb,IAAI,CAAG,CAHvB,CAFwB,CAOxBC,KAPwB,CAAnB,CADT,CAUE,aAAa,CAAEC,aAVjB,CAWE,OAAO,CAAEC,OAXX,CAYE,WAAW,CAAEC,WAZf,EAcE,oBAAC,IAAD,MACGC,MAAM,CACL,oBAAC,KAAD,WACE,KAAK,CAAE,CACLM,KAAK,CAAEX,IADF,CAELY,MAAM,CAAEZ,IAFH,CAGLa,YAAY,CAAEb,IAAI,CAAG,CAHhB,CADT,EAMMM,KANN,EADK,CAUL,oBAAC,IAAD,WAAM,IAAI,CAAEN,IAAI,CAAG,GAAnB,EAA4BM,KAA5B,EAXJ,CAdF,CADF,CA+BD,CAEDP,SAAS,CAACe,YAAV,CAAyB,CACvBd,IAAI,CAAE,EADiB,CAEvBe,IAAI,CAAE,WAFiB,CAGvBC,IAAI,CAAE,UAHiB,CAIvBC,KAAK,CAAE,MAJgB,CAKvBf,aAAa,CAAE,MALQ,CAAzB,CAQAH,SAAS,CAACmB,SAAV,CAAsB,CACpBlB,IAAI,CAAEL,SAAS,CAACwB,MADI,CAEpBJ,IAAI,CAAEpB,SAAS,CAACyB,MAFI,CAGpBJ,IAAI,CAAErB,SAAS,CAACyB,MAHI,CAIpBH,KAAK,CAAEtB,SAAS,CAACyB,MAJG,CAKpBlB,aAAa,CAAEP,SAAS,CAACyB,MALL,CAMpBnB,KAAK,CAAEN,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAAC2B,MAAX,CAAmB3B,SAAS,CAAC4B,KAA7B,CAApB,CANa,CAOpBpB,OAAO,CAAER,SAAS,CAAC6B,IAPC,CAAtB,CAUA,GAAMf,CAAAA,MAAM,CAAGF,UAAU,CAACkB,MAAX,CAAkB,CAC/Bf,SAAS,gBACPgB,QAAQ,CAAE,UADH,CAEPC,MAAM,CAAE,CAFD,CAGPC,KAAK,CAAE,CAHA,CAIPC,UAAU,CAAE,QAJL,CAKPC,cAAc,CAAE,QALT,CAMPC,eAAe,CAAE,MANV,EAOJC,QAAQ,CAACC,MAAT,CAAgB,CACjBC,OAAO,CAAE,CACPC,SAAS,CAAE,CADJ,CADQ,CAIjBC,OAAO,CAAE,CACPC,WAAW,CAAE,MADN,CAEPC,YAAY,CAAE,CAAE3B,KAAK,CAAE,CAAT,CAAYC,MAAM,CAAE,CAApB,CAFP,CAGP2B,YAAY,CAAE,CAHP,CAIPC,aAAa,CAAE,GAJR,CAJQ,CAAhB,CAPI,CADsB,CAAlB,CAAf,CAsBA,cAAe5C,CAAAA,SAAS,CAACG,SAAD,CAAY,iBAAZ,CAAxB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableHighlight, View, Platform, StyleSheet } from 'react-native';\nimport { withTheme } from '../config';\nimport Image from '../image/Image';\nimport Icon from '../icons/Icon';\n\nfunction Accessory({\n  size,\n  style,\n  underlayColor,\n  onPress,\n  onLongPress,\n  source,\n  ...props\n}) {\n  return (\n    <TouchableHighlight\n      style={StyleSheet.flatten([\n        styles.accessory,\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n        },\n        style,\n      ])}\n      underlayColor={underlayColor}\n      onPress={onPress}\n      onLongPress={onLongPress}\n    >\n      <View>\n        {source ? (\n          <Image\n            style={{\n              width: size,\n              height: size,\n              borderRadius: size / 2,\n            }}\n            {...props}\n          />\n        ) : (\n          <Icon size={size * 0.8} {...props} />\n        )}\n      </View>\n    </TouchableHighlight>\n  );\n}\n\nAccessory.defaultProps = {\n  size: 10,\n  name: 'mode-edit',\n  type: 'material',\n  color: '#fff',\n  underlayColor: '#000',\n};\n\nAccessory.propTypes = {\n  size: PropTypes.number,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  color: PropTypes.string,\n  underlayColor: PropTypes.string,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  onPress: PropTypes.func,\n};\n\nconst styles = StyleSheet.create({\n  accessory: {\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#aaa',\n    ...Platform.select({\n      android: {\n        elevation: 1,\n      },\n      default: {\n        shadowColor: '#000',\n        shadowOffset: { width: 1, height: 1 },\n        shadowRadius: 2,\n        shadowOpacity: 0.5,\n      },\n    }),\n  },\n});\n\nexport default withTheme(Accessory, 'AvatarAccessory');\n"]},"metadata":{},"sourceType":"module"}