{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import NativeTextInput from\"react-native-web/dist/exports/TextInput\";import Platform from\"react-native-web/dist/exports/Platform\";import TextInputOutlined from\"./TextInputOutlined\";import TextInputFlat from\"./TextInputFlat\";import TextInputIcon from\"./Adornment/TextInputIcon\";import TextInputAffix from\"./Adornment/TextInputAffix\";import{withTheme}from\"../../core/theming\";var BLUR_ANIMATION_DURATION=180;var FOCUS_ANIMATION_DURATION=150;var TextInput=function(_React$Component){_inherits(TextInput,_React$Component);var _super=_createSuper(TextInput);function TextInput(){var _this;_classCallCheck(this,TextInput);for(var _len=arguments.length,_args=new Array(_len),_key=0;_key<_len;_key++){_args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(_args));_defineProperty(_assertThisInitialized(_this),\"validInputValue\",_this.props.value!==undefined?_this.props.value:_this.props.defaultValue);_defineProperty(_assertThisInitialized(_this),\"state\",{labeled:new Animated.Value(_this.validInputValue?0:1),error:new Animated.Value(_this.props.error?1:0),focused:false,placeholder:'',value:_this.validInputValue,labelLayout:{measured:false,width:0,height:0},leftLayout:{width:null,height:null},rightLayout:{width:null,height:null}});_defineProperty(_assertThisInitialized(_this),\"ref\",void 0);_defineProperty(_assertThisInitialized(_this),\"showPlaceholder\",function(){if(_this.timer){clearTimeout(_this.timer);}_this.timer=setTimeout(function(){return _this.setState({placeholder:_this.props.placeholder});},50);});_defineProperty(_assertThisInitialized(_this),\"hidePlaceholder\",function(){return _this.setState({placeholder:''});});_defineProperty(_assertThisInitialized(_this),\"timer\",void 0);_defineProperty(_assertThisInitialized(_this),\"root\",void 0);_defineProperty(_assertThisInitialized(_this),\"showError\",function(){var scale=_this.props.theme.animation.scale;Animated.timing(_this.state.error,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:Platform.select({ios:false,default:true})}).start();});_defineProperty(_assertThisInitialized(_this),\"hideError\",function(){var scale=_this.props.theme.animation.scale;Animated.timing(_this.state.error,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:Platform.select({ios:false,default:true})}).start();});_defineProperty(_assertThisInitialized(_this),\"restoreLabel\",function(){var scale=_this.props.theme.animation.scale;Animated.timing(_this.state.labeled,{toValue:1,duration:FOCUS_ANIMATION_DURATION*scale,useNativeDriver:Platform.select({ios:false,default:true})}).start();});_defineProperty(_assertThisInitialized(_this),\"minimizeLabel\",function(){var scale=_this.props.theme.animation.scale;Animated.timing(_this.state.labeled,{toValue:0,duration:BLUR_ANIMATION_DURATION*scale,useNativeDriver:Platform.select({ios:false,default:true})}).start();});_defineProperty(_assertThisInitialized(_this),\"onLeftAffixLayoutChange\",function(event){_this.setState({leftLayout:{height:event.nativeEvent.layout.height,width:event.nativeEvent.layout.width}});});_defineProperty(_assertThisInitialized(_this),\"onRightAffixLayoutChange\",function(event){_this.setState({rightLayout:{width:event.nativeEvent.layout.width,height:event.nativeEvent.layout.height}});});_defineProperty(_assertThisInitialized(_this),\"handleFocus\",function(args){if(_this.props.disabled||!_this.props.editable){return;}_this.setState({focused:true});if(_this.props.onFocus){_this.props.onFocus(args);}});_defineProperty(_assertThisInitialized(_this),\"handleBlur\",function(args){if(!_this.props.editable){return;}_this.setState({focused:false});if(_this.props.onBlur){_this.props.onBlur(args);}});_defineProperty(_assertThisInitialized(_this),\"handleChangeText\",function(value){if(!_this.props.editable){return;}_this.setState({value:value});_this.props.onChangeText&&_this.props.onChangeText(value);});_defineProperty(_assertThisInitialized(_this),\"handleLayoutAnimatedText\",function(e){_this.setState({labelLayout:{width:e.nativeEvent.layout.width,height:e.nativeEvent.layout.height,measured:true}});});_defineProperty(_assertThisInitialized(_this),\"forceFocus\",function(){var _this$root;return(_this$root=_this.root)===null||_this$root===void 0?void 0:_this$root.focus();});return _this;}_createClass(TextInput,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){var isFocusChanged=prevState.focused!==this.state.focused;var isValueChanged=prevState.value!==this.state.value;var isLabelLayoutChanged=prevState.labelLayout!==this.state.labelLayout;var isLabelChanged=prevProps.label!==this.props.label;var isErrorChanged=prevProps.error!==this.props.error;if(isFocusChanged||isValueChanged||isLabelLayoutChanged){if(this.state.value||this.state.focused){this.minimizeLabel();}else{this.restoreLabel();}}if(isFocusChanged||isLabelChanged){if(this.state.focused||!this.props.label){this.showPlaceholder();}else{this.hidePlaceholder();}}if(isErrorChanged){if(this.props.error){this.showError();}else{this.hideError();}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.timer){clearTimeout(this.timer);}}},{key:\"setNativeProps\",value:function setNativeProps(args){return this.root&&this.root.setNativeProps(args);}},{key:\"isFocused\",value:function isFocused(){return this.root&&this.root.isFocused();}},{key:\"clear\",value:function clear(){return this.root&&this.root.clear();}},{key:\"focus\",value:function focus(){return this.root&&this.root.focus();}},{key:\"blur\",value:function blur(){return this.root&&this.root.blur();}},{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,mode=_this$props.mode,rest=_objectWithoutProperties(_this$props,[\"mode\"]);return mode==='outlined'?React.createElement(TextInputOutlined,_extends({},rest,{value:this.state.value,parentState:this.state,innerRef:function innerRef(ref){_this2.root=ref;},onFocus:this.handleFocus,forceFocus:this.forceFocus,onBlur:this.handleBlur,onChangeText:this.handleChangeText,onLayoutAnimatedText:this.handleLayoutAnimatedText,onLeftAffixLayoutChange:this.onLeftAffixLayoutChange,onRightAffixLayoutChange:this.onRightAffixLayoutChange})):React.createElement(TextInputFlat,_extends({},rest,{value:this.state.value,parentState:this.state,innerRef:function innerRef(ref){_this2.root=ref;},onFocus:this.handleFocus,forceFocus:this.forceFocus,onBlur:this.handleBlur,onChangeText:this.handleChangeText,onLayoutAnimatedText:this.handleLayoutAnimatedText,onLeftAffixLayoutChange:this.onLeftAffixLayoutChange,onRightAffixLayoutChange:this.onRightAffixLayoutChange}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){return{value:typeof nextProps.value!=='undefined'?nextProps.value:prevState.value};}}]);return TextInput;}(React.Component);_defineProperty(TextInput,\"Icon\",TextInputIcon);_defineProperty(TextInput,\"Affix\",TextInputAffix);_defineProperty(TextInput,\"defaultProps\",{mode:'flat',dense:false,disabled:false,error:false,multiline:false,editable:true,render:function render(props){return React.createElement(NativeTextInput,props);}});export default withTheme(TextInput);","map":{"version":3,"sources":["TextInput.tsx"],"names":["BLUR_ANIMATION_DURATION","FOCUS_ANIMATION_DURATION","TextInput","React","TextInputIcon","TextInputAffix","mode","dense","disabled","error","multiline","editable","render","props","value","nextProps","prevState","labeled","Animated","focused","placeholder","labelLayout","measured","width","height","leftLayout","rightLayout","componentDidUpdate","isFocusChanged","isValueChanged","isLabelLayoutChanged","isLabelChanged","prevProps","isErrorChanged","componentWillUnmount","clearTimeout","setTimeout","scale","toValue","duration","useNativeDriver","ios","default","event","args","e","setNativeProps","isFocused","clear","focus","blur","rest","ref","onRightAffixLayoutChange","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  TextInput as NativeTextInput,\n  Platform,\n  LayoutChangeEvent,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport TextInputOutlined from './TextInputOutlined';\nimport TextInputFlat from './TextInputFlat';\nimport TextInputIcon from './Adornment/TextInputIcon';\nimport TextInputAffix from './Adornment/TextInputAffix';\nimport { withTheme } from '../../core/theming';\nimport type { RenderProps, State } from './types';\nimport type { $Omit } from '../../types';\n\nconst BLUR_ANIMATION_DURATION = 180;\nconst FOCUS_ANIMATION_DURATION = 150;\n\nexport type TextInputProps = React.ComponentPropsWithRef<\n  typeof NativeTextInput\n> & {\n  /**\n   * Mode of the TextInput.\n   * - `flat` - flat input with an underline.\n   * - `outlined` - input with an outline.\n   *\n   * In `outlined` mode, the background color of the label is derived from `colors.background` in theme or the `backgroundColor` style.\n   * This component render TextInputOutlined or TextInputFlat based on that props\n   */\n  mode?: 'flat' | 'outlined';\n  left?: React.ReactNode;\n  right?: React.ReactNode;\n  /**\n   * If true, user won't be able to interact with the component.\n   */\n  disabled?: boolean;\n  /**\n   * The text to use for the floating label.\n   */\n  label?: string;\n  /**\n   * Placeholder for the input.\n   */\n  placeholder?: string;\n  /**\n   * Whether to style the TextInput with error style.\n   */\n  error?: boolean;\n  /**\n   * Callback that is called when the text input's text changes. Changed text is passed as an argument to the callback handler.\n   */\n  onChangeText?: Function;\n  /**\n   * Selection color of the input\n   */\n  selectionColor?: string;\n  /**\n   * Underline color of the input.\n   */\n  underlineColor?: string;\n  /**\n   * Sets min height with densed layout. For `TextInput` in `flat` mode\n   * height is `64dp` or in dense layout - `52dp` with label or `40dp` without label.\n   * For `TextInput` in `outlined` mode\n   * height is `56dp` or in dense layout - `40dp` regardless of label.\n   * When you apply `heigh` prop in style the `dense` prop affects only `paddingVertical` inside `TextInput`\n   */\n  dense?: boolean;\n  /**\n   * Whether the input can have multiple lines.\n   */\n  multiline?: boolean;\n  /**\n   * The number of lines to show in the input (Android only).\n   */\n  numberOfLines?: number;\n  /**\n   * Callback that is called when the text input is focused.\n   */\n  onFocus?: (args: any) => void;\n  /**\n   * Callback that is called when the text input is blurred.\n   */\n  onBlur?: (args: any) => void;\n  /**\n   *\n   * Callback to render a custom input component such as `react-native-text-input-mask`\n   * instead of the default `TextInput` component from `react-native`.\n   *\n   * Example:\n   * ```js\n   * <TextInput\n   *   label=\"Phone number\"\n   *   render={props =>\n   *     <TextInputMask\n   *       {...props}\n   *       mask=\"+[00] [000] [000] [000]\"\n   *     />\n   *   }\n   * />\n   * ```\n   */\n  render?: (props: RenderProps) => React.ReactNode;\n  /**\n   * Value of the text input.\n   */\n  value?: string;\n  /**\n   * Pass `fontSize` prop to modify the font size inside `TextInput`.\n   * Pass `height` prop to set `TextInput` height. When `height` is passed,\n   * `dense` prop will affect only input's `paddingVertical`.\n   * Pass `paddingHorizontal` to modify horizontal padding.\n   * This can be used to get MD Guidelines v1 TextInput look.\n   */\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to allow users to input text.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.focused.png\" />\n *     <figcaption>Flat (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-flat.disabled.png\" />\n *     <figcaption>Flat (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.focused.png\" />\n *     <figcaption>Outlined (focused)</figcaption>\n *   </figure>\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/textinput-outlined.disabled.png\" />\n *     <figcaption>Outlined (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { TextInput } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [text, setText] = React.useState('');\n *\n *   return (\n *     <TextInput\n *       label=\"Email\"\n *       value={text}\n *       onChangeText={text => setText(text)}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n *\n * @extends TextInput props https://reactnative.dev/docs/textinput#props\n */\n\nclass TextInput extends React.Component<TextInputProps, State> {\n  // @component ./Adornment/TextInputIcon.tsx\n  static Icon = TextInputIcon;\n\n  // @component ./Adornment/TextInputAffix.tsx\n  static Affix = TextInputAffix;\n\n  static defaultProps: Partial<TextInputProps> = {\n    mode: 'flat',\n    dense: false,\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  static getDerivedStateFromProps(nextProps: TextInputProps, prevState: State) {\n    return {\n      value:\n        typeof nextProps.value !== 'undefined'\n          ? nextProps.value\n          : prevState.value,\n    };\n  }\n  validInputValue =\n    this.props.value !== undefined ? this.props.value : this.props.defaultValue;\n\n  state = {\n    labeled: new Animated.Value(this.validInputValue ? 0 : 1),\n    error: new Animated.Value(this.props.error ? 1 : 0),\n    focused: false,\n    placeholder: '',\n    value: this.validInputValue,\n    labelLayout: {\n      measured: false,\n      width: 0,\n      height: 0,\n    },\n    leftLayout: {\n      width: null,\n      height: null,\n    },\n    rightLayout: {\n      width: null,\n      height: null,\n    },\n  };\n\n  ref: NativeTextInput | undefined | null;\n\n  componentDidUpdate(prevProps: TextInputProps, prevState: State) {\n    const isFocusChanged = prevState.focused !== this.state.focused;\n    const isValueChanged = prevState.value !== this.state.value;\n    const isLabelLayoutChanged =\n      prevState.labelLayout !== this.state.labelLayout;\n    const isLabelChanged = prevProps.label !== this.props.label;\n    const isErrorChanged = prevProps.error !== this.props.error;\n\n    if (\n      isFocusChanged ||\n      isValueChanged ||\n      // workaround for animated regression for react native > 0.61\n      // https://github.com/callstack/react-native-paper/pull/1440\n      isLabelLayoutChanged\n    ) {\n      // The label should be minimized if the text input is focused, or has text\n      // In minimized mode, the label moves up and becomes small\n      if (this.state.value || this.state.focused) {\n        this.minimizeLabel();\n      } else {\n        this.restoreLabel();\n      }\n    }\n\n    if (isFocusChanged || isLabelChanged) {\n      // Show placeholder text only if the input is focused, or there's no label\n      // We don't show placeholder if there's a label because the label acts as placeholder\n      // When focused, the label moves up, so we can show a placeholder\n      if (this.state.focused || !this.props.label) {\n        this.showPlaceholder();\n      } else {\n        this.hidePlaceholder();\n      }\n    }\n\n    if (isErrorChanged) {\n      // When the input has an error, we wiggle the label and apply error styles\n      if (this.props.error) {\n        this.showError();\n      } else {\n        this.hideError();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  private showPlaceholder = () => {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    // Set the placeholder in a delay to offset the label animation\n    // If we show it immediately, they'll overlap and look ugly\n    // @ts-ignore\n    this.timer = setTimeout(\n      () =>\n        this.setState({\n          placeholder: this.props.placeholder,\n        }),\n      50\n    );\n  };\n\n  private hidePlaceholder = () =>\n    this.setState({\n      placeholder: '',\n    });\n\n  private timer?: number;\n  private root: NativeTextInput | undefined | null;\n\n  private showError = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.error, {\n      toValue: 1,\n      duration: FOCUS_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private hideError = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.error, {\n      toValue: 0,\n      duration: BLUR_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private restoreLabel = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.labeled, {\n      toValue: 1,\n      duration: FOCUS_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private minimizeLabel = () => {\n    const { scale } = this.props.theme.animation;\n    Animated.timing(this.state.labeled, {\n      toValue: 0,\n      duration: BLUR_ANIMATION_DURATION * scale,\n      // To prevent this - https://github.com/callstack/react-native-paper/issues/941\n      useNativeDriver: Platform.select({\n        ios: false,\n        default: true,\n      }),\n    }).start();\n  };\n\n  private onLeftAffixLayoutChange = (event: LayoutChangeEvent) => {\n    this.setState({\n      leftLayout: {\n        height: event.nativeEvent.layout.height,\n        width: event.nativeEvent.layout.width,\n      },\n    });\n  };\n\n  private onRightAffixLayoutChange = (event: LayoutChangeEvent) => {\n    this.setState({\n      rightLayout: {\n        width: event.nativeEvent.layout.width,\n        height: event.nativeEvent.layout.height,\n      },\n    });\n  };\n\n  private handleFocus = (args: any) => {\n    if (this.props.disabled || !this.props.editable) {\n      return;\n    }\n\n    this.setState({ focused: true });\n\n    if (this.props.onFocus) {\n      this.props.onFocus(args);\n    }\n  };\n\n  private handleBlur = (args: Object) => {\n    if (!this.props.editable) {\n      return;\n    }\n\n    this.setState({ focused: false });\n\n    if (this.props.onBlur) {\n      this.props.onBlur(args);\n    }\n  };\n\n  private handleChangeText = (value: string) => {\n    if (!this.props.editable) {\n      return;\n    }\n\n    this.setState({ value });\n    this.props.onChangeText && this.props.onChangeText(value);\n  };\n\n  private handleLayoutAnimatedText = (e: LayoutChangeEvent) => {\n    this.setState({\n      labelLayout: {\n        width: e.nativeEvent.layout.width,\n        height: e.nativeEvent.layout.height,\n        measured: true,\n      },\n    });\n  };\n\n  forceFocus = () => {\n    return this.root?.focus();\n  };\n\n  /**\n   * @internal\n   */\n  setNativeProps(args: Object) {\n    return this.root && this.root.setNativeProps(args);\n  }\n\n  /**\n   * Returns `true` if the input is currently focused, `false` otherwise.\n   */\n  isFocused() {\n    return this.root && this.root.isFocused();\n  }\n\n  /**\n   * Removes all text from the TextInput.\n   */\n  clear() {\n    return this.root && this.root.clear();\n  }\n\n  /**\n   * Focuses the input.\n   */\n  focus() {\n    return this.root && this.root.focus();\n  }\n\n  /**\n   * Removes focus from the input.\n   */\n  blur() {\n    return this.root && this.root.blur();\n  }\n  render() {\n    const { mode, ...rest } = this.props as $Omit<TextInputProps, 'ref'>;\n\n    return mode === 'outlined' ? (\n      <TextInputOutlined\n        {...rest}\n        value={this.state.value}\n        parentState={this.state}\n        innerRef={(ref) => {\n          this.root = ref;\n        }}\n        onFocus={this.handleFocus}\n        forceFocus={this.forceFocus}\n        onBlur={this.handleBlur}\n        onChangeText={this.handleChangeText}\n        onLayoutAnimatedText={this.handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={this.onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={this.onRightAffixLayoutChange}\n      />\n    ) : (\n      <TextInputFlat\n        {...rest}\n        value={this.state.value}\n        parentState={this.state}\n        innerRef={(ref) => {\n          this.root = ref;\n        }}\n        onFocus={this.handleFocus}\n        forceFocus={this.forceFocus}\n        onBlur={this.handleBlur}\n        onChangeText={this.handleChangeText}\n        onLayoutAnimatedText={this.handleLayoutAnimatedText}\n        onLeftAffixLayoutChange={this.onLeftAffixLayoutChange}\n        onRightAffixLayoutChange={this.onRightAffixLayoutChange}\n      />\n    );\n  }\n}\n\nexport default withTheme(TextInput);\n"]},"metadata":{},"sourceType":"module"}