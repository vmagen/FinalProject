{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React,{Fragment}from'react';import PropTypes from'prop-types';import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Modal from\"react-native-web/dist/exports/Modal\";import View from\"react-native-web/dist/exports/View\";import StatusBar from\"react-native-web/dist/exports/StatusBar\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import{withTheme}from\"../config\";import{ScreenWidth,ScreenHeight,isIOS}from\"../helpers\";import Triangle from\"./Triangle\";import getTooltipCoordinate,{getElementVisibleWidth}from\"./getTooltipCoordinate\";var Tooltip=function(_React$PureComponent){_inherits(Tooltip,_React$PureComponent);var _super=_createSuper(Tooltip);function Tooltip(){var _this;_classCallCheck(this,Tooltip);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={isVisible:false,yOffset:0,xOffset:0,elementWidth:0,elementHeight:0};_this.toggleTooltip=function(){var onClose=_this.props.onClose;_this.getElementPosition();_this.setState(function(prevState){if(prevState.isVisible){onClose&&onClose();}return{isVisible:!prevState.isVisible};});};_this.wrapWithPress=function(toggleOnPress,toggleAction,children){if(toggleOnPress){return React.createElement(TouchableOpacity,_extends({},_defineProperty({},toggleAction,_this.toggleTooltip),{delayLongPress:250,activeOpacity:1}),children);}return children;};_this.getTooltipStyle=function(){var _objectSpread2;var _this$state=_this.state,yOffset=_this$state.yOffset,xOffset=_this$state.xOffset,elementHeight=_this$state.elementHeight,elementWidth=_this$state.elementWidth;var _this$props=_this.props,height=_this$props.height,backgroundColor=_this$props.backgroundColor,width=_this$props.width,withPointer=_this$props.withPointer,containerStyle=_this$props.containerStyle;var _getTooltipCoordinate=getTooltipCoordinate(xOffset,yOffset,elementWidth,elementHeight,ScreenWidth,ScreenHeight,width,height,withPointer),x=_getTooltipCoordinate.x,y=_getTooltipCoordinate.y;return _objectSpread((_objectSpread2={position:'absolute'},_defineProperty(_objectSpread2,I18nManager.isRTL?'right':'left',x),_defineProperty(_objectSpread2,\"top\",y),_defineProperty(_objectSpread2,\"width\",width),_defineProperty(_objectSpread2,\"height\",height),_defineProperty(_objectSpread2,\"backgroundColor\",backgroundColor),_defineProperty(_objectSpread2,\"display\",'flex'),_defineProperty(_objectSpread2,\"alignItems\",'center'),_defineProperty(_objectSpread2,\"justifyContent\",'center'),_defineProperty(_objectSpread2,\"flex\",1),_defineProperty(_objectSpread2,\"borderRadius\",10),_defineProperty(_objectSpread2,\"padding\",10),_objectSpread2),containerStyle);};_this.renderPointer=function(tooltipY){var _this$state2=_this.state,yOffset=_this$state2.yOffset,xOffset=_this$state2.xOffset,elementHeight=_this$state2.elementHeight,elementWidth=_this$state2.elementWidth;var _this$props2=_this.props,backgroundColor=_this$props2.backgroundColor,pointerColor=_this$props2.pointerColor;var pastMiddleLine=yOffset>tooltipY;return React.createElement(View,{style:_defineProperty({position:'absolute',top:pastMiddleLine?yOffset-13:yOffset+elementHeight-2},I18nManager.isRTL?'right':'left',xOffset+getElementVisibleWidth(elementWidth,xOffset,ScreenWidth)/2-7.5)},React.createElement(Triangle,{style:{borderBottomColor:pointerColor||backgroundColor},isDown:pastMiddleLine}));};_this.getTooltipHighlightedButtonStyle=function(){var _ref3;var highlightColor=_this.props.highlightColor;var _this$state3=_this.state,yOffset=_this$state3.yOffset,xOffset=_this$state3.xOffset,elementWidth=_this$state3.elementWidth,elementHeight=_this$state3.elementHeight;return _ref3={position:'absolute',top:yOffset},_defineProperty(_ref3,I18nManager.isRTL?'right':'left',xOffset),_defineProperty(_ref3,\"backgroundColor\",highlightColor),_defineProperty(_ref3,\"overflow\",'visible'),_defineProperty(_ref3,\"width\",elementWidth),_defineProperty(_ref3,\"height\",elementHeight),_ref3;};_this.renderTouchableHighlightedButton=function(){var TooltipHighlightedButtonStyle=_this.getTooltipHighlightedButtonStyle();return React.createElement(TouchableOpacity,{testID:\"tooltipTouchableHighlightedButton\",onPress:function onPress(){return _this.toggleTooltip();},style:TooltipHighlightedButtonStyle},_this.props.children);};_this.renderStaticHighlightedButton=function(){var TooltipHighlightedButtonStyle=_this.getTooltipHighlightedButtonStyle();return React.createElement(View,{style:TooltipHighlightedButtonStyle},_this.props.children);};_this.renderHighlightedButton=function(){var closeOnlyOnBackdropPress=_this.props.closeOnlyOnBackdropPress;if(closeOnlyOnBackdropPress){return _this.renderTouchableHighlightedButton();}else{return _this.renderStaticHighlightedButton();}};_this.renderContent=function(withTooltip){var _this$props3=_this.props,popover=_this$props3.popover,withPointer=_this$props3.withPointer,toggleOnPress=_this$props3.toggleOnPress,toggleAction=_this$props3.toggleAction;if(!withTooltip){return _this.wrapWithPress(toggleOnPress,toggleAction,_this.props.children);}var tooltipStyle=_this.getTooltipStyle();return React.createElement(View,null,_this.renderHighlightedButton(),withPointer&&_this.renderPointer(tooltipStyle.top),React.createElement(View,{style:tooltipStyle,testID:\"tooltipPopoverContainer\"},popover));};_this.getElementPosition=function(){var skipAndroidStatusBar=_this.props.skipAndroidStatusBar;_this.renderedElement&&_this.renderedElement.measure(function(frameOffsetX,frameOffsetY,width,height,pageOffsetX,pageOffsetY){_this.setState({xOffset:pageOffsetX,yOffset:isIOS||skipAndroidStatusBar?pageOffsetY:pageOffsetY-StatusBar.currentHeight,elementWidth:width,elementHeight:height});});};_this.renderStaticModalContent=function(){var _this$props4=_this.props,withOverlay=_this$props4.withOverlay,overlayColor=_this$props4.overlayColor;return React.createElement(Fragment,null,React.createElement(TouchableOpacity,{style:styles.container(withOverlay,overlayColor),onPress:_this.toggleTooltip,activeOpacity:1}),React.createElement(View,{style:styles.closeOnlyOnBackdropPressViewWrapper},_this.renderContent(true)));};_this.renderTogglingModalContent=function(){var _this$props5=_this.props,withOverlay=_this$props5.withOverlay,overlayColor=_this$props5.overlayColor;return React.createElement(TouchableOpacity,{style:styles.container(withOverlay,overlayColor),onPress:_this.toggleTooltip,activeOpacity:1},_this.renderContent(true));};_this.renderModalContent=function(){var closeOnlyOnBackdropPress=_this.props.closeOnlyOnBackdropPress;if(closeOnlyOnBackdropPress){return _this.renderStaticModalContent();}else{return _this.renderTogglingModalContent();}};return _this;}_createClass(Tooltip,[{key:\"componentDidMount\",value:function componentDidMount(){requestAnimationFrame(this.getElementPosition);}},{key:\"render\",value:function render(){var _this2=this;var isVisible=this.state.isVisible;var _this$props6=this.props,onClose=_this$props6.onClose,onOpen=_this$props6.onOpen,ModalComponent=_this$props6.ModalComponent;return React.createElement(View,{collapsable:false,ref:function ref(e){_this2.renderedElement=e;}},this.renderContent(false),React.createElement(ModalComponent,{animationType:\"fade\",visible:isVisible,transparent:true,onDismiss:onClose,onShow:onOpen,onRequestClose:onClose},this.renderModalContent()));}}]);return Tooltip;}(React.PureComponent);Tooltip.propTypes={children:PropTypes.element,withPointer:PropTypes.bool,popover:PropTypes.element,toggleOnPress:PropTypes.bool,toggleAction:PropTypes.oneOf(['onPress','onLongPress']),height:PropTypes.number,width:PropTypes.oneOfType([PropTypes.number,PropTypes.string]),containerStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),pointerColor:PropTypes.string,onClose:PropTypes.func,onOpen:PropTypes.func,overlayColor:PropTypes.string,withOverlay:PropTypes.bool,backgroundColor:PropTypes.string,highlightColor:PropTypes.string,skipAndroidStatusBar:PropTypes.bool,ModalComponent:PropTypes.elementType,closeOnlyOnBackdropPress:PropTypes.bool};Tooltip.defaultProps={withOverlay:true,overlayColor:'rgba(250, 250, 250, 0.70)',highlightColor:'transparent',withPointer:true,toggleOnPress:true,toggleAction:'onPress',height:40,width:150,containerStyle:{},backgroundColor:'#617080',onClose:function onClose(){},onOpen:function onOpen(){},skipAndroidStatusBar:false,ModalComponent:Modal,closeOnlyOnBackdropPress:false};var styles={container:function container(withOverlay,overlayColor){return{backgroundColor:withOverlay?overlayColor:'transparent',flex:1};},closeOnlyOnBackdropPressViewWrapper:{position:'absolute'}};export{Tooltip};export default withTheme(Tooltip,'Tooltip');","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/react_native/node_modules/react-native-elements/src/tooltip/Tooltip.js"],"names":["React","Fragment","PropTypes","withTheme","ScreenWidth","ScreenHeight","isIOS","Triangle","getTooltipCoordinate","getElementVisibleWidth","Tooltip","state","isVisible","yOffset","xOffset","elementWidth","elementHeight","toggleTooltip","onClose","props","getElementPosition","setState","prevState","wrapWithPress","toggleOnPress","toggleAction","children","getTooltipStyle","height","backgroundColor","width","withPointer","containerStyle","x","y","position","I18nManager","isRTL","renderPointer","tooltipY","pointerColor","pastMiddleLine","top","borderBottomColor","getTooltipHighlightedButtonStyle","highlightColor","renderTouchableHighlightedButton","TooltipHighlightedButtonStyle","renderStaticHighlightedButton","renderHighlightedButton","closeOnlyOnBackdropPress","renderContent","withTooltip","popover","tooltipStyle","skipAndroidStatusBar","renderedElement","measure","frameOffsetX","frameOffsetY","pageOffsetX","pageOffsetY","StatusBar","currentHeight","renderStaticModalContent","withOverlay","overlayColor","styles","container","closeOnlyOnBackdropPressViewWrapper","renderTogglingModalContent","renderModalContent","requestAnimationFrame","onOpen","ModalComponent","e","PureComponent","propTypes","element","bool","oneOf","number","oneOfType","string","object","array","func","elementType","defaultProps","Modal","flex"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableOpacity,\n  Modal,\n  View,\n  StatusBar,\n  I18nManager,\n} from 'react-native';\n\nimport { withTheme } from '../config';\nimport { ScreenWidth, ScreenHeight, isIOS } from '../helpers';\n\nimport Triangle from './Triangle';\nimport getTooltipCoordinate, {\n  getElementVisibleWidth,\n} from './getTooltipCoordinate';\n\nclass Tooltip extends React.PureComponent {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement;\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState((prevState) => {\n      if (prevState.isVisible) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithPress = (toggleOnPress, toggleAction, children) => {\n    if (toggleOnPress) {\n      return (\n        <TouchableOpacity\n          {...{ [toggleAction]: this.toggleTooltip }}\n          delayLongPress={250}\n          activeOpacity={1}\n        >\n          {children}\n        </TouchableOpacity>\n      );\n    }\n\n    return children;\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const {\n      height,\n      backgroundColor,\n      width,\n      withPointer,\n      containerStyle,\n    } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      [I18nManager.isRTL ? 'right' : 'left']: x,\n      top: y,\n      width,\n      height,\n      backgroundColor,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      padding: 10,\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = (tooltipY) => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerColor } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n\n    return (\n      <View\n        style={{\n          position: 'absolute',\n          top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n          [I18nManager.isRTL ? 'right' : 'left']:\n            xOffset +\n            getElementVisibleWidth(elementWidth, xOffset, ScreenWidth) / 2 -\n            7.5,\n        }}\n      >\n        <Triangle\n          style={{ borderBottomColor: pointerColor || backgroundColor }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n  getTooltipHighlightedButtonStyle = () => {\n    const { highlightColor } = this.props;\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    return {\n      position: 'absolute',\n      top: yOffset,\n      [I18nManager.isRTL ? 'right' : 'left']: xOffset,\n      backgroundColor: highlightColor,\n      overflow: 'visible',\n      width: elementWidth,\n      height: elementHeight,\n    };\n  };\n  renderTouchableHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <TouchableOpacity\n        testID=\"tooltipTouchableHighlightedButton\"\n        onPress={() => this.toggleTooltip()}\n        style={TooltipHighlightedButtonStyle}\n      >\n        {this.props.children}\n      </TouchableOpacity>\n    );\n  };\n  renderStaticHighlightedButton = () => {\n    const TooltipHighlightedButtonStyle = this.getTooltipHighlightedButtonStyle();\n    return (\n      <View style={TooltipHighlightedButtonStyle}>{this.props.children}</View>\n    );\n  };\n\n  renderHighlightedButton = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderTouchableHighlightedButton();\n    } else {\n      return this.renderStaticHighlightedButton();\n    }\n  };\n\n  renderContent = (withTooltip) => {\n    const { popover, withPointer, toggleOnPress, toggleAction } = this.props;\n\n    if (!withTooltip) {\n      return this.wrapWithPress(\n        toggleOnPress,\n        toggleAction,\n        this.props.children\n      );\n    }\n\n    const tooltipStyle = this.getTooltipStyle();\n    return (\n      <View>\n        {this.renderHighlightedButton()}\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View style={tooltipStyle} testID=\"tooltipPopoverContainer\">\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    requestAnimationFrame(this.getElementPosition);\n  }\n\n  getElementPosition = () => {\n    const { skipAndroidStatusBar } = this.props;\n    this.renderedElement &&\n      this.renderedElement.measure(\n        (\n          frameOffsetX,\n          frameOffsetY,\n          width,\n          height,\n          pageOffsetX,\n          pageOffsetY\n        ) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset:\n              isIOS || skipAndroidStatusBar\n                ? pageOffsetY\n                : pageOffsetY - StatusBar.currentHeight,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  renderStaticModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <Fragment>\n        <TouchableOpacity\n          style={styles.container(withOverlay, overlayColor)}\n          onPress={this.toggleTooltip}\n          activeOpacity={1}\n        />\n        <View style={styles.closeOnlyOnBackdropPressViewWrapper}>\n          {this.renderContent(true)}\n        </View>\n      </Fragment>\n    );\n  };\n  renderTogglingModalContent = () => {\n    const { withOverlay, overlayColor } = this.props;\n\n    return (\n      <TouchableOpacity\n        style={styles.container(withOverlay, overlayColor)}\n        onPress={this.toggleTooltip}\n        activeOpacity={1}\n      >\n        {this.renderContent(true)}\n      </TouchableOpacity>\n    );\n  };\n\n  renderModalContent = () => {\n    const { closeOnlyOnBackdropPress } = this.props;\n    if (closeOnlyOnBackdropPress) {\n      return this.renderStaticModalContent();\n    } else {\n      return this.renderTogglingModalContent();\n    }\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const { onClose, onOpen, ModalComponent } = this.props;\n\n    return (\n      <View\n        collapsable={false}\n        ref={(e) => {\n          this.renderedElement = e;\n        }}\n      >\n        {this.renderContent(false)}\n        <ModalComponent\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          {this.renderModalContent()}\n        </ModalComponent>\n      </View>\n    );\n  }\n}\n\nTooltip.propTypes = {\n  children: PropTypes.element,\n  withPointer: PropTypes.bool,\n  popover: PropTypes.element,\n  toggleOnPress: PropTypes.bool,\n  toggleAction: PropTypes.oneOf(['onPress', 'onLongPress']),\n  height: PropTypes.number,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  pointerColor: PropTypes.string,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func,\n  overlayColor: PropTypes.string,\n  withOverlay: PropTypes.bool,\n  backgroundColor: PropTypes.string,\n  highlightColor: PropTypes.string,\n  skipAndroidStatusBar: PropTypes.bool,\n  ModalComponent: PropTypes.elementType,\n  closeOnlyOnBackdropPress: PropTypes.bool,\n};\n\nTooltip.defaultProps = {\n  withOverlay: true,\n  overlayColor: 'rgba(250, 250, 250, 0.70)',\n  highlightColor: 'transparent',\n  withPointer: true,\n  toggleOnPress: true,\n  toggleAction: 'onPress',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n  skipAndroidStatusBar: false,\n  ModalComponent: Modal,\n  closeOnlyOnBackdropPress: false,\n};\n\nconst styles = {\n  container: (withOverlay, overlayColor) => ({\n    backgroundColor: withOverlay ? overlayColor : 'transparent',\n    flex: 1,\n  }),\n  closeOnlyOnBackdropPressViewWrapper: {\n    position: 'absolute',\n  },\n};\n\nexport { Tooltip };\nexport default withTheme(Tooltip, 'Tooltip');\n"]},"metadata":{},"sourceType":"module"}