{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TextInput from\"react-native-web/dist/exports/TextInput\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import color from'color';import IconButton from\"./IconButton\";import Surface from\"./Surface\";import{withTheme}from\"../core/theming\";import MaterialCommunityIcon from\"./MaterialCommunityIcon\";var Searchbar=React.forwardRef(function(_ref,ref){var _ref$clearAccessibili=_ref.clearAccessibilityLabel,clearAccessibilityLabel=_ref$clearAccessibili===void 0?'clear':_ref$clearAccessibili,clearIcon=_ref.clearIcon,icon=_ref.icon,customIconColor=_ref.iconColor,inputStyle=_ref.inputStyle,onIconPress=_ref.onIconPress,placeholder=_ref.placeholder,_ref$searchAccessibil=_ref.searchAccessibilityLabel,searchAccessibilityLabel=_ref$searchAccessibil===void 0?'search':_ref$searchAccessibil,style=_ref.style,theme=_ref.theme,value=_ref.value,rest=_objectWithoutProperties(_ref,[\"clearAccessibilityLabel\",\"clearIcon\",\"icon\",\"iconColor\",\"inputStyle\",\"onIconPress\",\"placeholder\",\"searchAccessibilityLabel\",\"style\",\"theme\",\"value\"]);var root=React.useRef(null);React.useImperativeHandle(ref,function(){var _root$current,_root$current2,_root$current4,_root$current5;return{focus:(_root$current=root.current)===null||_root$current===void 0?void 0:_root$current.focus,clear:(_root$current2=root.current)===null||_root$current2===void 0?void 0:_root$current2.clear,setNativeProps:function setNativeProps(args){var _root$current3;return(_root$current3=root.current)===null||_root$current3===void 0?void 0:_root$current3.setNativeProps(args);},isFocused:(_root$current4=root.current)===null||_root$current4===void 0?void 0:_root$current4.isFocused,blur:(_root$current5=root.current)===null||_root$current5===void 0?void 0:_root$current5.blur};});var handleClearPress=function handleClearPress(){var _root$current6,_rest$onChangeText;(_root$current6=root.current)===null||_root$current6===void 0?void 0:_root$current6.clear();(_rest$onChangeText=rest.onChangeText)===null||_rest$onChangeText===void 0?void 0:_rest$onChangeText.call(rest,'');};var colors=theme.colors,roundness=theme.roundness,dark=theme.dark,fonts=theme.fonts;var textColor=colors.text;var font=fonts.regular;var iconColor=customIconColor||(dark?textColor:color(textColor).alpha(0.54).rgb().string());var rippleColor=color(textColor).alpha(0.32).rgb().string();return React.createElement(Surface,{style:[{borderRadius:roundness,elevation:4},styles.container,style]},React.createElement(IconButton,{accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\",borderless:true,rippleColor:rippleColor,onPress:onIconPress,color:iconColor,icon:icon||function(_ref2){var size=_ref2.size,color=_ref2.color;return React.createElement(MaterialCommunityIcon,{name:\"magnify\",color:color,size:size,direction:I18nManager.isRTL?'rtl':'ltr'});},accessibilityLabel:searchAccessibilityLabel}),React.createElement(TextInput,_extends({style:[styles.input,_objectSpread({color:textColor},font),inputStyle],placeholder:placeholder||'',placeholderTextColor:colors.placeholder,selectionColor:colors.primary,underlineColorAndroid:\"transparent\",returnKeyType:\"search\",keyboardAppearance:dark?'dark':'light',accessibilityTraits:\"search\",accessibilityRole:\"search\",ref:root,value:value},rest)),React.createElement(IconButton,{borderless:true,disabled:!value,accessibilityLabel:clearAccessibilityLabel,color:value?iconColor:'rgba(255, 255, 255, 0)',rippleColor:rippleColor,onPress:handleClearPress,icon:clearIcon||function(_ref3){var size=_ref3.size,color=_ref3.color;return React.createElement(MaterialCommunityIcon,{name:\"close\",color:color,size:size,direction:I18nManager.isRTL?'rtl':'ltr'});},accessibilityTraits:\"button\",accessibilityComponentType:\"button\",accessibilityRole:\"button\"}));});var styles=StyleSheet.create({container:{flexDirection:'row',alignItems:'center'},input:{flex:1,fontSize:18,paddingLeft:8,alignSelf:'stretch',textAlign:I18nManager.isRTL?'right':'left',minWidth:0}});export default withTheme(Searchbar);","map":{"version":3,"sources":["Searchbar.tsx"],"names":["Searchbar","clearAccessibilityLabel","iconColor","searchAccessibilityLabel","rest","root","React","focus","clear","setNativeProps","args","isFocused","blur","handleClearPress","fonts","textColor","colors","font","customIconColor","dark","color","rippleColor","borderRadius","elevation","styles","icon","I18nManager","placeholder","value","clearIcon","container","flexDirection","alignItems","input","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  TextInput,\n  I18nManager,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport IconButton from './IconButton';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport type { IconSource } from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\n\ntype Props = React.ComponentPropsWithRef<typeof TextInput> & {\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  clearAccessibilityLabel?: string;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  searchAccessibilityLabel?: string;\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: () => void;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Custom icon for clear button, default will be icon close\n   */\n  clearIcon?: IconSource;\n};\n\ntype TextInputHandles = Pick<\n  TextInput,\n  'setNativeProps' | 'isFocused' | 'clear' | 'blur' | 'focus'\n>;\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [searchQuery, setSearchQuery] = React.useState('');\n *\n *   const onChangeSearch = query => setSearchQuery(query);\n *\n *   return (\n *     <Searchbar\n *       placeholder=\"Search\"\n *       onChangeText={onChangeSearch}\n *       value={searchQuery}\n *     />\n *   );\n * };\n *\n * export default MyComponent;\n\n * ```\n */\nconst Searchbar = React.forwardRef<TextInputHandles, Props>(\n  (\n    {\n      clearAccessibilityLabel = 'clear',\n      clearIcon,\n      icon,\n      iconColor: customIconColor,\n      inputStyle,\n      onIconPress,\n      placeholder,\n      searchAccessibilityLabel = 'search',\n      style,\n      theme,\n      value,\n      ...rest\n    }: Props,\n    ref\n  ) => {\n    const root = React.useRef<TextInput>(null);\n\n    React.useImperativeHandle(ref, () => ({\n      // @ts-ignore\n      focus: root.current?.focus,\n      // @ts-ignore\n      clear: root.current?.clear,\n      setNativeProps: (args: Object) => root.current?.setNativeProps(args),\n      // @ts-ignore\n      isFocused: root.current?.isFocused,\n      // @ts-ignore\n      blur: root.current?.blur,\n    }));\n\n    const handleClearPress = () => {\n      root.current?.clear();\n      rest.onChangeText?.('');\n    };\n\n    const { colors, roundness, dark, fonts } = theme;\n    const textColor = colors.text;\n    const font = fonts.regular;\n    const iconColor =\n      customIconColor ||\n      (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n    const rippleColor = color(textColor).alpha(0.32).rgb().string();\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness, elevation: 4 },\n          styles.container,\n          style,\n        ]}\n      >\n        <IconButton\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          color={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityLabel={searchAccessibilityLabel}\n        />\n        <TextInput\n          style={[styles.input, { color: textColor, ...font }, inputStyle]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={colors.placeholder}\n          selectionColor={colors.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityTraits=\"search\"\n          accessibilityRole=\"search\"\n          ref={root}\n          value={value}\n          {...rest}\n        />\n        <IconButton\n          borderless\n          disabled={!value}\n          accessibilityLabel={clearAccessibilityLabel}\n          color={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n          rippleColor={rippleColor}\n          onPress={handleClearPress}\n          icon={\n            clearIcon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"close\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n        />\n      </Surface>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n});\n\nexport default withTheme(Searchbar);\n"]},"metadata":{},"sourceType":"module"}