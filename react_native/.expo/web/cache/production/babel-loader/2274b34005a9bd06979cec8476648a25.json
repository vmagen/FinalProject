{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import color from'color';import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";var ListSubheader=function ListSubheader(_ref){var style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"style\",\"theme\"]);var colors=theme.colors,fonts=theme.fonts;var font=fonts.medium;var textColor=color(colors.text).alpha(0.54).rgb().string();return React.createElement(Text,_extends({numberOfLines:1},rest,{style:[styles.container,_objectSpread({color:textColor},font),style]}));};ListSubheader.displayName='List.Subheader';var styles=StyleSheet.create({container:{paddingHorizontal:16,paddingVertical:13}});export default withTheme(ListSubheader);","map":{"version":3,"sources":["ListSubheader.tsx"],"names":["ListSubheader","rest","fonts","font","textColor","color","colors","styles","container","paddingHorizontal","paddingVertical","withTheme"],"mappings":"2sCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iEAEA,MAAA,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,IAAA,0BACA,OAAA,SAAA,0BA0BA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAsC,IAArC,CAAA,KAAqC,MAArC,KAAqC,CAArC,KAAqC,MAArC,KAAqC,CAAlBC,IAAkB,qDACpD,CAAA,MADoD,CAC1D,KAD0D,CACpD,MADoD,CAC1CC,KAD0C,CAC1D,KAD0D,CAC1CA,KAD0C,CAE1D,GAAMC,CAAAA,IAAI,CAAGD,KAAK,CAAlB,MAAA,CACA,GAAME,CAAAA,SAAS,CAAGC,KAAK,CAACC,MAAM,CAAZD,IAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,aAAa,CAAE,CADjB,CAAA,CAAA,IAAA,CAAA,CAGE,KAAK,CAAE,CAACE,MAAM,CAAP,SAAA,gBAAqBF,KAAK,CAAP,SAAnB,EAA0CF,IAA1C,EAAA,KAAA,CAHT,CAAA,CAAA,CADF,CALF,CAAA,CAcAH,aAAa,CAAbA,WAAAA,CAAAA,gBAAAA,CAEA,GAAMO,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BC,SAAS,CAAE,CACTC,iBAAiB,CADR,EAAA,CAETC,eAAe,CAAE,EAFR,CADoB,CAAlB,CAAf,CAOA,cAAeC,CAAAA,SAAS,CAAxB,aAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport color from 'color';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({ style, theme, ...rest }: Props) => {\n  const { colors, fonts } = theme;\n  const font = fonts.medium;\n  const textColor = color(colors.text).alpha(0.54).rgb().string();\n\n  return (\n    <Text\n      numberOfLines={1}\n      {...rest}\n      style={[styles.container, { color: textColor, ...font }, style]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default withTheme(ListSubheader);\n"]},"metadata":{},"sourceType":"module"}