{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends from\"@babel/runtime/helpers/extends\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}import React from'react';import PropTypes from'prop-types';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Platform from\"react-native-web/dist/exports/Platform\";import{withTheme}from\"../config\";var TRACK_SIZE=4;var THUMB_SIZE=40;var TRACK_STYLE=Platform.select({web:0,default:-1});var DEFAULT_ANIMATION_CONFIGS={spring:{friction:7,tension:100,useNativeDriver:false},timing:{duration:150,easing:Easing.inOut(Easing.ease),delay:0,useNativeDriver:false}};var getBoundedValue=function getBoundedValue(value,maximumValue,minimumValue){return Math.max(Math.min(value,maximumValue),minimumValue);};var Rect=function(){function Rect(x,y,width,height){_classCallCheck(this,Rect);this.x=x;this.y=y;this.width=width;this.height=height;}_createClass(Rect,[{key:\"containsPoint\",value:function containsPoint(x,y){return x>=this.x&&y>=this.y&&x<=this.x+this.width&&y<=this.y+this.height;}}]);return Rect;}();var Slider=function(_React$Component){_inherits(Slider,_React$Component);var _super=_createSuper(Slider);function Slider(props){var _this;_classCallCheck(this,Slider);_this=_super.call(this,props);_this.measureContainer=function(x){_this.handleMeasure('containerSize',x);};_this.measureTrack=function(x){_this.handleMeasure('trackSize',x);};_this.measureThumb=function(x){_this.handleMeasure('thumbSize',x);};_this.state={containerSize:{width:0,height:0},trackSize:{width:0,height:0},thumbSize:{width:0,height:0},allMeasured:false,value:new Animated.Value(getBoundedValue(props.value,props.maximumValue,props.minimumValue))};_this.panResponder=PanResponder.create({onStartShouldSetPanResponder:_this.handleStartShouldSetPanResponder.bind(_assertThisInitialized(_this)),onMoveShouldSetPanResponder:_this.handleMoveShouldSetPanResponder.bind(_assertThisInitialized(_this)),onPanResponderGrant:_this.handlePanResponderGrant.bind(_assertThisInitialized(_this)),onPanResponderMove:_this.handlePanResponderMove.bind(_assertThisInitialized(_this)),onPanResponderRelease:_this.handlePanResponderEnd.bind(_assertThisInitialized(_this)),onPanResponderTerminationRequest:_this.handlePanResponderRequestEnd.bind(_assertThisInitialized(_this)),onPanResponderTerminate:_this.handlePanResponderEnd.bind(_assertThisInitialized(_this))});_this.isVertical=props.orientation==='vertical';_this.componentDidUpdate(props,true);return _this;}_createClass(Slider,[{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,force){var newValue=getBoundedValue(this.props.value,this.props.maximumValue,this.props.minimumValue);if(prevProps.value!==newValue||force){if(this.props.animateTransitions){this.setCurrentValueAnimated(newValue);}else{this.setCurrentValue(newValue);}}}},{key:\"setCurrentValue\",value:function setCurrentValue(value){this.state.value.setValue(value);}},{key:\"setCurrentValueAnimated\",value:function setCurrentValueAnimated(value){var animationType=this.props.animationType;var animationConfig=_extends({},DEFAULT_ANIMATION_CONFIGS[animationType],this.props.animationConfig,{toValue:value});Animated[animationType](this.state.value,animationConfig).start();}},{key:\"handleMoveShouldSetPanResponder\",value:function handleMoveShouldSetPanResponder(){return false;}},{key:\"handlePanResponderGrant\",value:function handlePanResponderGrant(){this._previousLeft=this.getThumbLeft(this.getCurrentValue());this.fireChangeEvent('onSlidingStart');}},{key:\"handlePanResponderMove\",value:function handlePanResponderMove(_,gestureState){if(this.props.disabled){return;}this.setCurrentValue(this.getValue(gestureState));this.fireChangeEvent('onValueChange');}},{key:\"handlePanResponderRequestEnd\",value:function handlePanResponderRequestEnd(){return false;}},{key:\"handlePanResponderEnd\",value:function handlePanResponderEnd(_,gestureState){if(this.props.disabled){return;}this.setCurrentValue(this.getValue(gestureState));this.fireChangeEvent('onSlidingComplete');}},{key:\"thumbHitTest\",value:function thumbHitTest(_ref){var nativeEvent=_ref.nativeEvent;var thumbTouchRect=this.getThumbTouchRect();return thumbTouchRect.containsPoint(nativeEvent.locationX,nativeEvent.locationY);}},{key:\"handleStartShouldSetPanResponder\",value:function handleStartShouldSetPanResponder(e){if(!this.props.allowTouchTrack){return this.thumbHitTest(e);}this.setCurrentValue(this.getOnTouchValue(e));this.fireChangeEvent('onValueChange');return true;}},{key:\"fireChangeEvent\",value:function fireChangeEvent(event){if(this.props[event]){this.props[event](this.getCurrentValue());}}},{key:\"getOnTouchValue\",value:function getOnTouchValue(_ref2){var nativeEvent=_ref2.nativeEvent;var location=this.isVertical?nativeEvent.locationY:nativeEvent.locationX;return this.getValueForTouch(location);}},{key:\"getValueForTouch\",value:function getValueForTouch(location){var length=this.state.containerSize.width-this.state.thumbSize.width;var ratio=location/length;var newValue=ratio*(this.props.maximumValue-this.props.minimumValue);if(this.props.step){newValue=Math.round(newValue/this.props.step)*this.props.step;}return getBoundedValue(newValue+this.props.minimumValue,this.props.maximumValue,this.props.minimumValue);}},{key:\"getTouchOverflowSize\",value:function getTouchOverflowSize(){var _this$state=this.state,thumbSize=_this$state.thumbSize,allMeasured=_this$state.allMeasured,containerSize=_this$state.containerSize;var thumbTouchSize=this.props.thumbTouchSize;var size={};if(allMeasured===true){size.width=Math.max(0,thumbTouchSize.width-thumbSize.width);size.height=Math.max(0,thumbTouchSize.height-containerSize.height);}return size;}},{key:\"getTouchOverflowStyle\",value:function getTouchOverflowStyle(){var _this$getTouchOverflo=this.getTouchOverflowSize(),width=_this$getTouchOverflo.width,height=_this$getTouchOverflo.height;var touchOverflowStyle={};if(width!==undefined&&height!==undefined){var verticalMargin=-height/2;touchOverflowStyle.marginTop=verticalMargin;touchOverflowStyle.marginBottom=verticalMargin;var horizontalMargin=-width/2;touchOverflowStyle.marginLeft=horizontalMargin;touchOverflowStyle.marginRight=horizontalMargin;}if(this.props.debugTouchArea===true){touchOverflowStyle.backgroundColor='orange';touchOverflowStyle.opacity=0.5;}return touchOverflowStyle;}},{key:\"handleMeasure\",value:function handleMeasure(name,x){var _x$nativeEvent$layout=x.nativeEvent.layout,layoutWidth=_x$nativeEvent$layout.width,layoutHeight=_x$nativeEvent$layout.height;var width=this.isVertical?layoutHeight:layoutWidth;var height=this.isVertical?layoutWidth:layoutHeight;var size={width:width,height:height};var storeName=\"_\"+name;var currentSize=this[storeName];if(currentSize&&width===currentSize.width&&height===currentSize.height){return;}this[storeName]=size;if(this._containerSize&&this._trackSize&&this._thumbSize){this.setState({containerSize:this._containerSize,trackSize:this._trackSize,thumbSize:this._thumbSize,allMeasured:true});}}},{key:\"getValue\",value:function getValue(gestureState){var location=this._previousLeft+(this.isVertical?gestureState.dy:gestureState.dx);return this.getValueForTouch(location);}},{key:\"getCurrentValue\",value:function getCurrentValue(){return this.state.value.__getValue();}},{key:\"getRatio\",value:function getRatio(value){return(value-this.props.minimumValue)/(this.props.maximumValue-this.props.minimumValue);}},{key:\"getThumbLeft\",value:function getThumbLeft(value){var ratio=this.getRatio(value);return ratio*(this.state.containerSize.width-this.state.thumbSize.width);}},{key:\"getThumbTouchRect\",value:function getThumbTouchRect(){var _this$state2=this.state,thumbSize=_this$state2.thumbSize,containerSize=_this$state2.containerSize;var thumbTouchSize=this.props.thumbTouchSize;var touchOverflowSize=this.getTouchOverflowSize();var height=touchOverflowSize.height/2+(containerSize.height-thumbTouchSize.height)/2;var width=touchOverflowSize.width/2+this.getThumbLeft(this.getCurrentValue())+(thumbSize.width-thumbTouchSize.width)/2;if(this.isVertical){return new Rect(height,width,thumbTouchSize.width,thumbTouchSize.height);}return new Rect(width,height,thumbTouchSize.width,thumbTouchSize.height);}},{key:\"renderDebugThumbTouchRect\",value:function renderDebugThumbTouchRect(thumbLeft){var thumbTouchRect=this.getThumbTouchRect();var positionStyle={left:thumbLeft,top:thumbTouchRect.y,width:thumbTouchRect.width,height:thumbTouchRect.height};return React.createElement(Animated.View,{style:positionStyle,pointerEvents:\"none\"});}},{key:\"getMinimumTrackStyles\",value:function getMinimumTrackStyles(thumbStart){var _this$state3=this.state,thumbSize=_this$state3.thumbSize,trackSize=_this$state3.trackSize;var minimumTrackStyle={position:'absolute'};if(this.isVertical){minimumTrackStyle.height=Animated.add(thumbStart,thumbSize.height/2);minimumTrackStyle.marginLeft=trackSize.width*TRACK_STYLE;}else{minimumTrackStyle.width=Animated.add(thumbStart,thumbSize.width/2);minimumTrackStyle.marginTop=trackSize.height*TRACK_STYLE;}return minimumTrackStyle;}},{key:\"getThumbPositionStyles\",value:function getThumbPositionStyles(thumbStart){return[_defineProperty({},this.isVertical?'translateY':'translateX',thumbStart)];}},{key:\"render\",value:function render(){var _this$props=this.props,minimumValue=_this$props.minimumValue,maximumValue=_this$props.maximumValue,minimumTrackTintColor=_this$props.minimumTrackTintColor,maximumTrackTintColor=_this$props.maximumTrackTintColor,thumbTintColor=_this$props.thumbTintColor,containerStyle=_this$props.containerStyle,style=_this$props.style,trackStyle=_this$props.trackStyle,thumbStyle=_this$props.thumbStyle,thumbProps=_this$props.thumbProps,debugTouchArea=_this$props.debugTouchArea,orientation=_this$props.orientation,other=_objectWithoutProperties(_this$props,[\"minimumValue\",\"maximumValue\",\"minimumTrackTintColor\",\"maximumTrackTintColor\",\"thumbTintColor\",\"containerStyle\",\"style\",\"trackStyle\",\"thumbStyle\",\"thumbProps\",\"debugTouchArea\",\"orientation\"]);var _this$state4=this.state,value=_this$state4.value,containerSize=_this$state4.containerSize,thumbSize=_this$state4.thumbSize,allMeasured=_this$state4.allMeasured;var mainStyles=containerStyle||styles;var appliedTrackStyle=StyleSheet.flatten([styles.track,trackStyle]);var thumbStart=value.interpolate({inputRange:[minimumValue,maximumValue],outputRange:[0,containerSize.width-thumbSize.width]});var valueVisibleStyle={};if(!allMeasured){valueVisibleStyle.height=0;valueVisibleStyle.width=0;}var minimumTrackStyle=_objectSpread(_objectSpread({},this.getMinimumTrackStyles(thumbStart)),{},{backgroundColor:minimumTrackTintColor},valueVisibleStyle);var touchOverflowStyle=this.getTouchOverflowStyle();return React.createElement(View,_extends({},other,{style:StyleSheet.flatten([this.isVertical?mainStyles.containerVertical:mainStyles.containerHorizontal,style]),onLayout:this.measureContainer}),React.createElement(View,{style:StyleSheet.flatten([mainStyles.track,this.isVertical?mainStyles.trackVertical:mainStyles.trackHorizontal,appliedTrackStyle,{backgroundColor:maximumTrackTintColor}]),onLayout:this.measureTrack}),React.createElement(Animated.View,{style:StyleSheet.flatten([mainStyles.track,this.isVertical?mainStyles.trackVertical:mainStyles.trackHorizontal,appliedTrackStyle,minimumTrackStyle])}),React.createElement(SliderThumb,_extends({isVisible:allMeasured,onLayout:this.measureThumb.bind(this),style:thumbStyle,color:thumbTintColor,start:thumbStart,vertical:this.isVertical},thumbProps)),React.createElement(View,_extends({style:StyleSheet.flatten([styles.touchArea,touchOverflowStyle])},this.panResponder.panHandlers),debugTouchArea===true&&this.renderDebugThumbTouchRect(thumbStart)));}}]);return Slider;}(React.Component);var SliderThumb=function SliderThumb(_ref4){var Component=_ref4.Component,isVisible=_ref4.isVisible,onLayout=_ref4.onLayout,style=_ref4.style,start=_ref4.start,color=_ref4.color,vertical=_ref4.vertical,props=_objectWithoutProperties(_ref4,[\"Component\",\"isVisible\",\"onLayout\",\"style\",\"start\",\"color\",\"vertical\"]);var ThumbComponent=Component||Animated.View;var axis=vertical?'translateY':'translateX';var thumbPosition=[_defineProperty({},axis,start)];var styleTransform=style&&style.transform||[];var visibleStyle=isVisible?{}:{height:0,width:0};return React.createElement(ThumbComponent,_extends({testID:\"sliderThumb\",onLayout:onLayout,style:StyleSheet.flatten([_objectSpread({backgroundColor:color,transform:[].concat(thumbPosition,_toConsumableArray(styleTransform))},visibleStyle),styles.thumb,style])},props));};Slider.propTypes={value:PropTypes.number,disabled:PropTypes.bool,minimumValue:PropTypes.number,maximumValue:PropTypes.number,step:PropTypes.number,minimumTrackTintColor:PropTypes.string,maximumTrackTintColor:PropTypes.string,allowTouchTrack:PropTypes.bool,thumbTintColor:PropTypes.string,thumbTouchSize:PropTypes.shape({width:PropTypes.number,height:PropTypes.number}),onValueChange:PropTypes.func,onSlidingStart:PropTypes.func,onSlidingComplete:PropTypes.func,style:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),trackStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),thumbStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array]),thumbProps:PropTypes.object,debugTouchArea:PropTypes.bool,animateTransitions:PropTypes.bool,animationType:PropTypes.oneOf(['spring','timing']),orientation:PropTypes.oneOf(['horizontal','vertical']),animationConfig:PropTypes.object,containerStyle:PropTypes.oneOfType([PropTypes.object,PropTypes.array])};Slider.defaultProps={value:0,minimumValue:0,maximumValue:1,step:0,minimumTrackTintColor:'#3f3f3f',maximumTrackTintColor:'#b3b3b3',allowTouchTrack:false,thumbTintColor:'red',thumbTouchSize:{width:THUMB_SIZE,height:THUMB_SIZE},debugTouchArea:false,animationType:'timing',orientation:'horizontal'};var styles=StyleSheet.create({containerHorizontal:{height:40,justifyContent:'center'},containerVertical:{width:40,flexDirection:'column',alignItems:'center'},track:{borderRadius:TRACK_SIZE/2},trackHorizontal:{height:TRACK_SIZE},trackVertical:{flex:1,width:TRACK_SIZE},thumb:{position:'absolute',width:THUMB_SIZE,height:THUMB_SIZE,borderRadius:THUMB_SIZE/2},touchArea:{position:'absolute',backgroundColor:'transparent',top:0,left:0,right:0,bottom:0},debugThumbTouchArea:{position:'absolute',backgroundColor:'green',opacity:0.5}});export{Slider};export default withTheme(Slider,'Slider');","map":{"version":3,"sources":["C:/Users/vmage/OneDrive/Ruppin/שנה ג/סמסטר ב/FinalProject/react_native/node_modules/react-native-elements/src/slider/Slider.js"],"names":["React","PropTypes","withTheme","TRACK_SIZE","THUMB_SIZE","TRACK_STYLE","Platform","select","web","default","DEFAULT_ANIMATION_CONFIGS","spring","friction","tension","useNativeDriver","timing","duration","easing","Easing","inOut","ease","delay","getBoundedValue","value","maximumValue","minimumValue","Math","max","min","Rect","x","y","width","height","Slider","props","measureContainer","handleMeasure","measureTrack","measureThumb","state","containerSize","trackSize","thumbSize","allMeasured","Animated","Value","panResponder","PanResponder","create","onStartShouldSetPanResponder","handleStartShouldSetPanResponder","bind","onMoveShouldSetPanResponder","handleMoveShouldSetPanResponder","onPanResponderGrant","handlePanResponderGrant","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminationRequest","handlePanResponderRequestEnd","onPanResponderTerminate","isVertical","orientation","componentDidUpdate","prevProps","force","newValue","animateTransitions","setCurrentValueAnimated","setCurrentValue","setValue","animationType","animationConfig","toValue","start","_previousLeft","getThumbLeft","getCurrentValue","fireChangeEvent","_","gestureState","disabled","getValue","nativeEvent","thumbTouchRect","getThumbTouchRect","containsPoint","locationX","locationY","e","allowTouchTrack","thumbHitTest","getOnTouchValue","event","location","getValueForTouch","length","ratio","step","round","thumbTouchSize","size","getTouchOverflowSize","touchOverflowStyle","undefined","verticalMargin","marginTop","marginBottom","horizontalMargin","marginLeft","marginRight","debugTouchArea","backgroundColor","opacity","name","layout","layoutWidth","layoutHeight","storeName","currentSize","_containerSize","_trackSize","_thumbSize","setState","dy","dx","__getValue","getRatio","touchOverflowSize","thumbLeft","positionStyle","left","top","thumbStart","minimumTrackStyle","position","add","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","containerStyle","style","trackStyle","thumbStyle","thumbProps","other","mainStyles","styles","appliedTrackStyle","StyleSheet","flatten","track","interpolate","inputRange","outputRange","valueVisibleStyle","getMinimumTrackStyles","getTouchOverflowStyle","containerVertical","containerHorizontal","trackVertical","trackHorizontal","touchArea","panHandlers","renderDebugThumbTouchRect","Component","SliderThumb","isVisible","onLayout","color","vertical","ThumbComponent","View","axis","thumbPosition","styleTransform","transform","visibleStyle","thumb","propTypes","number","bool","string","shape","onValueChange","func","onSlidingStart","onSlidingComplete","oneOfType","object","array","oneOf","defaultProps","justifyContent","flexDirection","alignItems","borderRadius","flex","right","bottom","debugThumbTouchArea"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  StyleSheet,\n  Animated,\n  Easing,\n  PanResponder,\n  Platform,\n} from 'react-native';\n\nimport { withTheme } from '../config';\n\nconst TRACK_SIZE = 4;\nconst THUMB_SIZE = 40;\nconst TRACK_STYLE = Platform.select({ web: 0, default: -1 });\n\nconst DEFAULT_ANIMATION_CONFIGS = {\n  spring: {\n    friction: 7,\n    tension: 100,\n    useNativeDriver: false,\n  },\n  timing: {\n    duration: 150,\n    easing: Easing.inOut(Easing.ease),\n    delay: 0,\n    useNativeDriver: false,\n  },\n};\n\nconst getBoundedValue = (value, maximumValue, minimumValue) =>\n  Math.max(Math.min(value, maximumValue), minimumValue);\n\nclass Rect {\n  constructor(x, y, width, height) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  containsPoint(x, y) {\n    return (\n      x >= this.x &&\n      y >= this.y &&\n      x <= this.x + this.width &&\n      y <= this.y + this.height\n    );\n  }\n}\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      containerSize: { width: 0, height: 0 },\n      trackSize: { width: 0, height: 0 },\n      thumbSize: { width: 0, height: 0 },\n      allMeasured: false,\n      value: new Animated.Value(\n        getBoundedValue(props.value, props.maximumValue, props.minimumValue)\n      ),\n    };\n\n    this.panResponder = PanResponder.create({\n      onStartShouldSetPanResponder: this.handleStartShouldSetPanResponder.bind(\n        this\n      ),\n      onMoveShouldSetPanResponder: this.handleMoveShouldSetPanResponder.bind(\n        this\n      ),\n      onPanResponderGrant: this.handlePanResponderGrant.bind(this),\n      onPanResponderMove: this.handlePanResponderMove.bind(this),\n      onPanResponderRelease: this.handlePanResponderEnd.bind(this),\n      onPanResponderTerminationRequest: this.handlePanResponderRequestEnd.bind(\n        this\n      ),\n      onPanResponderTerminate: this.handlePanResponderEnd.bind(this),\n    });\n    this.isVertical = props.orientation === 'vertical';\n    this.componentDidUpdate(props, true);\n  }\n\n  componentDidUpdate(prevProps, force) {\n    const newValue = getBoundedValue(\n      this.props.value,\n      this.props.maximumValue,\n      this.props.minimumValue\n    );\n\n    if (prevProps.value !== newValue || force) {\n      if (this.props.animateTransitions) {\n        this.setCurrentValueAnimated(newValue);\n      } else {\n        this.setCurrentValue(newValue);\n      }\n    }\n  }\n\n  setCurrentValue(value) {\n    this.state.value.setValue(value);\n  }\n\n  setCurrentValueAnimated(value) {\n    const { animationType } = this.props;\n    const animationConfig = Object.assign(\n      {},\n      DEFAULT_ANIMATION_CONFIGS[animationType],\n      this.props.animationConfig,\n      {\n        toValue: value,\n      }\n    );\n\n    Animated[animationType](this.state.value, animationConfig).start();\n  }\n\n  handleMoveShouldSetPanResponder(/* e: Object, gestureState: Object */) {\n    // Should we become active when the user moves a touch over the thumb?\n    return false;\n  }\n\n  handlePanResponderGrant(/* e: Object, gestureState: Object */) {\n    this._previousLeft = this.getThumbLeft(this.getCurrentValue());\n    this.fireChangeEvent('onSlidingStart');\n  }\n\n  handlePanResponderMove(_, gestureState) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setCurrentValue(this.getValue(gestureState));\n    this.fireChangeEvent('onValueChange');\n  }\n\n  handlePanResponderRequestEnd() {\n    // Should we allow another component to take over this pan?\n    return false;\n  }\n\n  handlePanResponderEnd(_, gestureState) {\n    if (this.props.disabled) {\n      return;\n    }\n\n    this.setCurrentValue(this.getValue(gestureState));\n    this.fireChangeEvent('onSlidingComplete');\n  }\n\n  thumbHitTest({ nativeEvent }) {\n    const thumbTouchRect = this.getThumbTouchRect();\n    return thumbTouchRect.containsPoint(\n      nativeEvent.locationX,\n      nativeEvent.locationY\n    );\n  }\n\n  handleStartShouldSetPanResponder(e /* gestureState: Object */) {\n    // Should we become active when the user presses down on the thumb?\n    if (!this.props.allowTouchTrack) {\n      return this.thumbHitTest(e);\n    }\n    this.setCurrentValue(this.getOnTouchValue(e));\n    this.fireChangeEvent('onValueChange');\n    return true;\n  }\n\n  fireChangeEvent(event) {\n    if (this.props[event]) {\n      this.props[event](this.getCurrentValue());\n    }\n  }\n\n  // get value of where some touched on slider.\n  getOnTouchValue({ nativeEvent }) {\n    const location = this.isVertical\n      ? nativeEvent.locationY\n      : nativeEvent.locationX;\n\n    return this.getValueForTouch(location);\n  }\n\n  getValueForTouch(location) {\n    const length = this.state.containerSize.width - this.state.thumbSize.width;\n    const ratio = location / length;\n    let newValue = ratio * (this.props.maximumValue - this.props.minimumValue);\n\n    if (this.props.step) {\n      newValue = Math.round(newValue / this.props.step) * this.props.step;\n    }\n    return getBoundedValue(\n      newValue + this.props.minimumValue,\n      this.props.maximumValue,\n      this.props.minimumValue\n    );\n  }\n\n  getTouchOverflowSize() {\n    const { thumbSize, allMeasured, containerSize } = this.state;\n    const { thumbTouchSize } = this.props;\n\n    const size = {};\n    if (allMeasured === true) {\n      size.width = Math.max(0, thumbTouchSize.width - thumbSize.width);\n      size.height = Math.max(0, thumbTouchSize.height - containerSize.height);\n    }\n\n    return size;\n  }\n\n  getTouchOverflowStyle() {\n    const { width, height } = this.getTouchOverflowSize();\n\n    const touchOverflowStyle = {};\n    if (width !== undefined && height !== undefined) {\n      const verticalMargin = -height / 2;\n      touchOverflowStyle.marginTop = verticalMargin;\n      touchOverflowStyle.marginBottom = verticalMargin;\n\n      const horizontalMargin = -width / 2;\n      touchOverflowStyle.marginLeft = horizontalMargin;\n      touchOverflowStyle.marginRight = horizontalMargin;\n    }\n\n    if (this.props.debugTouchArea === true) {\n      touchOverflowStyle.backgroundColor = 'orange';\n      touchOverflowStyle.opacity = 0.5;\n    }\n\n    return touchOverflowStyle;\n  }\n\n  handleMeasure(name, x) {\n    const { width: layoutWidth, height: layoutHeight } = x.nativeEvent.layout;\n    const width = this.isVertical ? layoutHeight : layoutWidth;\n    const height = this.isVertical ? layoutWidth : layoutHeight;\n    const size = { width, height };\n    const storeName = `_${name}`;\n    const currentSize = this[storeName];\n    if (\n      currentSize &&\n      width === currentSize.width &&\n      height === currentSize.height\n    ) {\n      return;\n    }\n    this[storeName] = size;\n\n    if (this._containerSize && this._trackSize && this._thumbSize) {\n      this.setState({\n        containerSize: this._containerSize,\n        trackSize: this._trackSize,\n        thumbSize: this._thumbSize,\n        allMeasured: true,\n      });\n    }\n  }\n\n  measureContainer = (x) => {\n    this.handleMeasure('containerSize', x);\n  };\n\n  measureTrack = (x) => {\n    this.handleMeasure('trackSize', x);\n  };\n\n  measureThumb = (x) => {\n    this.handleMeasure('thumbSize', x);\n  };\n\n  getValue(gestureState) {\n    const location =\n      this._previousLeft +\n      (this.isVertical ? gestureState.dy : gestureState.dx);\n\n    return this.getValueForTouch(location);\n  }\n\n  getCurrentValue() {\n    return this.state.value.__getValue();\n  }\n\n  getRatio(value) {\n    return (\n      (value - this.props.minimumValue) /\n      (this.props.maximumValue - this.props.minimumValue)\n    );\n  }\n\n  getThumbLeft(value) {\n    const ratio = this.getRatio(value);\n    return (\n      ratio * (this.state.containerSize.width - this.state.thumbSize.width)\n    );\n  }\n\n  getThumbTouchRect() {\n    const { thumbSize, containerSize } = this.state;\n    const { thumbTouchSize } = this.props;\n    const touchOverflowSize = this.getTouchOverflowSize();\n    const height =\n      touchOverflowSize.height / 2 +\n      (containerSize.height - thumbTouchSize.height) / 2;\n    const width =\n      touchOverflowSize.width / 2 +\n      this.getThumbLeft(this.getCurrentValue()) +\n      (thumbSize.width - thumbTouchSize.width) / 2;\n\n    if (this.isVertical) {\n      return new Rect(\n        height,\n        width,\n        thumbTouchSize.width,\n        thumbTouchSize.height\n      );\n    }\n    return new Rect(width, height, thumbTouchSize.width, thumbTouchSize.height);\n  }\n\n  renderDebugThumbTouchRect(thumbLeft) {\n    const thumbTouchRect = this.getThumbTouchRect();\n    const positionStyle = {\n      left: thumbLeft,\n      top: thumbTouchRect.y,\n      width: thumbTouchRect.width,\n      height: thumbTouchRect.height,\n    };\n    return <Animated.View style={positionStyle} pointerEvents=\"none\" />;\n  }\n\n  getMinimumTrackStyles(thumbStart) {\n    const { thumbSize, trackSize } = this.state;\n    const minimumTrackStyle = {\n      position: 'absolute',\n    };\n    if (this.isVertical) {\n      minimumTrackStyle.height = Animated.add(thumbStart, thumbSize.height / 2);\n      minimumTrackStyle.marginLeft = trackSize.width * TRACK_STYLE;\n    } else {\n      minimumTrackStyle.width = Animated.add(thumbStart, thumbSize.width / 2);\n      minimumTrackStyle.marginTop = trackSize.height * TRACK_STYLE;\n    }\n    return minimumTrackStyle;\n  }\n\n  getThumbPositionStyles(thumbStart) {\n    return [{ [this.isVertical ? 'translateY' : 'translateX']: thumbStart }];\n  }\n\n  render() {\n    const {\n      minimumValue,\n      maximumValue,\n      minimumTrackTintColor,\n      maximumTrackTintColor,\n      thumbTintColor,\n      containerStyle,\n      style,\n      trackStyle,\n      thumbStyle,\n      thumbProps,\n      debugTouchArea,\n      orientation,\n      ...other\n    } = this.props;\n\n    const { value, containerSize, thumbSize, allMeasured } = this.state;\n\n    const mainStyles = containerStyle || styles;\n    const appliedTrackStyle = StyleSheet.flatten([styles.track, trackStyle]);\n    const thumbStart = value.interpolate({\n      inputRange: [minimumValue, maximumValue],\n      outputRange: [0, containerSize.width - thumbSize.width],\n      // extrapolate: 'clamp',\n    });\n\n    const valueVisibleStyle = {};\n    if (!allMeasured) {\n      valueVisibleStyle.height = 0;\n      valueVisibleStyle.width = 0;\n    }\n\n    const minimumTrackStyle = {\n      ...this.getMinimumTrackStyles(thumbStart),\n      backgroundColor: minimumTrackTintColor,\n      ...valueVisibleStyle,\n    };\n\n    const touchOverflowStyle = this.getTouchOverflowStyle();\n    return (\n      <View\n        {...other}\n        style={StyleSheet.flatten([\n          this.isVertical\n            ? mainStyles.containerVertical\n            : mainStyles.containerHorizontal,\n          style,\n        ])}\n        onLayout={this.measureContainer}\n      >\n        <View\n          style={StyleSheet.flatten([\n            mainStyles.track,\n            this.isVertical\n              ? mainStyles.trackVertical\n              : mainStyles.trackHorizontal,\n            appliedTrackStyle,\n            { backgroundColor: maximumTrackTintColor },\n          ])}\n          onLayout={this.measureTrack}\n        />\n        <Animated.View\n          style={StyleSheet.flatten([\n            mainStyles.track,\n            this.isVertical\n              ? mainStyles.trackVertical\n              : mainStyles.trackHorizontal,\n            appliedTrackStyle,\n            minimumTrackStyle,\n          ])}\n        />\n        <SliderThumb\n          isVisible={allMeasured}\n          onLayout={this.measureThumb.bind(this)}\n          style={thumbStyle}\n          color={thumbTintColor}\n          start={thumbStart}\n          vertical={this.isVertical}\n          {...thumbProps}\n        />\n        <View\n          style={StyleSheet.flatten([styles.touchArea, touchOverflowStyle])}\n          {...this.panResponder.panHandlers}\n        >\n          {debugTouchArea === true &&\n            this.renderDebugThumbTouchRect(thumbStart)}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst SliderThumb = ({\n  Component,\n  isVisible,\n  onLayout,\n  style,\n  start,\n  color,\n  vertical,\n  ...props\n}) => {\n  const ThumbComponent = Component || Animated.View;\n  const axis = vertical ? 'translateY' : 'translateX';\n  const thumbPosition = [{ [axis]: start }];\n  const styleTransform = (style && style.transform) || [];\n  const visibleStyle = isVisible ? {} : { height: 0, width: 0 };\n\n  return (\n    <ThumbComponent\n      testID=\"sliderThumb\"\n      onLayout={onLayout}\n      style={StyleSheet.flatten([\n        {\n          backgroundColor: color,\n          transform: [...thumbPosition, ...styleTransform],\n          ...visibleStyle,\n        },\n        styles.thumb,\n        style,\n      ])}\n      {...props}\n    />\n  );\n};\n\nSlider.propTypes = {\n  /**\n   * Initial value of the slider. The value should be between minimumValue\n   * and maximumValue, which default to 0 and 1 respectively.\n   * Default value is 0.\n   *\n   * *This is not a controlled component*, e.g. if you don't update\n   * the value, the component won't be reset to its inital value.\n   */\n  value: PropTypes.number,\n\n  /**\n   * If true the user won't be able to move the slider.\n   * Default value is false.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Initial minimum value of the slider. Default value is 0.\n   */\n  minimumValue: PropTypes.number,\n\n  /**\n   * Initial maximum value of the slider. Default value is 1.\n   */\n  maximumValue: PropTypes.number,\n\n  /**\n   * Step value of the slider. The value should be between 0 and\n   * (maximumValue - minimumValue). Default value is 0.\n   */\n  step: PropTypes.number,\n\n  /**\n   * The color used for the track to the left of the button. Overrides the\n   * default blue gradient image.\n   */\n  minimumTrackTintColor: PropTypes.string,\n\n  /**\n   * The color used for the track to the right of the button. Overrides the\n   * default blue gradient image.\n   */\n  maximumTrackTintColor: PropTypes.string,\n\n  /**\n   * If true, thumb will jump if user presses anywhere on the slide.\n   */\n  allowTouchTrack: PropTypes.bool,\n\n  /**\n   * The color used for the thumb.\n   */\n  thumbTintColor: PropTypes.string,\n\n  /**\n   * The size of the touch area that allows moving the thumb.\n   * The touch area has the same center has the visible thumb.\n   * This allows to have a visually small thumb while still allowing the user\n   * to move it easily.\n   * THUMB_SIZE = 20\n   * The default is {width: THUMB_SIZE, height: THUMB_SIZE}.\n   */\n  thumbTouchSize: PropTypes.shape({\n    width: PropTypes.number,\n    height: PropTypes.number,\n  }),\n\n  /**\n   * Callback continuously called while the user is dragging the slider.\n   */\n  onValueChange: PropTypes.func,\n\n  /**\n   * Callback called when the user starts changing the value (e.g. when\n   * the slider is pressed).\n   */\n  onSlidingStart: PropTypes.func,\n\n  /**\n   * Callback called when the user finishes changing the value (e.g. when\n   * the slider is released).\n   */\n  onSlidingComplete: PropTypes.func,\n\n  /**\n   * The style applied to the slider container.\n   */\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n  /**\n   * The style applied to the track.\n   */\n  trackStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n  /**\n   * The style applied to the thumb.\n   */\n  thumbStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n\n  /*\n   * The props applied to the thumb.\n   */\n  thumbProps: PropTypes.object,\n\n  /**\n   * Set this to true to visually see the thumb touch rect in green.\n   */\n  debugTouchArea: PropTypes.bool,\n\n  /**\n   * Set to true to animate values with default 'timing' animation type\n   */\n  animateTransitions: PropTypes.bool,\n\n  /**\n   * Custom Animation type. 'spring' or 'timing'.\n   */\n  animationType: PropTypes.oneOf(['spring', 'timing']),\n\n  /**\n   * Choose the orientation. 'horizontal' or 'vertical'.\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * Used to configure the animation parameters.  These are the same parameters in the Animated library.\n   */\n  animationConfig: PropTypes.object,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n};\n\nSlider.defaultProps = {\n  value: 0,\n  minimumValue: 0,\n  maximumValue: 1,\n  step: 0,\n  minimumTrackTintColor: '#3f3f3f',\n  maximumTrackTintColor: '#b3b3b3',\n  allowTouchTrack: false,\n  thumbTintColor: 'red',\n  thumbTouchSize: { width: THUMB_SIZE, height: THUMB_SIZE },\n  debugTouchArea: false,\n  animationType: 'timing',\n  orientation: 'horizontal',\n};\n\nconst styles = StyleSheet.create({\n  containerHorizontal: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  containerVertical: {\n    width: 40,\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  track: {\n    borderRadius: TRACK_SIZE / 2,\n  },\n  trackHorizontal: {\n    height: TRACK_SIZE,\n  },\n  trackVertical: {\n    flex: 1,\n    width: TRACK_SIZE,\n  },\n  thumb: {\n    position: 'absolute',\n    width: THUMB_SIZE,\n    height: THUMB_SIZE,\n    borderRadius: THUMB_SIZE / 2,\n  },\n  touchArea: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  debugThumbTouchArea: {\n    position: 'absolute',\n    backgroundColor: 'green',\n    opacity: 0.5,\n  },\n});\n\nexport { Slider };\nexport default withTheme(Slider, 'Slider');\n"]},"metadata":{},"sourceType":"module"}