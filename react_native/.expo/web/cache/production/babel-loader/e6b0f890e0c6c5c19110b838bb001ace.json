{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withTheme}from\"../../core/theming\";var defaultSize=64;var AvatarImage=function AvatarImage(_ref){var _ref$size=_ref.size,size=_ref$size===void 0?defaultSize:_ref$size,source=_ref.source,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"size\",\"source\",\"style\",\"theme\"]);var colors=theme.colors;var _ref2=StyleSheet.flatten(style)||{},_ref2$backgroundColor=_ref2.backgroundColor,backgroundColor=_ref2$backgroundColor===void 0?colors.primary:_ref2$backgroundColor;return React.createElement(View,_extends({style:[{width:size,height:size,borderRadius:size/2,backgroundColor:backgroundColor},style]},rest),typeof source==='function'&&source({size:size}),typeof source!=='function'&&React.createElement(Image,{source:source,style:{width:size,height:size,borderRadius:size/2}}));};AvatarImage.displayName='Avatar.Image';export default withTheme(AvatarImage);","map":{"version":3,"sources":["AvatarImage.tsx"],"names":["defaultSize","AvatarImage","size","rest","colors","backgroundColor","primary","StyleSheet","width","height","borderRadius","source","withTheme"],"mappings":"4WAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,6KASA,OAAA,SAAA,0BAEA,GAAMA,CAAAA,WAAW,CAAjB,EAAA,CA4CA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAMP,oBALXC,IAKW,CALXA,IAKW,oBANQ,WAMR,WANQ,MAMR,MANQ,MAMR,CANQ,KAMR,MANQ,KAMR,CANQ,KAMR,MANQ,KAMR,CADRC,IACQ,qEACHC,CAAAA,MADG,CACX,KADW,CACHA,MADG,WAGkCG,UAAU,CAAVA,OAAAA,CAAAA,KAAAA,GAA7C,EAHW,6BAGHF,eAHG,CAGHA,eAHG,gCAGeD,MAAM,CAACE,OAHtB,uBAKX,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACL,CACEE,KAAK,CADP,IAAA,CAEEC,MAAM,CAFR,IAAA,CAGEC,YAAY,CAAER,IAAI,CAHpB,CAAA,CAIEG,eAAAA,CAAAA,eAJF,CADK,CAAA,KAAA,CADT,CAAA,CAAA,IAAA,CAAA,CAYG,MAAA,CAAA,MAAA,GAAA,UAAA,EAAgCM,MAAM,CAAC,CAAET,IAAAA,CAAAA,IAAF,CAAD,CAZzC,CAaG,MAAA,CAAA,MAAA,GAAA,UAAA,EACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CACE,MAAM,CADR,MAAA,CAEE,KAAK,CAAE,CAAEM,KAAK,CAAP,IAAA,CAAeC,MAAM,CAArB,IAAA,CAA6BC,YAAY,CAAER,IAAI,CAAG,CAAlD,CAFT,CAAA,CAdJ,CADF,CAXF,CAAA,CAmCAD,WAAW,CAAXA,WAAAA,CAAAA,cAAAA,CAEA,cAAeW,CAAAA,SAAS,CAAxB,WAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  ImageSourcePropType,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\n\nconst defaultSize = 64;\n\nexport type AvatarImageSource =\n  | ImageSourcePropType\n  | ((props: { size: number }) => React.ReactNode);\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Image to display for the `Avatar`.\n   * It accepts a standard React Native Image `source` prop\n   * Or a function that returns an `Image`.\n   */\n  source: AvatarImageSource;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * export default MyComponent\n * ```\n */\nconst AvatarImage = ({\n  size = defaultSize,\n  source,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { colors } = theme;\n\n  const { backgroundColor = colors.primary } = StyleSheet.flatten(style) || {};\n\n  return (\n    <View\n      style={[\n        {\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor,\n        },\n        style,\n      ]}\n      {...rest}\n    >\n      {typeof source === 'function' && source({ size })}\n      {typeof source !== 'function' && (\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      )}\n    </View>\n  );\n};\n\nAvatarImage.displayName = 'Avatar.Image';\n\nexport default withTheme(AvatarImage);\n"]},"metadata":{},"sourceType":"module"}