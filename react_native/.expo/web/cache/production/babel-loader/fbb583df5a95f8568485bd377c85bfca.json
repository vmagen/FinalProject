{"ast":null,"code":"'use strict';var _classCallCheck=require(\"@babel/runtime/helpers/classCallCheck\");var _createClass=require(\"@babel/runtime/helpers/createClass\");function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var NativeGraphRequestManager=require('react-native').NativeModules.FBGraphRequest;function _verifyParameters(request){if(request.config&&request.config.parameters){for(var key in request.config.parameters){var param=request.config.parameters[key];if(typeof param==='object'&&param.string){continue;}throw new Error(\"Unexpected value for parameter '\"+key+\"'. Request parameters \"+\"need to be objects with a 'string' field.\");}}}var FBGraphRequestManager=function(){function FBGraphRequestManager(){_classCallCheck(this,FBGraphRequestManager);_defineProperty(this,\"requestBatch\",void 0);_defineProperty(this,\"requestCallbacks\",void 0);_defineProperty(this,\"batchCallback\",void 0);this.requestBatch=[];this.requestCallbacks=[];}_createClass(FBGraphRequestManager,[{key:\"addRequest\",value:function addRequest(request){_verifyParameters(request);this.requestBatch.push(request);this.requestCallbacks.push(request.callback);return this;}},{key:\"addBatchCallback\",value:function addBatchCallback(callback){this.batchCallback=callback;return this;}},{key:\"start\",value:function start(timeout){var that=this;var callback=function callback(error,result,response){if(response){that.requestCallbacks.forEach(function(innerCallback,index,array){if(innerCallback){innerCallback(response[index][0],response[index][1]);}});}if(that.batchCallback){that.batchCallback(error,result);}};NativeGraphRequestManager.start(this.requestBatch,timeout||0,callback);}}]);return FBGraphRequestManager;}();module.exports=FBGraphRequestManager;","map":{"version":3,"sources":["FBGraphRequestManager.js"],"names":["NativeGraphRequestManager","require","request","param","constructor","addRequest","_verifyParameters","addBatchCallback","start","that","callback","innerCallback","response","timeout","module"],"mappings":"AAuBA,a,0TAEA,GAAMA,CAAAA,yBAAyB,CAAGC,OAAO,CAAPA,cAAO,CAAPA,CAAAA,aAAAA,CAAlC,cAAA,CAOA,QAAA,CAAA,iBAAA,CAAA,OAAA,CAAkD,CAChD,GAAIC,OAAO,CAAPA,MAAAA,EAAkBA,OAAO,CAAPA,MAAAA,CAAtB,UAAA,CAAiD,CAC/C,IAAK,GAAL,CAAA,GAAA,GAAgBA,CAAAA,OAAO,CAAPA,MAAAA,CAAhB,UAAA,CAA2C,CACzC,GAAIC,CAAAA,KAAK,CAAGD,OAAO,CAAPA,MAAAA,CAAAA,UAAAA,CAAZ,GAAYA,CAAZ,CACA,GAAI,MAAA,CAAA,KAAA,GAAA,QAAA,EAA6BC,KAAK,CAAtC,MAAA,CAA+C,CAC7C,SACD,CACD,KAAM,IAAA,CAAA,KAAA,CACJ,mCAAA,GAAA,CAAA,wBAAA,CADF,2CAAM,CAAN,CAMD,CACF,CACF,C,GAED,CAAA,qB,YAKEC,gCAAc,6CAAA,eAAA,CAAA,IAAA,CAAA,cAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,kBAAA,CAAA,IAAA,EAAA,CAAA,CAAA,eAAA,CAAA,IAAA,CAAA,eAAA,CAAA,IAAA,EAAA,CAAA,CACZ,KAAA,YAAA,CAAA,EAAA,CACA,KAAA,gBAAA,CAAA,EAAA,CACD,C,4DAKDC,oBAAU,OAAVA,CAAyD,CACvDC,iBAAiB,CAAjBA,OAAiB,CAAjBA,CACA,KAAA,YAAA,CAAA,IAAA,CAAA,OAAA,EACA,KAAA,gBAAA,CAAA,IAAA,CAA2BJ,OAAO,CAAlC,QAAA,EACA,MAAA,KAAA,CACD,C,gCAODK,0BAAgB,QAAhBA,CAEyB,CACvB,KAAA,aAAA,CAAA,QAAA,CACA,MAAA,KAAA,CACD,C,qBAYDC,eAAK,OAALA,CAAwB,CACtB,GAAMC,CAAAA,IAAI,CAAV,IAAA,CACA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAA6B,CAC5C,GAAA,QAAA,CAAc,CACZD,IAAI,CAAJA,gBAAAA,CAAAA,OAAAA,CAA8B,SAAA,aAAA,CAAA,KAAA,CAAA,KAAA,CAAiC,CAC7D,GAAA,aAAA,CAAmB,CACjBE,aAAa,CAACC,QAAQ,CAARA,KAAQ,CAARA,CAAD,CAACA,CAAD,CAAqBA,QAAQ,CAARA,KAAQ,CAARA,CAAlCD,CAAkCC,CAArB,CAAbD,CACD,CAHHF,CAAAA,EAKD,CACD,GAAIA,IAAI,CAAR,aAAA,CAAwB,CACtBA,IAAI,CAAJA,aAAAA,CAAAA,KAAAA,CAAAA,MAAAA,EACD,CAVH,CAAA,CAaAT,yBAAyB,CAAzBA,KAAAA,CAAgC,KAAhCA,YAAAA,CAAmDa,OAAO,EAA1Db,CAAAA,CAAAA,QAAAA,EACD,C,qCAGHc,MAAM,CAANA,OAAAA,CAAAA,qBAAAA","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc. All rights reserved.\n *\n * You are hereby granted a non-exclusive, worldwide, royalty-free license to use,\n * copy, modify, and distribute this software in source code or binary form for use\n * in connection with the web services and APIs provided by Facebook.\n *\n * As with any software that integrates with the Facebook platform, your use of\n * this software is subject to the Facebook Developer Principles and Policies\n * [http://developers.facebook.com/policy/]. This copyright notice shall be\n * included in all copies or substantial portions of the software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst NativeGraphRequestManager = require('react-native').NativeModules\n  .FBGraphRequest;\n\nimport type GraphRequest from './FBGraphRequest';\n\ntype Callback = (error: ?Object, result: ?Object) => void;\n\nfunction _verifyParameters(request: GraphRequest) {\n  if (request.config && request.config.parameters) {\n    for (var key in request.config.parameters) {\n      var param = request.config.parameters[key];\n      if (typeof param === 'object' && param.string) {\n        continue;\n      }\n      throw new Error(\n        \"Unexpected value for parameter '\" +\n          key +\n          \"'. Request parameters \" +\n          \"need to be objects with a 'string' field.\",\n      );\n    }\n  }\n}\n\nclass FBGraphRequestManager {\n  requestBatch: Array<GraphRequest>;\n  requestCallbacks: Array<?Callback>;\n  batchCallback: Callback;\n\n  constructor() {\n    this.requestBatch = [];\n    this.requestCallbacks = [];\n  }\n\n  /**\n   * Add a graph request.\n   */\n  addRequest(request: GraphRequest): FBGraphRequestManager {\n    _verifyParameters(request);\n    this.requestBatch.push(request);\n    this.requestCallbacks.push(request.callback);\n    return this;\n  }\n\n  /**\n   * Add call back to the GraphRequestManager. Only one callback can be added.\n   * Note that invocation of the batch callback does not indicate success of every\n   * graph request made, only that the entire batch has finished executing.\n   */\n  addBatchCallback(\n    callback: (error: ?Object, result: ?Object) => void,\n  ): FBGraphRequestManager {\n    this.batchCallback = callback;\n    return this;\n  }\n\n  /**\n   * Executes requests in a batch.\n   * Note that when there's an issue with network connection the batch callback\n   * behavior differs in Android and iOS.\n   * On iOS, the batch callback returns an error if the batch fails with a network error.\n   * On Android, the batch callback always returns {\"result\": \"batch finished executing\"}\n   * after the batch time out. This is because detecting network status requires\n   * extra permission and it's unncessary for the sdk. Instead, you can use the NetInfo module\n   * in react-native to get the network status.\n   */\n  start(timeout: ?number) {\n    const that = this;\n    const callback = (error, result, response) => {\n      if (response) {\n        that.requestCallbacks.forEach((innerCallback, index, array) => {\n          if (innerCallback) {\n            innerCallback(response[index][0], response[index][1]);\n          }\n        });\n      }\n      if (that.batchCallback) {\n        that.batchCallback(error, result);\n      }\n    };\n\n    NativeGraphRequestManager.start(this.requestBatch, timeout || 0, callback);\n  }\n}\n\nmodule.exports = FBGraphRequestManager;\n"]},"metadata":{},"sourceType":"script"}