{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{withTheme}from\"../core/theming\";var DURATION=2400;var ActivityIndicator=function ActivityIndicator(_ref){var _ref$animating=_ref.animating,animating=_ref$animating===void 0?true:_ref$animating,indicatorColor=_ref.color,_ref$hidesWhenStopped=_ref.hidesWhenStopped,hidesWhenStopped=_ref$hidesWhenStopped===void 0?true:_ref$hidesWhenStopped,_ref$size=_ref.size,indicatorSize=_ref$size===void 0?'small':_ref$size,style=_ref.style,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"animating\",\"color\",\"hidesWhenStopped\",\"size\",\"style\",\"theme\"]);var _React$useRef=React.useRef(new Animated.Value(0)),timer=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(!animating&&hidesWhenStopped?0:1)),fade=_React$useRef2.current;var rotation=React.useRef(undefined);var scale=theme.animation.scale;var startRotation=React.useCallback(function(){Animated.timing(fade,{duration:200*scale,toValue:1,isInteraction:false,useNativeDriver:true}).start();if(rotation.current){timer.setValue(0);Animated.loop(rotation.current).start();}},[scale,fade,timer]);var stopRotation=function stopRotation(){if(rotation.current){rotation.current.stop();}};React.useEffect(function(){if(rotation.current===undefined){rotation.current=Animated.timing(timer,{duration:DURATION,easing:Easing.linear,useNativeDriver:Platform.OS!=='web',toValue:1,isInteraction:false});}if(animating){startRotation();}else if(hidesWhenStopped){Animated.timing(fade,{duration:200*scale,toValue:0,useNativeDriver:true,isInteraction:false}).start(stopRotation);}else{stopRotation();}},[animating,fade,hidesWhenStopped,startRotation,scale,timer]);var color=indicatorColor||theme.colors.primary;var size=typeof indicatorSize==='string'?indicatorSize==='small'?24:48:indicatorSize?indicatorSize:24;var frames=60*DURATION/1000;var easing=Easing.bezier(0.4,0.0,0.7,1.0);var containerStyle={width:size,height:size/2,overflow:'hidden'};return React.createElement(View,_extends({style:[styles.container,style]},rest,{accessible:true,accessibilityRole:\"progressbar\"}),React.createElement(Animated.View,{style:[{width:size,height:size,opacity:fade}],collapsable:false},[0,1].map(function(index){var inputRange=Array.from(new Array(frames),function(_,frameIndex){return frameIndex/(frames-1);});var outputRange=Array.from(new Array(frames),function(_,frameIndex){var progress=2*frameIndex/(frames-1);var rotation=index?+(360-15):-(180-15);if(progress>1.0){progress=2.0-progress;}var direction=index?-1:+1;return\"\".concat(direction*(180-30)*easing(progress)+rotation,\"deg\");});var layerStyle={width:size,height:size,transform:[{rotate:timer.interpolate({inputRange:[0,1],outputRange:[\"\".concat(0+30+15,\"deg\"),\"\".concat(2*360+30+15,\"deg\")]})}]};var viewportStyle={width:size,height:size,transform:[{translateY:index?-size/2:0},{rotate:timer.interpolate({inputRange:inputRange,outputRange:outputRange})}]};var offsetStyle=index?{top:size/2}:null;var lineStyle={width:size,height:size,borderColor:color,borderWidth:size/10,borderRadius:size/2};return React.createElement(Animated.View,{key:index,style:[styles.layer]},React.createElement(Animated.View,{style:layerStyle},React.createElement(Animated.View,{style:[containerStyle,offsetStyle],collapsable:false},React.createElement(Animated.View,{style:viewportStyle},React.createElement(Animated.View,{style:containerStyle,collapsable:false},React.createElement(Animated.View,{style:lineStyle}))))));})));};var styles=StyleSheet.create({container:{justifyContent:'center',alignItems:'center'},layer:_objectSpread(_objectSpread({},StyleSheet.absoluteFillObject),{},{justifyContent:'center',alignItems:'center'})});export default withTheme(ActivityIndicator);","map":{"version":3,"sources":["ActivityIndicator.tsx"],"names":["DURATION","ActivityIndicator","animating","color","hidesWhenStopped","size","indicatorSize","rest","current","timer","React","Animated","fade","rotation","animation","scale","startRotation","duration","toValue","isInteraction","useNativeDriver","stopRotation","easing","Easing","Platform","indicatorColor","theme","frames","containerStyle","width","height","overflow","styles","opacity","index","inputRange","Array","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","container","justifyContent","alignItems","layer","StyleSheet","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden',\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}