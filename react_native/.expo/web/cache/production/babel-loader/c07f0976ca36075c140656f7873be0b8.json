{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import setColor from'color';import{withTheme}from\"../core/theming\";var INDETERMINATE_DURATION=2000;var INDETERMINATE_MAX_WIDTH=0.6;var isRTL=I18nManager.isRTL;var ProgressBar=function ProgressBar(_ref){var color=_ref.color,indeterminate=_ref.indeterminate,style=_ref.style,_ref$progress=_ref.progress,progress=_ref$progress===void 0?0:_ref$progress,_ref$visible=_ref.visible,visible=_ref$visible===void 0?true:_ref$visible,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"color\",\"indeterminate\",\"style\",\"progress\",\"visible\",\"theme\"]);var _React$useRef=React.useRef(new Animated.Value(0)),timer=_React$useRef.current;var _React$useRef2=React.useRef(new Animated.Value(0)),fade=_React$useRef2.current;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),width=_React$useState2[0],setWidth=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),prevWidth=_React$useState4[0],setPrevWidth=_React$useState4[1];var indeterminateAnimation=React.useRef(null);var scale=theme.animation.scale;var startAnimation=React.useCallback(function(){Animated.timing(fade,{duration:200*scale,toValue:1,useNativeDriver:true,isInteraction:false}).start();if(indeterminate){if(!indeterminateAnimation.current){indeterminateAnimation.current=Animated.timing(timer,{duration:INDETERMINATE_DURATION,toValue:1,useNativeDriver:Platform.OS!=='web',isInteraction:false});}timer.setValue(0);Animated.loop(indeterminateAnimation.current).start();}else{Animated.timing(timer,{duration:200*scale,toValue:progress?progress:0,useNativeDriver:true,isInteraction:false}).start();}},[scale,timer,progress,indeterminate,fade]);var stopAnimation=React.useCallback(function(){if(indeterminateAnimation.current){indeterminateAnimation.current.stop();}Animated.timing(fade,{duration:200*scale,toValue:0,useNativeDriver:true,isInteraction:false}).start();},[fade,scale]);React.useEffect(function(){if(visible)startAnimation();else stopAnimation();},[visible,startAnimation,stopAnimation]);React.useEffect(function(){if(visible&&prevWidth===0){startAnimation();}},[prevWidth,startAnimation,visible]);var onLayout=function onLayout(event){setPrevWidth(width);setWidth(event.nativeEvent.layout.width);};var tintColor=color||theme.colors.primary;var trackTintColor=setColor(tintColor).alpha(0.38).rgb().string();return React.createElement(View,_extends({onLayout:onLayout},rest,{accessible:true,accessibilityRole:\"progressbar\"}),React.createElement(Animated.View,{style:[styles.container,{backgroundColor:trackTintColor,opacity:fade},style]},React.createElement(Animated.View,{style:[styles.progressBar,{backgroundColor:tintColor,width:width,transform:[{translateX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[(isRTL?1:-1)*0.5*width,(isRTL?1:-1)*0.5*INDETERMINATE_MAX_WIDTH*width,(isRTL?-1:1)*0.7*width]}:{inputRange:[0,1],outputRange:[(isRTL?1:-1)*0.5*width,0]})},{scaleX:timer.interpolate(indeterminate?{inputRange:[0,0.5,1],outputRange:[0.0001,INDETERMINATE_MAX_WIDTH,0.0001]}:{inputRange:[0,1],outputRange:[0.0001,1]})}]}]})));};var styles=StyleSheet.create({container:{height:4,overflow:'hidden'},progressBar:{flex:1}});export default withTheme(ProgressBar);","map":{"version":3,"sources":["ProgressBar.tsx"],"names":["INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","isRTL","ProgressBar","progress","visible","rest","current","timer","React","Animated","fade","indeterminateAnimation","scale","theme","startAnimation","duration","toValue","useNativeDriver","isInteraction","Platform","stopAnimation","prevWidth","onLayout","event","setPrevWidth","setWidth","tintColor","color","trackTintColor","setColor","styles","backgroundColor","opacity","width","transform","translateX","indeterminate","inputRange","outputRange","scaleX","container","height","overflow","progressBar","flex","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n  I18nManager,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\nconst { isRTL } = I18nManager;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ProgressBar = ({\n  color,\n  indeterminate,\n  style,\n  progress = 0,\n  visible = true,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(0));\n  const [width, setWidth] = React.useState<number>(0);\n  const [prevWidth, setPrevWidth] = React.useState<number>(0);\n\n  const indeterminateAnimation = React.useRef<Animated.CompositeAnimation | null>(\n    null\n  );\n\n  const { scale } = theme.animation;\n\n  const startAnimation = React.useCallback(() => {\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!indeterminateAnimation.current) {\n        indeterminateAnimation.current = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(indeterminateAnimation.current).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200 * scale,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }, [scale, timer, progress, indeterminate, fade]);\n\n  const stopAnimation = React.useCallback(() => {\n    // Stop indeterminate animation\n    if (indeterminateAnimation.current) {\n      indeterminateAnimation.current.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }, [fade, scale]);\n\n  React.useEffect(() => {\n    if (visible) startAnimation();\n    else stopAnimation();\n  }, [visible, startAnimation, stopAnimation]);\n\n  React.useEffect(() => {\n    // Start animation the very first time when previously the width was unclear\n    if (visible && prevWidth === 0) {\n      startAnimation();\n    }\n  }, [prevWidth, startAnimation, visible]);\n\n  const onLayout = (event: LayoutChangeEvent) => {\n    setPrevWidth(width);\n    setWidth(event.nativeEvent.layout.width);\n  };\n\n  const tintColor = color || theme.colors.primary;\n  const trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n\n  return (\n    <View\n      onLayout={onLayout}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n    >\n      <Animated.View\n        style={[\n          styles.container,\n          { backgroundColor: trackTintColor, opacity: fade },\n          style,\n        ]}\n      >\n        <Animated.View\n          style={[\n            styles.progressBar,\n            {\n              backgroundColor: tintColor,\n              width,\n              transform: [\n                {\n                  translateX: timer.interpolate(\n                    indeterminate\n                      ? {\n                          inputRange: [0, 0.5, 1],\n                          outputRange: [\n                            (isRTL ? 1 : -1) * 0.5 * width,\n                            (isRTL ? 1 : -1) *\n                              0.5 *\n                              INDETERMINATE_MAX_WIDTH *\n                              width,\n                            (isRTL ? -1 : 1) * 0.7 * width,\n                          ],\n                        }\n                      : {\n                          inputRange: [0, 1],\n                          outputRange: [(isRTL ? 1 : -1) * 0.5 * width, 0],\n                        }\n                  ),\n                },\n                {\n                  // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                  scaleX: timer.interpolate(\n                    indeterminate\n                      ? {\n                          inputRange: [0, 0.5, 1],\n                          outputRange: [\n                            0.0001,\n                            INDETERMINATE_MAX_WIDTH,\n                            0.0001,\n                          ],\n                        }\n                      : {\n                          inputRange: [0, 1],\n                          outputRange: [0.0001, 1],\n                        }\n                  ),\n                },\n              ],\n            },\n          ]}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}