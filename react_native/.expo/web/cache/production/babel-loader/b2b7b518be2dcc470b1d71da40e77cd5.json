{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _extends2 from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Platform from\"react-native-web/dist/exports/Platform\";import color from'color';import{withTheme}from\"../../core/theming\";var TouchableRipple=function TouchableRipple(_ref){var style=_ref.style,_background=_ref.background,_ref$borderless=_ref.borderless,borderless=_ref$borderless===void 0?false:_ref$borderless,disabledProp=_ref.disabled,rippleColor=_ref.rippleColor,_underlayColor=_ref.underlayColor,children=_ref.children,theme=_ref.theme,rest=_objectWithoutProperties(_ref,[\"style\",\"background\",\"borderless\",\"disabled\",\"rippleColor\",\"underlayColor\",\"children\",\"theme\"]);var handlePressIn=function handlePressIn(e){var _touches$;var centered=rest.centered,onPressIn=rest.onPressIn;onPressIn===null||onPressIn===void 0?void 0:onPressIn(e);var dark=theme.dark,colors=theme.colors;var calculatedRippleColor=rippleColor||color(colors.text).alpha(dark?0.32:0.2).rgb().string();var button=e.currentTarget;var style=window.getComputedStyle(button);var dimensions=button.getBoundingClientRect();var touchX;var touchY;var _e$nativeEvent=e.nativeEvent,changedTouches=_e$nativeEvent.changedTouches,touches=_e$nativeEvent.touches;var touch=(_touches$=touches===null||touches===void 0?void 0:touches[0])!==null&&_touches$!==void 0?_touches$:changedTouches===null||changedTouches===void 0?void 0:changedTouches[0];if(centered||!touch){touchX=dimensions.width/2;touchY=dimensions.height/2;}else{var _touch$locationX,_touch$locationY;touchX=(_touch$locationX=touch.locationX)!==null&&_touch$locationX!==void 0?_touch$locationX:e.pageX;touchY=(_touch$locationY=touch.locationY)!==null&&_touch$locationY!==void 0?_touch$locationY:e.pageY;}var size=centered?Math.min(dimensions.width,dimensions.height)*1.25:Math.max(dimensions.width,dimensions.height)*2;var container=document.createElement('span');container.setAttribute('data-paper-ripple','');_extends2(container.style,{position:'absolute',pointerEvents:'none',top:'0',left:'0',right:'0',bottom:'0',borderTopLeftRadius:style.borderTopLeftRadius,borderTopRightRadius:style.borderTopRightRadius,borderBottomRightRadius:style.borderBottomRightRadius,borderBottomLeftRadius:style.borderBottomLeftRadius,overflow:centered?'visible':'hidden'});var ripple=document.createElement('span');_extends2(ripple.style,{position:'absolute',pointerEvents:'none',backgroundColor:calculatedRippleColor,borderRadius:'50%',transitionProperty:'transform opacity',transitionDuration:\"\".concat(Math.min(size*1.5,350),\"ms\"),transitionTimingFunction:'linear',transformOrigin:'center',transform:'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',opacity:'0.5',left:\"\".concat(touchX,\"px\"),top:\"\".concat(touchY,\"px\"),width:\"\".concat(size,\"px\"),height:\"\".concat(size,\"px\")});container.appendChild(ripple);button.appendChild(container);requestAnimationFrame(function(){requestAnimationFrame(function(){_extends2(ripple.style,{transform:'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',opacity:'1'});});});};var handlePressOut=function handlePressOut(e){var _rest$onPressOut;(_rest$onPressOut=rest.onPressOut)===null||_rest$onPressOut===void 0?void 0:_rest$onPressOut.call(rest,e);var containers=e.currentTarget.querySelectorAll('[data-paper-ripple]');requestAnimationFrame(function(){requestAnimationFrame(function(){containers.forEach(function(container){var ripple=container.firstChild;_extends2(ripple.style,{transitionDuration:'250ms',opacity:0});setTimeout(function(){var parentNode=container.parentNode;if(parentNode){parentNode.removeChild(container);}},500);});});});};var disabled=disabledProp||!rest.onPress;return React.createElement(TouchableWithoutFeedback,_extends({},rest,{onPressIn:handlePressIn,onPressOut:handlePressOut,disabled:disabled}),React.createElement(View,{style:[styles.touchable,borderless&&styles.borderless,style]},React.Children.only(children)));};TouchableRipple.supported=true;var styles=StyleSheet.create({touchable:_objectSpread({position:'relative'},Platform.OS==='web'&&{cursor:'pointer'}),borderless:{overflow:'hidden'}});export default withTheme(TouchableRipple);","map":{"version":3,"sources":["TouchableRipple.tsx"],"names":["TouchableRipple","background","borderless","disabled","underlayColor","rest","handlePressIn","e","onPressIn","colors","calculatedRippleColor","rippleColor","color","dark","button","style","window","dimensions","touches","touch","changedTouches","centered","touchX","touchY","size","Math","container","document","Object","position","pointerEvents","top","left","right","bottom","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","overflow","ripple","backgroundColor","borderRadius","transitionProperty","transitionDuration","transitionTimingFunction","transformOrigin","transform","opacity","width","height","requestAnimationFrame","handlePressOut","containers","setTimeout","parentNode","disabledProp","styles","React","touchable","Platform","cursor","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  GestureResponderEvent,\n  Platform,\n} from 'react-native';\nimport color from 'color';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Whether to render the ripple outside the view bounds.\n   */\n  borderless?: boolean;\n  /**\n   * Type of background drawabale to display the feedback (Android).\n   * https://reactnative.dev/docs/touchablenativefeedback#background\n   */\n  background?: Object;\n  /**\n   * Whether to start the ripple at the center (Web).\n   */\n  centered?: boolean;\n  /**\n   * Whether to prevent interaction with the touchable.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press. If not set, will cause the touchable to be disabled.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Function to execute on long press.\n   */\n  onLongPress?: (e: GestureResponderEvent) => void;\n  /**\n   * Color of the ripple effect (Android >= 5.0 and Web).\n   */\n  rippleColor?: string;\n  /**\n   * Color of the underlay for the highlight effect (Android < 5.0 and iOS).\n   */\n  underlayColor?: string;\n  /**\n   * Content of the `TouchableRipple`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A wrapper for views that should respond to touches.\n * Provides a material \"ink ripple\" interaction effect for supported platforms (>= Android Lollipop).\n * On unsupported platforms, it falls back to a highlight effect.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/touchable-ripple.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Text, TouchableRipple } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <TouchableRipple\n *     onPress={() => console.log('Pressed')}\n *     rippleColor=\"rgba(0, 0, 0, .32)\"\n *   >\n *     <Text>Press anywhere</Text>\n *   </TouchableRipple>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends TouchableWithoutFeedback props https://reactnative.dev/docs/touchablewithoutfeedback#props\n */\nconst TouchableRipple = ({\n  style,\n  background: _background,\n  borderless = false,\n  disabled: disabledProp,\n  rippleColor,\n  underlayColor: _underlayColor,\n  children,\n  theme,\n  ...rest\n}: Props) => {\n  const handlePressIn = (e: any) => {\n    const { centered, onPressIn } = rest;\n\n    onPressIn?.(e);\n\n    const { dark, colors } = theme;\n    const calculatedRippleColor =\n      rippleColor ||\n      color(colors.text)\n        .alpha(dark ? 0.32 : 0.2)\n        .rgb()\n        .string();\n\n    const button = e.currentTarget;\n    const style = window.getComputedStyle(button);\n    const dimensions = button.getBoundingClientRect();\n\n    let touchX;\n    let touchY;\n\n    const { changedTouches, touches } = e.nativeEvent;\n    const touch = touches?.[0] ?? changedTouches?.[0];\n\n    // If centered or it was pressed using keyboard - enter or space\n    if (centered || !touch) {\n      touchX = dimensions.width / 2;\n      touchY = dimensions.height / 2;\n    } else {\n      touchX = touch.locationX ?? e.pageX;\n      touchY = touch.locationY ?? e.pageY;\n    }\n\n    // Get the size of the button to determine how big the ripple should be\n    const size = centered\n      ? // If ripple is always centered, we don't need to make it too big\n        Math.min(dimensions.width, dimensions.height) * 1.25\n      : // Otherwise make it twice as big so clicking on one end spreads ripple to other\n        Math.max(dimensions.width, dimensions.height) * 2;\n\n    // Create a container for our ripple effect so we don't need to change the parent's style\n    const container = document.createElement('span');\n\n    container.setAttribute('data-paper-ripple', '');\n\n    Object.assign(container.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      borderTopLeftRadius: style.borderTopLeftRadius,\n      borderTopRightRadius: style.borderTopRightRadius,\n      borderBottomRightRadius: style.borderBottomRightRadius,\n      borderBottomLeftRadius: style.borderBottomLeftRadius,\n      overflow: centered ? 'visible' : 'hidden',\n    });\n\n    // Create span to show the ripple effect\n    const ripple = document.createElement('span');\n\n    Object.assign(ripple.style, {\n      position: 'absolute',\n      pointerEvents: 'none',\n      backgroundColor: calculatedRippleColor,\n      borderRadius: '50%',\n\n      /* Transition configuration */\n      transitionProperty: 'transform opacity',\n      transitionDuration: `${Math.min(size * 1.5, 350)}ms`,\n      transitionTimingFunction: 'linear',\n      transformOrigin: 'center',\n\n      /* We'll animate these properties */\n      transform: 'translate3d(-50%, -50%, 0) scale3d(0.1, 0.1, 0.1)',\n      opacity: '0.5',\n\n      // Position the ripple where cursor was\n      left: `${touchX}px`,\n      top: `${touchY}px`,\n      width: `${size}px`,\n      height: `${size}px`,\n    });\n\n    // Finally, append it to DOM\n    container.appendChild(ripple);\n    button.appendChild(container);\n\n    // rAF runs in the same frame as the event handler\n    // Use double rAF to ensure the transition class is added in next frame\n    // This will make sure that the transition animation is triggered\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        Object.assign(ripple.style, {\n          transform: 'translate3d(-50%, -50%, 0) scale3d(1, 1, 1)',\n          opacity: '1',\n        });\n      });\n    });\n  };\n\n  const handlePressOut = (e: any) => {\n    rest.onPressOut?.(e);\n\n    const containers = e.currentTarget.querySelectorAll(\n      '[data-paper-ripple]'\n    ) as HTMLElement[];\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        containers.forEach((container) => {\n          const ripple = container.firstChild;\n\n          // @ts-ignore\n          Object.assign(ripple.style, {\n            transitionDuration: '250ms',\n            opacity: 0,\n          });\n\n          // Finally remove the span after the transition\n          setTimeout(() => {\n            const { parentNode } = container;\n\n            if (parentNode) {\n              parentNode.removeChild(container);\n            }\n          }, 500);\n        });\n      });\n    });\n  };\n\n  const disabled = disabledProp || !rest.onPress;\n\n  return (\n    <TouchableWithoutFeedback\n      {...rest}\n      onPressIn={handlePressIn}\n      onPressOut={handlePressOut}\n      disabled={disabled}\n    >\n      <View style={[styles.touchable, borderless && styles.borderless, style]}>\n        {React.Children.only(children)}\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\n/**\n * Whether ripple effect is supported.\n */\nTouchableRipple.supported = true;\n\nconst styles = StyleSheet.create({\n  touchable: {\n    position: 'relative',\n    ...(Platform.OS === 'web' && { cursor: 'pointer' }),\n  },\n  borderless: {\n    overflow: 'hidden',\n  },\n});\n\nexport default withTheme(TouchableRipple);\n"]},"metadata":{},"sourceType":"module"}