{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import View from\"react-native-web/dist/exports/View\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import color from'color';import MaterialCommunityIcon from\"../MaterialCommunityIcon\";import Text from\"../Typography/Text\";import{withTheme}from\"../../core/theming\";var DataTableTitle=function DataTableTitle(_ref){var numeric=_ref.numeric,children=_ref.children,onPress=_ref.onPress,sortDirection=_ref.sortDirection,theme=_ref.theme,style=_ref.style,_ref$numberOfLines=_ref.numberOfLines,numberOfLines=_ref$numberOfLines===void 0?1:_ref$numberOfLines,rest=_objectWithoutProperties(_ref,[\"numeric\",\"children\",\"onPress\",\"sortDirection\",\"theme\",\"style\",\"numberOfLines\"]);var _React$useRef=React.useRef(new Animated.Value(sortDirection==='ascending'?0:1)),spinAnim=_React$useRef.current;React.useEffect(function(){Animated.timing(spinAnim,{toValue:sortDirection==='ascending'?0:1,duration:150,useNativeDriver:true}).start();},[sortDirection,spinAnim]);var textColor=color(theme.colors.text).alpha(0.6).rgb().string();var spin=spinAnim.interpolate({inputRange:[0,1],outputRange:['0deg','180deg']});var icon=sortDirection?React.createElement(Animated.View,{style:[styles.icon,{transform:[{rotate:spin}]}]},React.createElement(MaterialCommunityIcon,{name:\"arrow-up\",size:16,color:theme.colors.text,direction:I18nManager.isRTL?'rtl':'ltr'})):null;return React.createElement(TouchableWithoutFeedback,_extends({disabled:!onPress,onPress:onPress},rest),React.createElement(View,{style:[styles.container,numeric&&styles.right,style]},icon,React.createElement(Text,{style:[styles.cell,sortDirection?styles.sorted:{color:textColor}],numberOfLines:numberOfLines},children)));};DataTableTitle.displayName='DataTable.Title';var styles=StyleSheet.create({container:{flex:1,flexDirection:'row',alignContent:'center',paddingVertical:12},right:{justifyContent:'flex-end'},cell:{height:24,lineHeight:24,fontSize:12,fontWeight:'500',alignItems:'center'},sorted:{marginLeft:8},icon:{height:24,justifyContent:'center'}});export default withTheme(DataTableTitle);export{DataTableTitle};","map":{"version":3,"sources":["DataTableTitle.tsx"],"names":["DataTableTitle","numberOfLines","rest","current","spinAnim","React","Animated","sortDirection","toValue","duration","useNativeDriver","textColor","color","theme","spin","inputRange","outputRange","icon","styles","transform","rotate","I18nManager","onPress","numeric","container","flex","flexDirection","alignContent","paddingVertical","right","justifyContent","cell","height","lineHeight","fontSize","fontWeight","alignItems","sorted","marginLeft","withTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  I18nManager,\n} from 'react-native';\nimport color from 'color';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof TouchableWithoutFeedback> & {\n  /**\n   * Text content of the `DataTableTitle`.\n   */\n  children: React.ReactNode;\n  /**\n   * Align the text to the right. Generally monetary or number fields are aligned to right.\n   */\n  numeric?: boolean;\n  /**\n   * Direction of sorting. An arrow indicating the direction is displayed when this is given.\n   */\n  sortDirection?: 'ascending' | 'descending';\n  /**\n   * The number of lines to show.\n   */\n  numberOfLines?: number;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to display title in table header.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-header.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *       <DataTable>\n *         <DataTable.Header>\n *           <DataTable.Title\n *             sortDirection='descending'\n *           >\n *             Dessert\n *           </DataTable.Title>\n *           <DataTable.Title numeric>Calories</DataTable.Title>\n *           <DataTable.Title numeric>Fat (g)</DataTable.Title>\n *         </DataTable.Header>\n *       </DataTable>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nconst DataTableTitle = ({\n  numeric,\n  children,\n  onPress,\n  sortDirection,\n  theme,\n  style,\n  numberOfLines = 1,\n  ...rest\n}: Props) => {\n  const { current: spinAnim } = React.useRef<Animated.Value>(\n    new Animated.Value(sortDirection === 'ascending' ? 0 : 1)\n  );\n\n  React.useEffect(() => {\n    Animated.timing(spinAnim, {\n      toValue: sortDirection === 'ascending' ? 0 : 1,\n      duration: 150,\n      useNativeDriver: true,\n    }).start();\n  }, [sortDirection, spinAnim]);\n\n  const textColor = color(theme.colors.text).alpha(0.6).rgb().string();\n\n  const spin = spinAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '180deg'],\n  });\n\n  const icon = sortDirection ? (\n    <Animated.View style={[styles.icon, { transform: [{ rotate: spin }] }]}>\n      <MaterialCommunityIcon\n        name=\"arrow-up\"\n        size={16}\n        color={theme.colors.text}\n        direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n      />\n    </Animated.View>\n  ) : null;\n\n  return (\n    <TouchableWithoutFeedback disabled={!onPress} onPress={onPress} {...rest}>\n      <View style={[styles.container, numeric && styles.right, style]}>\n        {icon}\n\n        <Text\n          style={[\n            styles.cell,\n            sortDirection ? styles.sorted : { color: textColor },\n          ]}\n          numberOfLines={numberOfLines}\n        >\n          {children}\n        </Text>\n      </View>\n    </TouchableWithoutFeedback>\n  );\n};\n\nDataTableTitle.displayName = 'DataTable.Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignContent: 'center',\n    paddingVertical: 12,\n  },\n\n  right: {\n    justifyContent: 'flex-end',\n  },\n\n  cell: {\n    height: 24,\n    lineHeight: 24,\n    fontSize: 12,\n    fontWeight: '500',\n    alignItems: 'center',\n  },\n\n  sorted: {\n    marginLeft: 8,\n  },\n\n  icon: {\n    height: 24,\n    justifyContent: 'center',\n  },\n});\n\nexport default withTheme(DataTableTitle);\n\n// @component-docs ignore-next-line\nexport { DataTableTitle };\n"]},"metadata":{},"sourceType":"module"}