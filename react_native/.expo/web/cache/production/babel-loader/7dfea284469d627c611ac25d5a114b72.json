{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import color from'color';import{black}from\"../../styles/colors\";import IconButton from\"../IconButton\";var AppbarAction=function AppbarAction(_ref){var _ref$size=_ref.size,size=_ref$size===void 0?24:_ref$size,_ref$color=_ref.color,iconColor=_ref$color===void 0?color(black).alpha(0.54).rgb().string():_ref$color,icon=_ref.icon,disabled=_ref.disabled,onPress=_ref.onPress,accessibilityLabel=_ref.accessibilityLabel,rest=_objectWithoutProperties(_ref,[\"size\",\"color\",\"icon\",\"disabled\",\"onPress\",\"accessibilityLabel\"]);return React.createElement(IconButton,_extends({size:size,onPress:onPress,color:iconColor,icon:icon,disabled:disabled,accessibilityLabel:accessibilityLabel,animated:true},rest));};AppbarAction.displayName='Appbar.Action';export default AppbarAction;export{AppbarAction};","map":{"version":3,"sources":["AppbarAction.tsx"],"names":["AppbarAction","size","color","iconColor","rest"],"mappings":"4WAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,MAAA,CAAA,KAAA,KAAA,OAAA,CAMA,OAAA,KAAA,2BACA,MAAA,CAAA,UAAA,qBAmEA,GAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,0BACnBC,IADmB,CACnBA,IADmB,oBAAC,EAAD,2BAEnBC,KAFmB,CAEZC,SAFY,qBAEAD,KAAK,CAALA,KAAK,CAALA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,GAAAA,GAFC,MAEDA,EAFA,YAAC,IAAD,MAAC,IAAD,CAAC,QAAD,MAAC,QAAD,CAAC,OAAD,MAAC,OAAD,CAAC,kBAAD,MAAC,kBAAD,CAOhBE,IAPgB,wGASnB,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,QAAA,CAAA,CACE,IAAI,CADN,IAAA,CAEE,OAAO,CAFT,OAAA,CAGE,KAAK,CAHP,SAAA,CAIE,IAAI,CAJN,IAAA,CAKE,QAAQ,CALV,QAAA,CAME,kBAAkB,CANpB,kBAAA,CAOE,QAAQ,CAAA,IAPV,CAAA,CATF,IASE,CAAA,CATmB,EAArB,CAqBAJ,YAAY,CAAZA,WAAAA,CAAAA,eAAAA,CAEA,cAAA,CAAA,YAAA,CAGA,OAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport type {\n  StyleProp,\n  ViewStyle,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport type { IconSource } from '../Icon';\n\ntype Props = React.ComponentPropsWithoutRef<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<TouchableWithoutFeedback>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-android.png\" />\n *       <figcaption>Android</figcaption>\n *   </figure>\n * </div>\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/appbar-action-ios.png\" />\n *       <figcaption>iOS</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { Platform } from 'react-native';\n *\n * const MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n *\n * const MyComponent = () => (\n *     <Appbar.Header>\n *        <Appbar.Content title=\"Title\" subtitle={'Subtitle'} />\n *         <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n *         <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n *     </Appbar.Header>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst AppbarAction = ({\n  size = 24,\n  color: iconColor = color(black).alpha(0.54).rgb().string(),\n  icon,\n  disabled,\n  onPress,\n  accessibilityLabel,\n  ...rest\n}: Props) => (\n  <IconButton\n    size={size}\n    onPress={onPress}\n    color={iconColor}\n    icon={icon}\n    disabled={disabled}\n    accessibilityLabel={accessibilityLabel}\n    animated\n    {...rest}\n  />\n);\n\nAppbarAction.displayName = 'Appbar.Action';\n\nexport default AppbarAction;\n\n// @component-docs ignore-next-line\nexport { AppbarAction };\n"]},"metadata":{},"sourceType":"module"}