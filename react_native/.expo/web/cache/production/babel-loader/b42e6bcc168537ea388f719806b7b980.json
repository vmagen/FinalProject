{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Title from\"../Typography/Title\";import{withTheme}from\"../../core/theming\";var DialogTitle=function DialogTitle(_ref){var children=_ref.children,theme=_ref.theme,style=_ref.style,rest=_objectWithoutProperties(_ref,[\"children\",\"theme\",\"style\"]);return React.createElement(Title,_extends({accessibilityTraits:\"header\",accessibilityRole:\"header\",style:[styles.text,{color:theme.colors.text},style]},rest),children);};DialogTitle.displayName='Dialog.Title';var styles=StyleSheet.create({text:{marginTop:22,marginBottom:18,marginHorizontal:24}});export default withTheme(DialogTitle);export{DialogTitle};","map":{"version":3,"sources":["DialogTitle.tsx"],"names":["DialogTitle","rest","styles","color","theme","text","marginTop","marginBottom","marginHorizontal","withTheme"],"mappings":"4WAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,iEAEA,MAAA,CAAA,KAAA,2BACA,OAAA,SAAA,0BAgDA,GAAMA,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAC,CAAA,QAAD,MAAC,QAAD,CAAC,KAAD,MAAC,KAAD,CAAC,KAAD,MAAC,KAAD,CAA8BC,IAA9B,mEAClB,CAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,CAAA,CACE,mBAAmB,CADrB,QAAA,CAEE,iBAAiB,CAFnB,QAAA,CAGE,KAAK,CAAE,CAACC,MAAM,CAAP,IAAA,CAAc,CAAEC,KAAK,CAAEC,KAAK,CAALA,MAAAA,CAAaC,IAAtB,CAAd,CAAA,KAAA,CAHT,CAAA,CAAA,IAAA,CAAA,CADF,QACE,CADkB,EAApB,CAWAL,WAAW,CAAXA,WAAAA,CAAAA,cAAAA,CAEA,GAAME,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BG,IAAI,CAAE,CACJC,SAAS,CADL,EAAA,CAEJC,YAAY,CAFR,EAAA,CAGJC,gBAAgB,CAAE,EAHd,CADyB,CAAlB,CAAf,CAQA,cAAeC,CAAAA,SAAS,CAAxB,WAAwB,CAAxB,CAGA,OAAA,WAAA","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, StyleProp, TextStyle } from 'react-native';\nimport Title from '../Typography/Title';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentPropsWithRef<typeof Title> & {\n  /**\n   * Title text for the `DialogTitle`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * A component to show a title in a Dialog.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/dialog-title.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Paragraph, Dialog, Portal } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.Title>This is a title</Dialog.Title>\n *         <Dialog.Content>\n *           <Paragraph>This is simple dialog</Paragraph>\n *         </Dialog.Content>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogTitle = ({ children, theme, style, ...rest }: Props) => (\n  <Title\n    accessibilityTraits=\"header\"\n    accessibilityRole=\"header\"\n    style={[styles.text, { color: theme.colors.text }, style]}\n    {...rest}\n  >\n    {children}\n  </Title>\n);\n\nDialogTitle.displayName = 'Dialog.Title';\n\nconst styles = StyleSheet.create({\n  text: {\n    marginTop: 22,\n    marginBottom: 18,\n    marginHorizontal: 24,\n  },\n});\n\nexport default withTheme(DialogTitle);\n\n// @component-docs ignore-next-line\nexport { DialogTitle };\n"]},"metadata":{},"sourceType":"module"}