{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _extends from\"@babel/runtime/helpers/extends\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import*as React from'react';import AccessibilityInfo from\"react-native-web/dist/exports/AccessibilityInfo\";import Appearance from\"react-native-web/dist/exports/Appearance\";import{ThemeProvider}from\"./theming\";import{Provider as SettingsProvider}from\"./settings\";import MaterialCommunityIcon from\"../components/MaterialCommunityIcon\";import PortalHost from\"../components/Portal/PortalHost\";import DefaultTheme from\"../styles/DefaultTheme\";import DarkTheme from\"../styles/DarkTheme\";var Provider=function Provider(_ref){var props=_extends({},_ref);var colorSchemeName=!props.theme&&(Appearance===null||Appearance===void 0?void 0:Appearance.getColorScheme())||'light';var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),reduceMotionEnabled=_React$useState2[0],setReduceMotionEnabled=_React$useState2[1];var _React$useState3=React.useState(colorSchemeName),_React$useState4=_slicedToArray(_React$useState3,2),colorScheme=_React$useState4[0],setColorScheme=_React$useState4[1];var handleAppearanceChange=function handleAppearanceChange(preferences){var colorScheme=preferences.colorScheme;setColorScheme(colorScheme);};React.useEffect(function(){if(!props.theme){AccessibilityInfo.addEventListener('reduceMotionChanged',setReduceMotionEnabled);}return function(){if(!props.theme){AccessibilityInfo.removeEventListener('reduceMotionChanged',setReduceMotionEnabled);}};},[props.theme]);React.useEffect(function(){if(!props.theme)Appearance===null||Appearance===void 0?void 0:Appearance.addChangeListener(handleAppearanceChange);return function(){if(!props.theme)Appearance===null||Appearance===void 0?void 0:Appearance.removeChangeListener(handleAppearanceChange);};},[props.theme]);var getTheme=function getTheme(){var providedTheme=props.theme;if(providedTheme){return providedTheme;}else{var theme=colorScheme==='dark'?DarkTheme:DefaultTheme;return _objectSpread(_objectSpread({},theme),{},{animation:_objectSpread(_objectSpread({},theme.animation),{},{scale:reduceMotionEnabled?0:1})});}};var children=props.children,settings=props.settings;return React.createElement(PortalHost,null,React.createElement(SettingsProvider,{value:settings||{icon:MaterialCommunityIcon}},React.createElement(ThemeProvider,{theme:getTheme()},children)));};export default Provider;","map":{"version":3,"sources":["Provider.tsx"],"names":["Provider","props","colorSchemeName","Appearance","React","handleAppearanceChange","preferences","colorScheme","setColorScheme","AccessibilityInfo","getTheme","theme","providedTheme","animation","scale","reduceMotionEnabled","settings","icon","MaterialCommunityIcon"],"mappings":"q9BAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,gJAEA,OAAA,aAAA,iBACA,OAASA,QAAQ,GAAjB,CAAA,gBAAA,kBACA,MAAA,CAAA,qBAAA,2CACA,MAAA,CAAA,UAAA,uCACA,MAAA,CAAA,YAAA,8BACA,MAAA,CAAA,SAAA,2BAQA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAyB,IAAnBC,CAAAA,KAAmB,mBACxC,GAAMC,CAAAA,eAAe,CAClB,CAACD,KAAK,CAAN,KAAA,GAAgBE,UAAhB,GAAA,IAAgBA,EAAAA,UAAhB,GAAA,IAAA,EAAgBA,CAAhB,IAAA,EAAgBA,CAAAA,UAAU,CAA3B,cAAiBA,EAAhB,GADH,OAAA,CADwC,oBAIcC,KAAK,CAALA,QAAAA,CAAtD,KAAsDA,CAJd,oDAIlC,mBAJkC,qBAIlC,sBAJkC,0CAOFA,KAAK,CAALA,QAAAA,CAAtC,eAAsCA,CAPE,qDAOlC,WAPkC,qBAOlC,cAPkC,qBAWxC,GAAMC,CAAAA,sBAAsB,CAC1BC,QADID,CAAAA,sBACJC,CAAAA,WAD6B,CAE1B,IACKC,CAAAA,WADL,CACH,WADG,CACKA,WADL,CAEHC,cAAc,CAAdA,WAAc,CAAdA,CAJF,CAAA,CAOAJ,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAI,CAACH,KAAK,CAAV,KAAA,CAAkB,CAChBQ,iBAAiB,CAAjBA,gBAAAA,CAAAA,qBAAAA,CAAAA,sBAAAA,EAID,CACD,MAAO,WAAM,CACX,GAAI,CAACR,KAAK,CAAV,KAAA,CAAkB,CAChBQ,iBAAiB,CAAjBA,mBAAAA,CAAAA,qBAAAA,CAAAA,sBAAAA,EAID,CANH,CAAA,CAPFL,CAAAA,CAeG,CAACH,KAAK,CAfTG,KAeG,CAfHA,EAiBAA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAI,CAACH,KAAK,CAAV,KAAA,CAAkBE,UAAU,GAAVA,IAAAA,EAAAA,UAAU,GAAA,IAAVA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,UAAU,CAAVA,iBAAAA,CAAAA,sBAAAA,CAAAA,CAClB,MAAO,WAAM,CACX,GAAI,CAACF,KAAK,CAAV,KAAA,CACEE,UAAU,GAAVA,IAAAA,EAAAA,UAAU,GAAA,IAAVA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,UAAU,CAAVA,oBAAAA,CAAAA,sBAAAA,CAAAA,CAFJ,CAAA,CAFFC,CAAAA,CAMG,CAACH,KAAK,CANTG,KAMG,CANHA,EAQA,GAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,IACNE,CAAAA,aADM,CACrB,KADqB,CACbD,KADa,CAGrB,GAAA,aAAA,CAAmB,CACjB,MAAA,CAAA,aAAA,CADF,CAAA,IAEO,CACL,GAAMA,CAAAA,KAAK,CAAIJ,WAAW,GAAXA,MAAAA,CAAAA,SAAAA,CAAf,YAAA,CAIA,sCAAO,KAAP,MAEEM,SAAS,gCACJF,KAAK,CADC,SAAF,MAEPG,KAAK,CAAEC,mBAAmB,CAAA,CAAA,CAAO,CAF1B,EAFX,GAOD,CAjBH,CAAA,CA3CwC,GA+DlC,CAAA,QA/DkC,CA+DxC,KA/DwC,CA+DlC,QA/DkC,CA+DtBC,QA/DsB,CA+DxC,KA/DwC,CA+DtBA,QA/DsB,CAgExC,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,UAAA,CAAA,IAAA,CACE,KAAA,CAAA,aAAA,CAAA,gBAAA,CAAA,CAAkB,KAAK,CAAEA,QAAQ,EAAI,CAAEC,IAAI,CAAEC,qBAAR,CAArC,CAAA,CACE,KAAA,CAAA,aAAA,CAAA,aAAA,CAAA,CAAe,KAAK,CAAER,QAAQ,EAA9B,CAAA,CAHN,QAGM,CADF,CADF,CADF,CAhEF,CAAA,CAyEA,cAAA,CAAA,QAAA","sourcesContent":["import * as React from 'react';\nimport { AccessibilityInfo, Appearance, ColorSchemeName } from 'react-native';\nimport { ThemeProvider } from './theming';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport DefaultTheme from '../styles/DefaultTheme';\nimport DarkTheme from '../styles/DarkTheme';\n\ntype Props = {\n  children: React.ReactNode;\n  theme?: ReactNativePaper.Theme;\n  settings?: Settings;\n};\n\nconst Provider = ({ ...props }: Props) => {\n  const colorSchemeName =\n    (!props.theme && Appearance?.getColorScheme()) || 'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] = React.useState<boolean>(\n    false\n  );\n  const [colorScheme, setColorScheme] = React.useState<ColorSchemeName>(\n    colorSchemeName\n  );\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    if (!props.theme) {\n      AccessibilityInfo.addEventListener(\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        AccessibilityInfo.removeEventListener(\n          'reduceMotionChanged',\n          setReduceMotionEnabled\n        );\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    if (!props.theme) Appearance?.addChangeListener(handleAppearanceChange);\n    return () => {\n      if (!props.theme)\n        Appearance?.removeChangeListener(handleAppearanceChange);\n    };\n  }, [props.theme]);\n\n  const getTheme = () => {\n    const { theme: providedTheme } = props;\n\n    if (providedTheme) {\n      return providedTheme;\n    } else {\n      const theme = (colorScheme === 'dark'\n        ? DarkTheme\n        : DefaultTheme) as ReactNativePaper.Theme;\n\n      return {\n        ...theme,\n        animation: {\n          ...theme.animation,\n          scale: reduceMotionEnabled ? 0 : 1,\n        },\n      };\n    }\n  };\n\n  const { children, settings } = props;\n  return (\n    <PortalHost>\n      <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n        <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n      </SettingsProvider>\n    </PortalHost>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}