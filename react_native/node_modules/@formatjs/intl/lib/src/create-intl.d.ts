import { OptionalIntlConfig, IntlCache, IntlShape, IntlConfig } from './types';
export interface CreateIntlFn<T = string, C extends OptionalIntlConfig<T> = OptionalIntlConfig<T>, S extends IntlShape<T> = IntlShape<T>> {
    (config: C, cache?: IntlCache): S;
}
/**
 * Create intl object
 * @param config intl config
 * @param cache cache for formatter instances to prevent memory leak
 */
export declare function createIntl<T = string>(config: OptionalIntlConfig<T>, cache?: IntlCache): IntlShape<T> & {
    /**
     * This is not really public, primarily for ember-intl
     * @param messages Additional messages
     */
    __addMessages(messages: IntlConfig<T>['messages']): void;
};
//# sourceMappingURL=create-intl.d.ts.map